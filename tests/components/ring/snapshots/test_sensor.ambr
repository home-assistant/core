# serializer version: 1
# name: test_states[sensor.downstairs_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.downstairs_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'volume',
    'unique_id': '123456-volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.downstairs_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Downstairs Volume',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.downstairs_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_states[sensor.downstairs_wifi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.downstairs_wifi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '123456-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.downstairs_wifi_signal_category-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Downstairs Wi-Fi signal category',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.downstairs_wifi_signal_category',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.downstairs_wifi_signal_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.downstairs_wifi_signal_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Wi-Fi signal strength',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_strength',
    'unique_id': '123456-wifi_signal_strength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_states[sensor.downstairs_wifi_signal_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'signal_strength',
      'friendly_name': 'Downstairs Wi-Fi signal strength',
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.downstairs_wifi_signal_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '765432-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_states[sensor.front_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'battery',
      'friendly_name': 'Front Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '80',
  })
# ---
# name: test_states[sensor.front_door_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_door_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '987654-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_states[sensor.front_door_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'battery',
      'friendly_name': 'Front Door Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_door_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_states[sensor.front_door_last_activity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.front_door_last_activity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Last activity',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'last_activity',
    'unique_id': '987654-last_activity',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_door_last_activity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'timestamp',
      'friendly_name': 'Front Door Last activity',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_door_last_activity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_door_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.front_door_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'volume',
    'unique_id': '765432-volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_door_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Front Volume',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_door_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11',
  })
# ---
# name: test_states[sensor.front_door_wi_fi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_door_wi_fi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '987654-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_door_wifi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_door_wifi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '987654-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_door_wifi_signal_category-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Front Door Wi-Fi signal category',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_door_wifi_signal_category',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_door_wifi_signal_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_door_wifi_signal_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Wi-Fi signal strength',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_strength',
    'unique_id': '987654-wifi_signal_strength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_states[sensor.front_door_wifi_signal_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'signal_strength',
      'friendly_name': 'Front Door Wi-Fi signal strength',
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_door_wifi_signal_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_last_activity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.front_last_activity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Last activity',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'last_activity',
    'unique_id': '765432-last_activity',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_last_activity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'timestamp',
      'friendly_name': 'Front Last activity',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_last_activity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_wifi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_wifi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '765432-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.front_wifi_signal_category-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Front Wi-Fi signal category',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_wifi_signal_category',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.front_wifi_signal_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.front_wifi_signal_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Wi-Fi signal strength',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_strength',
    'unique_id': '765432-wifi_signal_strength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_states[sensor.front_wifi_signal_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'signal_strength',
      'friendly_name': 'Front Wi-Fi signal strength',
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.front_wifi_signal_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.ingress_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ingress_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '185036587-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_states[sensor.ingress_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'battery',
      'friendly_name': 'Ingress Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '52',
  })
# ---
# name: test_states[sensor.ingress_doorbell_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ingress_doorbell_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Doorbell volume',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doorbell_volume',
    'unique_id': '185036587-doorbell_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.ingress_doorbell_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Ingress Doorbell volume',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_doorbell_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_states[sensor.ingress_last_activity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ingress_last_activity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Last activity',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'last_activity',
    'unique_id': '185036587-last_activity',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.ingress_last_activity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'timestamp',
      'friendly_name': 'Ingress Last activity',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_last_activity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.ingress_mic_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ingress_mic_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mic volume',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'mic_volume',
    'unique_id': '185036587-mic_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.ingress_mic_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Ingress Mic volume',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_mic_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11',
  })
# ---
# name: test_states[sensor.ingress_voice_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ingress_voice_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Voice volume',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'voice_volume',
    'unique_id': '185036587-voice_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.ingress_voice_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Ingress Voice volume',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_voice_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11',
  })
# ---
# name: test_states[sensor.ingress_wifi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ingress_wifi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '185036587-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.ingress_wifi_signal_category-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Ingress Wi-Fi signal category',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_wifi_signal_category',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.ingress_wifi_signal_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ingress_wifi_signal_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Wi-Fi signal strength',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_strength',
    'unique_id': '185036587-wifi_signal_strength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_states[sensor.ingress_wifi_signal_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'signal_strength',
      'friendly_name': 'Ingress Wi-Fi signal strength',
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ingress_wifi_signal_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.internal_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.internal_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '345678-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_states[sensor.internal_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'battery',
      'friendly_name': 'Internal Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.internal_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '80',
  })
# ---
# name: test_states[sensor.internal_last_activity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.internal_last_activity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Last activity',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'last_activity',
    'unique_id': '345678-last_activity',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.internal_last_activity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'timestamp',
      'friendly_name': 'Internal Last activity',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.internal_last_activity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.internal_wifi_signal_category-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.internal_wifi_signal_category',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Wi-Fi signal category',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_category',
    'unique_id': '345678-wifi_signal_category',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[sensor.internal_wifi_signal_category-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'friendly_name': 'Internal Wi-Fi signal category',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.internal_wifi_signal_category',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_states[sensor.internal_wifi_signal_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.internal_wifi_signal_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Wi-Fi signal strength',
    'platform': 'ring',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wifi_signal_strength',
    'unique_id': '345678-wifi_signal_strength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_states[sensor.internal_wifi_signal_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Ring.com',
      'device_class': 'signal_strength',
      'friendly_name': 'Internal Wi-Fi signal strength',
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.internal_wifi_signal_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
