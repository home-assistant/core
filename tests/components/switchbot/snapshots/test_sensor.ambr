# serializer version: 1
# name: test_entities[Circulator Fan][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[Circulator Fan][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '82',
  })
# ---
# name: test_entities[Circulator Fan][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[Circulator Fan][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[K10+ Pro Combo Vacuum][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[K10+ Pro Combo Vacuum][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '56',
  })
# ---
# name: test_entities[K10+ Pro Combo Vacuum][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[K10+ Pro Combo Vacuum][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[K10+ Pro Vacuum][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[K10+ Pro Vacuum][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_entities[K10+ Pro Vacuum][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[K10+ Pro Vacuum][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[K10+ Vacuum][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[K10+ Vacuum][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_entities[K10+ Vacuum][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[K10+ Vacuum][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[K20 Vacuum][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[K20 Vacuum][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_entities[K20 Vacuum][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[K20 Vacuum][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_current-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_name_current',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': None,
    'original_name': 'Current',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-current',
    'unit_of_measurement': <UnitOfElectricCurrent.MILLIAMPERE: 'mA'>,
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_current-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'test-name Current',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricCurrent.MILLIAMPERE: 'mA'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_current',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_name_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'test-name Power',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.9',
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_name_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Voltage',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_entities[Relay Switch 1PM][sensor.test_name_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'test-name Voltage',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '39',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_light_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_name_light_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Light level',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'light_level',
    'unique_id': 'aabbccddeeff-lightLevel',
    'unit_of_measurement': 'Level',
  })
# ---
# name: test_entities[Roller Shade][sensor.test_name_light_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-name Light level',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'Level',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_light_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_entities[S10 Vacuum][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[S10 Vacuum][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '77',
  })
# ---
# name: test_entities[S10 Vacuum][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[S10 Vacuum][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '42',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_light_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_name_light_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Light level',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'light_level',
    'unique_id': 'aabbccddeeff-lightLevel',
    'unit_of_measurement': 'Level',
  })
# ---
# name: test_entities[WoBlindTilt][sensor.test_name_light_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-name Light level',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'Level',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_light_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_entities[WoHand][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[WoHand][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '89',
  })
# ---
# name: test_entities[WoHand][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[WoHand][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[WoHumi][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[WoHumi][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[WoLockPro][sensor.test_name_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'aabbccddeeff-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_entities[WoLockPro][sensor.test_name_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test-name Battery',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_entities[WoLockPro][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[WoLockPro][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
# name: test_entities[WoStrip][sensor.test_name_bluetooth_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': None,
    'original_name': 'Bluetooth signal',
    'platform': 'switchbot',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bluetooth_signal',
    'unique_id': 'aabbccddeeff-rssi',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_entities[WoStrip][sensor.test_name_bluetooth_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'test-name Bluetooth signal',
      'last_run_success': None,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_name_bluetooth_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-60',
  })
# ---
