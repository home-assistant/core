# serializer version: 1
# name: test_platform_setup_and_discovery[select.3dprinter_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.3dprinter_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.pykascx9yfqrxtbgzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.3dprinter_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '3DPrinter Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.3dprinter_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.3dprinter_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.3dprinter_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.pykascx9yfqrxtbgzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.3dprinter_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '3DPrinter Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.3dprinter_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.4_433_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.4_433_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.xenxir4a0tn0p1qcqdtrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.4_433_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '4-433 Power on behavior',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.4_433_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.6294ha_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.6294ha_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.q62sg0p3s52thp6zzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.6294ha_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '6294HA Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.6294ha_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.aqi_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.aqi_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'volume',
    'unique_id': 'tuya.iks13mcaiyie3rryjb2ocalarm_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.aqi_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'AQI Volume',
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.aqi_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'low',
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_cooker_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.aubess_cooker_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.cju47ovcbeuapei2zclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_cooker_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Aubess Cooker Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.aubess_cooker_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_cooker_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.aubess_cooker_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.cju47ovcbeuapei2zcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_cooker_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Aubess Cooker Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.aubess_cooker_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_washing_machine_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.aubess_washing_machine_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.zjh9xhtm3gibs9kizclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_washing_machine_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Aubess Washing Machine Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.aubess_washing_machine_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_washing_machine_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.aubess_washing_machine_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.zjh9xhtm3gibs9kizcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.aubess_washing_machine_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Aubess Washing Machine Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.aubess_washing_machine_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.balkonbewasserung_weather_delay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.balkonbewasserung_weather_delay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather delay',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_delay',
    'unique_id': 'tuya.73ov8i8iedtylkzrqzkfsweather_delay',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.balkonbewasserung_weather_delay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'balkonbewässerung Weather delay',
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.balkonbewasserung_weather_delay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cancel',
  })
# ---
# name: test_platform_setup_and_discovery[select.bathroom_light_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.bathroom_light_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.gluaktf5gklight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.bathroom_light_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'bathroom light Indicator light mode',
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bathroom_light_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'pos',
  })
# ---
# name: test_platform_setup_and_discovery[select.bathroom_light_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.bathroom_light_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.gluaktf5gkrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.bathroom_light_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'bathroom light Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bathroom_light_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_off',
  })
# ---
# name: test_platform_setup_and_discovery[select.blinds_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'morning',
        'night',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.blinds_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'curtain_mode',
    'unique_id': 'tuya.nr26obpclcmode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.blinds_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'blinds Mode',
      'options': list([
        'morning',
        'night',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.blinds_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'morning',
  })
# ---
# name: test_platform_setup_and_discovery[select.bree_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
        '4h',
        '5h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.bree_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.ppgdpsq1xaxlyzryjkcountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.bree_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bree Countdown',
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
        '4h',
        '5h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bree_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cancel',
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_anti_flicker-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.burocam_anti_flicker',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Anti-flicker',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'basic_anti_flicker',
    'unique_id': 'tuya.svjjuwykgijjedurpsbasic_anti_flicker',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_anti_flicker-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bürocam Anti-flicker',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.burocam_anti_flicker',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_motion_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.burocam_motion_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motion detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'motion_sensitivity',
    'unique_id': 'tuya.svjjuwykgijjedurpsmotion_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_motion_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bürocam Motion detection sensitivity',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.burocam_motion_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_night_vision-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.burocam_night_vision',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Night vision',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'basic_nightvision',
    'unique_id': 'tuya.svjjuwykgijjedurpsbasic_nightvision',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_night_vision-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bürocam Night vision',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.burocam_night_vision',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_record_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.burocam_record_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Record mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'record_mode',
    'unique_id': 'tuya.svjjuwykgijjedurpsrecord_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_record_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bürocam Record mode',
      'options': list([
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.burocam_record_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_sound_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.burocam_sound_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sound detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'decibel_sensitivity',
    'unique_id': 'tuya.svjjuwykgijjedurpsdecibel_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.burocam_sound_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bürocam Sound detection sensitivity',
      'options': list([
        '0',
        '1',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.burocam_sound_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_ipc_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.c9_ipc_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IPC mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ipc_work_mode',
    'unique_id': 'tuya.fjdyw5ld2f5f5ddspsipc_work_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_ipc_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'C9 IPC mode',
      'options': list([
        '0',
        '1',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.c9_ipc_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_motion_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.c9_motion_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motion detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'motion_sensitivity',
    'unique_id': 'tuya.fjdyw5ld2f5f5ddspsmotion_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_motion_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'C9 Motion detection sensitivity',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.c9_motion_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_record_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.c9_record_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Record mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'record_mode',
    'unique_id': 'tuya.fjdyw5ld2f5f5ddspsrecord_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.c9_record_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'C9 Record mode',
      'options': list([
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.c9_record_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_motion_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_garage_motion_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motion detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'motion_sensitivity',
    'unique_id': 'tuya.mgcpxpmovasazerdpsmotion_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_motion_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM GARAGE Motion detection sensitivity',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_garage_motion_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_night_vision-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_garage_night_vision',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Night vision',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'basic_nightvision',
    'unique_id': 'tuya.mgcpxpmovasazerdpsbasic_nightvision',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_night_vision-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM GARAGE Night vision',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_garage_night_vision',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_record_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_garage_record_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Record mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'record_mode',
    'unique_id': 'tuya.mgcpxpmovasazerdpsrecord_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_record_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM GARAGE Record mode',
      'options': list([
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_garage_record_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_sound_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_garage_sound_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sound detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'decibel_sensitivity',
    'unique_id': 'tuya.mgcpxpmovasazerdpsdecibel_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_garage_sound_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM GARAGE Sound detection sensitivity',
      'options': list([
        '0',
        '1',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_garage_sound_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_motion_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_porch_motion_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motion detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'motion_sensitivity',
    'unique_id': 'tuya.uBLyTOvlhoRWXKjrpsmotion_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_motion_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM PORCH Motion detection sensitivity',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_porch_motion_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_record_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_porch_record_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Record mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'record_mode',
    'unique_id': 'tuya.uBLyTOvlhoRWXKjrpsrecord_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_record_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM PORCH Record mode',
      'options': list([
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_porch_record_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_sound_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cam_porch_sound_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sound detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'decibel_sensitivity',
    'unique_id': 'tuya.uBLyTOvlhoRWXKjrpsdecibel_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cam_porch_sound_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CAM PORCH Sound detection sensitivity',
      'options': list([
        '0',
        '1',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cam_porch_sound_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.cbe_pro_2_inverter_work_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'self_powered',
        'time_of_use',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.cbe_pro_2_inverter_work_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Inverter work mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'inverter_work_mode',
    'unique_id': 'tuya.gbq8kiahk57ct0bpncjynxwork_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.cbe_pro_2_inverter_work_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CBE Pro 2 Inverter work mode',
      'options': list([
        'self_powered',
        'time_of_use',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.cbe_pro_2_inverter_work_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'self_powered',
  })
# ---
# name: test_platform_setup_and_discovery[select.ceiling_fan_with_light_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '1h',
        '2h',
        '4h',
        '8h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.ceiling_fan_with_light_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.ijzjlqwmv1blwe0gsfcountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.ceiling_fan_with_light_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Ceiling Fan With Light Countdown',
      'options': list([
        'cancel',
        '1h',
        '2h',
        '4h',
        '8h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.ceiling_fan_with_light_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.dehumidifer_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.dehumidifer_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.ifzgvpgoodrfw2aksccountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.dehumidifer_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dehumidifer Countdown',
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.dehumidifer_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.dehumidifier_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.dehumidifier_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.2myxayqtud9aqbizsccountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.dehumidifier_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dehumidifier Countdown',
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.dehumidifier_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cancel',
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_kitchen_socket_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.elivco_kitchen_socket_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.cq4hzlrnqn4qi0mqzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_kitchen_socket_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Elivco Kitchen Socket Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.elivco_kitchen_socket_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_kitchen_socket_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.elivco_kitchen_socket_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.cq4hzlrnqn4qi0mqzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_kitchen_socket_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Elivco Kitchen Socket Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.elivco_kitchen_socket_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_tv_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.elivco_tv_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.pz2xuth8hczv6zrwzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_tv_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Elivco TV Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.elivco_tv_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_tv_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.elivco_tv_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.pz2xuth8hczv6zrwzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.elivco_tv_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Elivco TV Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.elivco_tv_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisier_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.framboisier_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.51tdkcsamisw9ukycplight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisier_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Framboisier Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.framboisier_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'none',
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisier_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.framboisier_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.51tdkcsamisw9ukycprelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisier_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Framboisier Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.framboisier_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisiers_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.framboisiers_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.vrhdtr5fawoiyth9qdtrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.framboisiers_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Framboisiers Power on behavior',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.framboisiers_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.garage_camera_motion_detection_sensitivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.garage_camera_motion_detection_sensitivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motion detection sensitivity',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'motion_sensitivity',
    'unique_id': 'tuya.53fnjncm3jywuaznpsmotion_sensitivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.garage_camera_motion_detection_sensitivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Garage Camera Motion detection sensitivity',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.garage_camera_motion_detection_sensitivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.garage_camera_record_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.garage_camera_record_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Record mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'record_mode',
    'unique_id': 'tuya.53fnjncm3jywuaznpsrecord_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.garage_camera_record_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Garage Camera Record mode',
      'options': list([
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.garage_camera_record_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.garden_valve_yard_weather_delay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.garden_valve_yard_weather_delay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather delay',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_delay',
    'unique_id': 'tuya.ggimpv4dqzkfsweather_delay',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.garden_valve_yard_weather_delay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Garden Valve Yard Weather delay',
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.garden_valve_yard_weather_delay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cancel',
  })
# ---
# name: test_platform_setup_and_discovery[select.hoover_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'random',
        'smart',
        'wall_follow',
        'chargego',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.hoover_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'vacuum_mode',
    'unique_id': 'tuya.mwsaod7fa3gjyh6idsmode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.hoover_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Hoover Mode',
      'options': list([
        'random',
        'smart',
        'wall_follow',
        'chargego',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.hoover_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'chargego',
  })
# ---
# name: test_platform_setup_and_discovery[select.ineox_sp2_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.ineox_sp2_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.vx2owjsg86g2ys93zcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.ineox_sp2_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Ineox SP2 Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.ineox_sp2_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.ion1000pro_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.ion1000pro_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.owozxdzgbibizu4sjkcountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.ion1000pro_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ION1000PRO Countdown',
      'options': list([
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.ion1000pro_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.jardin_fraises_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.jardin_fraises_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.b6e05dfy4qhpgea1qdtrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.jardin_fraises_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'jardin Fraises Power on behavior',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.jardin_fraises_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.jie_hashuang_xiang_ji_liang_cha_zuo_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.jie_hashuang_xiang_ji_liang_cha_zuo_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.bjum5isf7h6xpbrvzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.jie_hashuang_xiang_ji_liang_cha_zuo_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '接HA双向计量插座 Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.jie_hashuang_xiang_ji_liang_cha_zuo_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.jie_hashuang_xiang_ji_liang_cha_zuo_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.jie_hashuang_xiang_ji_liang_cha_zuo_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.bjum5isf7h6xpbrvzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.jie_hashuang_xiang_ji_liang_cha_zuo_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '接HA双向计量插座 Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.jie_hashuang_xiang_ji_liang_cha_zuo_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_off',
  })
# ---
# name: test_platform_setup_and_discovery[select.kalado_air_purifier_countdown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
        '4h',
        '5h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.kalado_air_purifier_countdown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Countdown',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'countdown',
    'unique_id': 'tuya.yo2karkjuhzztxsfjkcountdown_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.kalado_air_purifier_countdown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kalado Air Purifier Countdown',
      'options': list([
        'cancel',
        '1h',
        '2h',
        '3h',
        '4h',
        '5h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.kalado_air_purifier_countdown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cancel',
  })
# ---
# name: test_platform_setup_and_discovery[select.kitchen_blinds_motor_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.kitchen_blinds_motor_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motor mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'curtain_motor_mode',
    'unique_id': 'tuya.dke76hazlccontrol_back_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.kitchen_blinds_motor_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Blinds Motor mode',
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.kitchen_blinds_motor_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'forward',
  })
# ---
# name: test_platform_setup_and_discovery[select.lave_linge_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.lave_linge_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.g0edqq0wzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.lave_linge_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lave linge Indicator light mode',
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.lave_linge_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'none',
  })
# ---
# name: test_platform_setup_and_discovery[select.lave_linge_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.lave_linge_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.g0edqq0wzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.lave_linge_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lave linge Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.lave_linge_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.office_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.office_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.2x473nefusdo7af6zclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.office_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Office Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.office_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.office_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.office_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.2x473nefusdo7af6zcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.office_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Office Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.office_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.persiana_do_quarto_motor_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.persiana_do_quarto_motor_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motor mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'curtain_motor_mode',
    'unique_id': 'tuya.ikbbdbnqsd70pc1glccontrol_back_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.persiana_do_quarto_motor_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Persiana do Quarto Motor mode',
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.persiana_do_quarto_motor_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'back',
  })
# ---
# name: test_platform_setup_and_discovery[select.raspy4_home_assistant_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.raspy4_home_assistant_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.zaszonjgzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.raspy4_home_assistant_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Raspy4 - Home Assistant Indicator light mode',
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.raspy4_home_assistant_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'none',
  })
# ---
# name: test_platform_setup_and_discovery[select.raspy4_home_assistant_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.raspy4_home_assistant_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.zaszonjgzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.raspy4_home_assistant_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Raspy4 - Home Assistant Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.raspy4_home_assistant_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.security_light_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.security_light_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.bxfkpxjgux2fgwnazclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.security_light_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Security Light Indicator light mode',
      'options': list([
        'none',
        'relay',
        'pos',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.security_light_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.security_light_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.security_light_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.bxfkpxjgux2fgwnazcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.security_light_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Security Light Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.security_light_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
# name: test_platform_setup_and_discovery[select.siren_veranda_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.siren_veranda_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'volume',
    'unique_id': 'tuya.kjr0pqg7eunn4vlujbgsalarm_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.siren_veranda_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Siren veranda  Volume',
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.siren_veranda_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'middle',
  })
# ---
# name: test_platform_setup_and_discovery[select.siren_volume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.siren_volume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'volume',
    'unique_id': 'tuya.okwwus27jhqqe2mijbgsalarm_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.siren_volume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Siren Volume',
      'options': list([
        'low',
        'middle',
        'high',
        'mute',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.siren_volume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'low',
  })
# ---
# name: test_platform_setup_and_discovery[select.smart_odor_eliminator_pro_odor_elimination_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'smart',
        'interim',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.smart_odor_eliminator_pro_odor_elimination_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Odor elimination mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'odor_elimination_mode',
    'unique_id': 'tuya.rl39uwgaqwjwcwork_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.smart_odor_eliminator_pro_odor_elimination_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smart Odor Eliminator-Pro Odor elimination mode',
      'options': list([
        'smart',
        'interim',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.smart_odor_eliminator_pro_odor_elimination_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.smart_water_timer_weather_delay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.smart_water_timer_weather_delay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather delay',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_delay',
    'unique_id': 'tuya.bl5cuqxnqzkfsweather_delay',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.smart_water_timer_weather_delay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smart Water Timer Weather delay',
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.smart_water_timer_weather_delay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.socket3_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.socket3_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.7zogt3pcwhxhu8upqdtrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.socket3_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Socket3 Power on behavior',
      'options': list([
        '0',
        '1',
        '2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.socket3_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.socket4_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.socket4_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.4q5c2am8n1bwb6bszclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.socket4_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Socket4 Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.socket4_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.socket4_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.socket4_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.4q5c2am8n1bwb6bszcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.socket4_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Socket4 Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.socket4_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.spot_1_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.spot_1_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.kffnst1epj6vr8xnzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.spot_1_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Spot 1 Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.spot_1_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'relay',
  })
# ---
# name: test_platform_setup_and_discovery[select.spot_1_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.spot_1_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.kffnst1epj6vr8xnzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.spot_1_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Spot 1 Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.spot_1_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'last',
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sunbeam_bedding_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:thermometer-lines',
    'original_name': 'Level',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'blanket_level',
    'unique_id': 'tuya.fasvixqysw1lxvjprdlevel',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sunbeam Bedding Level',
      'icon': 'mdi:thermometer-lines',
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sunbeam_bedding_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'level_5',
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_side_a_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sunbeam_bedding_side_a_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:thermometer-lines',
    'original_name': 'Side A Level',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'blanket_level',
    'unique_id': 'tuya.fasvixqysw1lxvjprdlevel_1',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_side_a_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sunbeam Bedding Side A Level',
      'icon': 'mdi:thermometer-lines',
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sunbeam_bedding_side_a_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'level_5',
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_side_b_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sunbeam_bedding_side_b_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:thermometer-lines',
    'original_name': 'Side B Level',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'blanket_level',
    'unique_id': 'tuya.fasvixqysw1lxvjprdlevel_2',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.sunbeam_bedding_side_b_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sunbeam Bedding Side B Level',
      'icon': 'mdi:thermometer-lines',
      'options': list([
        'level_1',
        'level_2',
        'level_3',
        'level_4',
        'level_5',
        'level_6',
        'level_7',
        'level_8',
        'level_9',
        'level_10',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sunbeam_bedding_side_b_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'level_5',
  })
# ---
# name: test_platform_setup_and_discovery[select.v20_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'smart',
        'zone',
        'pose',
        'part',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.v20_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'vacuum_mode',
    'unique_id': 'tuya.zrrraytdoanz33rldsmode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.v20_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'V20 Mode',
      'options': list([
        'smart',
        'zone',
        'pose',
        'part',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.v20_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_platform_setup_and_discovery[select.v20_water_tank_adjustment-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'low',
        'middle',
        'high',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.v20_water_tank_adjustment',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Water tank adjustment',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'vacuum_cistern',
    'unique_id': 'tuya.zrrraytdoanz33rldscistern',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.v20_water_tank_adjustment-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'V20 Water tank adjustment',
      'options': list([
        'low',
        'middle',
        'high',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.v20_water_tank_adjustment',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'middle',
  })
# ---
# name: test_platform_setup_and_discovery[select.valve_controller_2_weather_delay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.valve_controller_2_weather_delay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather delay',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_delay',
    'unique_id': 'tuya.kx8dncf1qzkfsweather_delay',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.valve_controller_2_weather_delay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Valve Controller 2 Weather delay',
      'options': list([
        'cancel',
        '24h',
        '48h',
        '72h',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.valve_controller_2_weather_delay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.vividstorm_screen_motor_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.vividstorm_screen_motor_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Motor mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'curtain_motor_mode',
    'unique_id': 'tuya.4hbnivc4w2rsw966lccontrol_back_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.vividstorm_screen_motor_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VIVIDSTORM SCREEN Motor mode',
      'options': list([
        'forward',
        'back',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.vividstorm_screen_motor_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'forward',
  })
# ---
# name: test_platform_setup_and_discovery[select.wallwasher_front_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.wallwasher_front_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.pdasfna8fswh4a0tzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.wallwasher_front_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'wallwasher front Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.wallwasher_front_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.wallwasher_front_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.wallwasher_front_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.pdasfna8fswh4a0tzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.wallwasher_front_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'wallwasher front Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.wallwasher_front_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.weihnachtsmann_indicator_light_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.weihnachtsmann_indicator_light_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Indicator light mode',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_mode',
    'unique_id': 'tuya.rwp6kdezm97s2nktzclight_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.weihnachtsmann_indicator_light_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Weihnachtsmann  Indicator light mode',
      'options': list([
        'relay',
        'pos',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.weihnachtsmann_indicator_light_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.weihnachtsmann_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.weihnachtsmann_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.rwp6kdezm97s2nktzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.weihnachtsmann_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Weihnachtsmann  Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.weihnachtsmann_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_platform_setup_and_discovery[select.wi_fi_hub_power_on_behavior-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.wi_fi_hub_power_on_behavior',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power on behavior',
    'platform': 'tuya',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'relay_status',
    'unique_id': 'tuya.zspc4q1ut7swycnyzcrelay_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_platform_setup_and_discovery[select.wi_fi_hub_power_on_behavior-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Wi-Fi hub Power on behavior',
      'options': list([
        'power_off',
        'power_on',
        'last',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.wi_fi_hub_power_on_behavior',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'power_on',
  })
# ---
