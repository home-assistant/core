# serializer version: 1
# name: test_http_api_handle_failure
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'failed_to_handle',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': 'An unexpected error occurred',
        }),
      }),
    }),
  })
# ---
# name: test_http_api_no_match
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_http_api_unexpected_failure
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'unknown',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': 'An unexpected error occurred',
        }),
      }),
    }),
  })
# ---
# name: test_http_processing_intent[None]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'failed': list([
        ]),
        'success': list([
          dict({
            'id': 'light.kitchen',
            'name': 'kitchen',
            'type': 'entity',
          }),
        ]),
        'targets': list([
        ]),
      }),
      'language': 'en',
      'response_type': 'action_done',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': 'Turned on the light',
        }),
      }),
    }),
  })
# ---
# name: test_http_processing_intent[conversation.home_assistant]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'failed': list([
        ]),
        'success': list([
          dict({
            'id': 'light.kitchen',
            'name': 'kitchen',
            'type': 'entity',
          }),
        ]),
        'targets': list([
        ]),
      }),
      'language': 'en',
      'response_type': 'action_done',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': 'Turned on the light',
        }),
      }),
    }),
  })
# ---
# name: test_http_processing_intent[homeassistant]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'failed': list([
        ]),
        'success': list([
          dict({
            'id': 'light.kitchen',
            'name': 'kitchen',
            'type': 'entity',
          }),
        ]),
        'targets': list([
        ]),
      }),
      'language': 'en',
      'response_type': 'action_done',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': 'Turned on the light',
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload0]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload1]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'test-language',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload2]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload3]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload4]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'test-language',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
# name: test_ws_api[payload5]
  dict({
    'conversation_id': <ANY>,
    'response': dict({
      'card': dict({
      }),
      'data': dict({
        'code': 'no_intent_match',
      }),
      'language': 'en',
      'response_type': 'error',
      'speech': dict({
        'plain': dict({
          'extra_data': None,
          'speech': "Sorry, I couldn't understand that",
        }),
      }),
    }),
  })
# ---
