# serializer version: 1
# name: test_sensors[sensor.generator_1_battery_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_battery_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Battery voltage',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'battery_voltage',
    'unique_id': 'myemail@email.com_12345_batteryVoltageV',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.generator_1_battery_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Generator 1 Battery voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_battery_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.9',
  })
# ---
# name: test_sensors[sensor.generator_1_controller_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_controller_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Controller temperature',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'controller_temperature',
    'unique_id': 'myemail@email.com_12345_controllerTempF',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[sensor.generator_1_controller_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Generator 1 Controller temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_controller_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.0',
  })
# ---
# name: test_sensors[sensor.generator_1_device_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_device_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Device IP address',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'device_ip_address',
    'unique_id': 'myemail@email.com_12345_deviceIpAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.generator_1_device_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Device IP address',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_device_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.1.1.1:2402',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_compartment_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_engine_compartment_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Engine compartment temperature',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_compartment_temperature',
    'unique_id': 'myemail@email.com_12345_engineCompartmentTempF',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[sensor.generator_1_engine_compartment_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Generator 1 Engine compartment temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_compartment_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_coolant_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_engine_coolant_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Engine coolant temperature',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_coolant_temperature',
    'unique_id': 'myemail@email.com_12345_engineCoolantTempF',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[sensor.generator_1_engine_coolant_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Generator 1 Engine coolant temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_coolant_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_frequency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_engine_frequency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.FREQUENCY: 'frequency'>,
    'original_icon': None,
    'original_name': 'Engine frequency',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_frequency',
    'unique_id': 'myemail@email.com_12345_engineFrequencyHz',
    'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
  })
# ---
# name: test_sensors[sensor.generator_1_engine_frequency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'frequency',
      'friendly_name': 'Generator 1 Engine frequency',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_frequency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_oil_pressure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_engine_oil_pressure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': 'Engine oil pressure',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_oil_pressure',
    'unique_id': 'myemail@email.com_12345_engineOilPressurePsi',
    'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
  })
# ---
# name: test_sensors[sensor.generator_1_engine_oil_pressure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'Generator 1 Engine oil pressure',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_oil_pressure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_engine_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Engine speed',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_speed',
    'unique_id': 'myemail@email.com_12345_engineSpeedRpm',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Engine speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.generator_1_engine_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_engine_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Engine state',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'engine_state',
    'unique_id': 'myemail@email.com_12345_engineState',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.generator_1_engine_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Engine state',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_engine_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Standby',
  })
# ---
# name: test_sensors[sensor.generator_1_generator_load-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_generator_load',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Generator load',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'generator_load',
    'unique_id': 'myemail@email.com_12345_generatorLoadW',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.generator_1_generator_load-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Generator 1 Generator load',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_generator_load',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.generator_1_generator_load_percentage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_generator_load_percentage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Generator load percentage',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'generator_load_percent',
    'unique_id': 'myemail@email.com_12345_generatorLoadPercent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.generator_1_generator_load_percentage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Generator load percentage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_generator_load_percentage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.generator_1_generator_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_generator_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Generator status',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'generator_status',
    'unique_id': 'myemail@email.com_12345_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.generator_1_generator_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Generator status',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_generator_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'ReadyToRun',
  })
# ---
# name: test_sensors[sensor.generator_1_lube_oil_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_lube_oil_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Lube oil temperature',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'lube_oil_temperature',
    'unique_id': 'myemail@email.com_12345_lubeOilTempF',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[sensor.generator_1_lube_oil_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Generator 1 Lube oil temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_lube_oil_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.0',
  })
# ---
# name: test_sensors[sensor.generator_1_power_source-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_power_source',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Power source',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'power_source',
    'unique_id': 'myemail@email.com_12345_powerSource',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.generator_1_power_source-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Power source',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_power_source',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Utility',
  })
# ---
# name: test_sensors[sensor.generator_1_runtime_since_last_maintenance-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_runtime_since_last_maintenance',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Runtime since last maintenance',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'runtime_since_last_maintenance',
    'unique_id': 'myemail@email.com_12345_runtimeSinceLastMaintenanceHours',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensors[sensor.generator_1_runtime_since_last_maintenance-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Generator 1 Runtime since last maintenance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_runtime_since_last_maintenance',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_sensors[sensor.generator_1_server_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_server_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Server IP address',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'server_ip_address',
    'unique_id': 'myemail@email.com_12345_serverIpAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.generator_1_server_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Generator 1 Server IP address',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_server_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2.2.2.2',
  })
# ---
# name: test_sensors[sensor.generator_1_total_operation-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_total_operation',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Total operation',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'total_operation',
    'unique_id': 'myemail@email.com_12345_totalOperationHours',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensors[sensor.generator_1_total_operation-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Generator 1 Total operation',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_total_operation',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '33932.3',
  })
# ---
# name: test_sensors[sensor.generator_1_total_runtime-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.generator_1_total_runtime',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Total runtime',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'total_runtime',
    'unique_id': 'myemail@email.com_12345_totalRuntimeHours',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensors[sensor.generator_1_total_runtime-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Generator 1 Total runtime',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_total_runtime',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '120.2',
  })
# ---
# name: test_sensors[sensor.generator_1_utility_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_utility_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Utility voltage',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'utility_voltage',
    'unique_id': 'myemail@email.com_12345_utilityVoltageV',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.generator_1_utility_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Generator 1 Utility voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_utility_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '259.7',
  })
# ---
# name: test_sensors[sensor.generator_1_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.generator_1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Voltage',
    'platform': 'rehlko',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'generator_voltage_avg',
    'unique_id': 'myemail@email.com_12345_generatorVoltageAvgV',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.generator_1_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Generator 1 Voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.generator_1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
