# serializer version: 1
# name: test_sensors[sensor.mock_title_flow_rate-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_flow_rate',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfVolumeFlowRate.GALLONS_PER_MINUTE: 'gal/min'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLUME_FLOW_RATE: 'volume_flow_rate'>,
    'original_icon': None,
    'original_name': 'Flow rate',
    'platform': 'droplet',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'current_flow_rate',
    'unique_id': 'Droplet-1234_current_flow_rate',
    'unit_of_measurement': <UnitOfVolumeFlowRate.GALLONS_PER_MINUTE: 'gal/min'>,
  })
# ---
# name: test_sensors[sensor.mock_title_flow_rate-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volume_flow_rate',
      'friendly_name': 'Mock Title Flow rate',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumeFlowRate.GALLONS_PER_MINUTE: 'gal/min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_flow_rate',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0264172052358148',
  })
# ---
# name: test_sensors[sensor.mock_title_server_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'connected',
        'connecting',
        'disconnected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_server_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Server status',
    'platform': 'droplet',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'server_connectivity',
    'unique_id': 'Droplet-1234_server_connectivity',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.mock_title_server_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Mock Title Server status',
      'options': list([
        'connected',
        'connecting',
        'disconnected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_server_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'connected',
  })
# ---
# name: test_sensors[sensor.mock_title_signal_quality-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'no_signal',
        'weak_signal',
        'strong_signal',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_signal_quality',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Signal quality',
    'platform': 'droplet',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'signal_quality',
    'unique_id': 'Droplet-1234_signal_quality',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.mock_title_signal_quality-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Mock Title Signal quality',
      'options': list([
        'no_signal',
        'weak_signal',
        'strong_signal',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_signal_quality',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'strong_signal',
  })
# ---
# name: test_sensors[sensor.mock_title_water-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_water',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfVolume.GALLONS: 'gal'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Water',
    'platform': 'droplet',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Droplet-1234_volume',
    'unit_of_measurement': <UnitOfVolume.GALLONS: 'gal'>,
  })
# ---
# name: test_sensors[sensor.mock_title_water-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Mock Title Water',
      'last_reset': '2020-01-01T00:00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfVolume.GALLONS: 'gal'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_water',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.264172052358148',
  })
# ---
