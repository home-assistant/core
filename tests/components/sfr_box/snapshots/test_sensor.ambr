# serializer version: 1
# name: test_sensors
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': 'http://192.168.0.1',
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'sfr_box',
          'e4:5d:51:00:11:22',
        ),
      }),
      'is_new': False,
      'labels': set({
      }),
      'manufacturer': None,
      'model': 'NB6VAC-FXC-r0',
      'model_id': 'NB6VAC-FXC-r0',
      'name': 'SFR Box',
      'name_by_user': None,
      'primary_config_entry': <ANY>,
      'serial_number': None,
      'suggested_area': None,
      'sw_version': 'NB6VAC-MAIN-R4.0.44k',
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensors.1
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'options': list([
          'adsl',
          'ftth',
          'gprs',
          'unknown',
        ]),
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_network_infrastructure',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
      'original_icon': None,
      'original_name': 'Network infrastructure',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'net_infra',
      'unique_id': 'e4:5d:51:00:11:22_system_net_infra',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_voltage',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
      'original_icon': None,
      'original_name': 'Voltage',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'e4:5d:51:00:11:22_system_alimvoltage',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_temperature',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
      'original_icon': None,
      'original_name': 'Temperature',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'e4:5d:51:00:11:22_system_temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: 'Â°C'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'options': list([
          'adsl_ppp',
          'adsl_routed',
          'ftth_routed',
          'grps_ppp',
          'unknown',
        ]),
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_wan_mode',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
      'original_icon': None,
      'original_name': 'WAN mode',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'wan_mode',
      'unique_id': 'e4:5d:51:00:11:22_wan_mode',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_line_mode',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'DSL line mode',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_linemode',
      'unique_id': 'e4:5d:51:00:11:22_dsl_linemode',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_counter',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'DSL counter',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_counter',
      'unique_id': 'e4:5d:51:00:11:22_dsl_counter',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_crc',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'DSL CRC',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_crc',
      'unique_id': 'e4:5d:51:00:11:22_dsl_crc',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_noise_down',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
      'original_icon': None,
      'original_name': 'DSL noise down',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_noise_down',
      'unique_id': 'e4:5d:51:00:11:22_dsl_noise_down',
      'unit_of_measurement': 'dB',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_noise_up',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
      'original_icon': None,
      'original_name': 'DSL noise up',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_noise_up',
      'unique_id': 'e4:5d:51:00:11:22_dsl_noise_up',
      'unit_of_measurement': 'dB',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_attenuation_down',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
      'original_icon': None,
      'original_name': 'DSL attenuation down',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_attenuation_down',
      'unique_id': 'e4:5d:51:00:11:22_dsl_attenuation_down',
      'unit_of_measurement': 'dB',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_attenuation_up',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
      'original_icon': None,
      'original_name': 'DSL attenuation up',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_attenuation_up',
      'unique_id': 'e4:5d:51:00:11:22_dsl_attenuation_up',
      'unit_of_measurement': 'dB',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.sfr_box_dsl_rate_down',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
      'original_icon': None,
      'original_name': 'DSL rate down',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_rate_down',
      'unique_id': 'e4:5d:51:00:11:22_dsl_rate_down',
      'unit_of_measurement': <UnitOfDataRate.KILOBITS_PER_SECOND: 'kbit/s'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.sfr_box_dsl_rate_up',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
      'original_icon': None,
      'original_name': 'DSL rate up',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_rate_up',
      'unique_id': 'e4:5d:51:00:11:22_dsl_rate_up',
      'unit_of_measurement': <UnitOfDataRate.KILOBITS_PER_SECOND: 'kbit/s'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'options': list([
          'no_defect',
          'of_frame',
          'loss_of_signal',
          'loss_of_power',
          'loss_of_signal_quality',
          'unknown',
        ]),
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_line_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
      'original_icon': None,
      'original_name': 'DSL line status',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_line_status',
      'unique_id': 'e4:5d:51:00:11:22_dsl_line_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'options': list([
          'idle',
          'g_994_training',
          'g_992_started',
          'g_922_channel_analysis',
          'g_992_message_exchange',
          'g_993_started',
          'g_993_channel_analysis',
          'g_993_message_exchange',
          'showtime',
          'unknown',
        ]),
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.sfr_box_dsl_training',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
      'original_icon': None,
      'original_name': 'DSL training',
      'platform': 'sfr_box',
      'previous_unique_id': None,
      'supported_features': 0,
      'translation_key': 'dsl_training',
      'unique_id': 'e4:5d:51:00:11:22_dsl_training',
      'unit_of_measurement': None,
    }),
  ])
# ---
# name: test_sensors.2
  list([
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'enum',
        'friendly_name': 'SFR Box Network infrastructure',
        'options': list([
          'adsl',
          'ftth',
          'gprs',
          'unknown',
        ]),
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_network_infrastructure',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': 'adsl',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'voltage',
        'friendly_name': 'SFR Box Voltage',
        'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_voltage',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '12251',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'temperature',
        'friendly_name': 'SFR Box Temperature',
        'unit_of_measurement': <UnitOfTemperature.CELSIUS: 'Â°C'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_temperature',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '27.56',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'enum',
        'friendly_name': 'SFR Box WAN mode',
        'options': list([
          'adsl_ppp',
          'adsl_routed',
          'ftth_routed',
          'grps_ppp',
          'unknown',
        ]),
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_wan_mode',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': 'adsl_routed',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'friendly_name': 'SFR Box DSL line mode',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_line_mode',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': 'ADSL2+',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'friendly_name': 'SFR Box DSL counter',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_counter',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '16',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'friendly_name': 'SFR Box DSL CRC',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_crc',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '0',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'signal_strength',
        'friendly_name': 'SFR Box DSL noise down',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': 'dB',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_noise_down',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '5.8',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'signal_strength',
        'friendly_name': 'SFR Box DSL noise up',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': 'dB',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_noise_up',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '6.0',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'signal_strength',
        'friendly_name': 'SFR Box DSL attenuation down',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': 'dB',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_attenuation_down',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '28.5',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'signal_strength',
        'friendly_name': 'SFR Box DSL attenuation up',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': 'dB',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_attenuation_up',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '20.8',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'data_rate',
        'friendly_name': 'SFR Box DSL rate down',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfDataRate.KILOBITS_PER_SECOND: 'kbit/s'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_rate_down',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '5549',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'data_rate',
        'friendly_name': 'SFR Box DSL rate up',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfDataRate.KILOBITS_PER_SECOND: 'kbit/s'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_rate_up',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': '187',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'enum',
        'friendly_name': 'SFR Box DSL line status',
        'options': list([
          'no_defect',
          'of_frame',
          'loss_of_signal',
          'loss_of_power',
          'loss_of_signal_quality',
          'unknown',
        ]),
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_line_status',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': 'no_defect',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'enum',
        'friendly_name': 'SFR Box DSL training',
        'options': list([
          'idle',
          'g_994_training',
          'g_992_started',
          'g_922_channel_analysis',
          'g_992_message_exchange',
          'g_993_started',
          'g_993_channel_analysis',
          'g_993_message_exchange',
          'showtime',
          'unknown',
        ]),
      }),
      'context': <ANY>,
      'entity_id': 'sensor.sfr_box_dsl_training',
      'last_changed': <ANY>,
      'last_reported': <ANY>,
      'last_updated': <ANY>,
      'state': 'showtime',
    }),
  ])
# ---
