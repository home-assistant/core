# serializer version: 1
# name: test_service_get_requests
  dict({
    'requests': list([
      dict({
        'created_at': datetime.datetime(2024, 12, 29, 10, 4, 16, tzinfo=datetime.timezone.utc),
        'id': 16,
        'is4k': False,
        'media': dict({
          'adult': False,
          'budget': 0,
          'genres': list([
            dict({
              'id': 10749,
              'name': 'Romance',
            }),
            dict({
              'id': 18,
              'name': 'Drama',
            }),
          ]),
          'id': 1156593,
          'imdb_id': 'tt28510079',
          'keywords': list([
            dict({
              'id': 818,
              'name': 'based on novel or book',
            }),
            dict({
              'id': 9663,
              'name': 'sequel',
            }),
          ]),
          'media_info': dict({
            'created_at': datetime.datetime(2024, 12, 29, 10, 4, 16, tzinfo=datetime.timezone.utc),
            'id': 537,
            'imdb_id': None,
            'media_type': <MediaType.MOVIE: 'movie'>,
            'status': <MediaStatus.PROCESSING: 3>,
            'tmdb_id': 1156593,
            'tvdb_id': None,
            'updated_at': datetime.datetime(2024, 12, 29, 10, 4, 17, tzinfo=datetime.timezone.utc),
          }),
          'original_language': 'es',
          'original_title': 'Culpa tuya',
          'overview': "The love between Noah and Nick seems unwavering despite their parents' attempts to separate them. But his job and her entry into college open up their lives to new relationships that will shake the foundations of both their relationship and the Leister family itself.",
          'popularity': 3958.479,
          'release_date': datetime.date(2024, 12, 26),
          'revenue': 0,
          'runtime': 120,
          'tagline': 'Divided by family. Driven by love.',
          'title': 'Your Fault',
          'vote_average': 7.7,
          'vote_count': 190,
        }),
        'modified_by': dict({
          'avatar': 'https://plex.tv/users/aaaaa/avatar?c=aaaaa',
          'created_at': datetime.datetime(2024, 12, 16, 21, 13, 58, tzinfo=datetime.timezone.utc),
          'display_name': 'somebody',
          'email': 'one@email.com',
          'id': 1,
          'movie_quota_days': None,
          'movie_quota_limit': None,
          'plex_id': 321321321,
          'plex_username': 'somebody',
          'request_count': 11,
          'tv_quota_days': None,
          'tv_quota_limit': None,
          'updated_at': datetime.datetime(2024, 12, 16, 23, 59, 3, tzinfo=datetime.timezone.utc),
        }),
        'requested_by': dict({
          'avatar': 'https://plex.tv/users/aaaaa/avatar?c=aaaaa',
          'created_at': datetime.datetime(2024, 12, 16, 21, 13, 58, tzinfo=datetime.timezone.utc),
          'display_name': 'somebody',
          'email': 'one@email.com',
          'id': 1,
          'movie_quota_days': None,
          'movie_quota_limit': None,
          'plex_id': 321321321,
          'plex_username': 'somebody',
          'request_count': 11,
          'tv_quota_days': None,
          'tv_quota_limit': None,
          'updated_at': datetime.datetime(2024, 12, 16, 23, 59, 3, tzinfo=datetime.timezone.utc),
        }),
        'season_count': 0,
        'status': <RequestStatus.APPROVED: 2>,
        'updated_at': datetime.datetime(2024, 12, 29, 10, 4, 16, tzinfo=datetime.timezone.utc),
      }),
      dict({
        'created_at': datetime.datetime(2024, 12, 26, 14, 37, 30, tzinfo=datetime.timezone.utc),
        'id': 14,
        'is4k': False,
        'media': dict({
          'first_air_date': datetime.date(2024, 12, 19),
          'genres': list([
            dict({
              'id': 10764,
              'name': 'Reality',
            }),
          ]),
          'id': 249522,
          'keywords': list([
            dict({
              'id': 271,
              'name': 'competition',
            }),
            dict({
              'id': 4325,
              'name': 'game show',
            }),
            dict({
              'id': 330122,
              'name': 'mrbeast',
            }),
          ]),
          'languages': list([
            'da',
            'en',
          ]),
          'last_air_date': datetime.date(2024, 12, 26),
          'last_episode_to_air': dict({
            'air_date': datetime.date(2024, 12, 26),
            'episode_number': 3,
            'id': 5802152,
            'name': 'The Solitary Experiment',
            'overview': 'What would happen if three best friends were trapped in a room, but only two could escape? Watch and see for yourself right now!',
            'still_path': '/r6LRRaA2l2tMDttWbYl3dXdJUij.jpg',
          }),
          'media_info': dict({
            'created_at': datetime.datetime(2024, 12, 26, 14, 37, 30, tzinfo=datetime.timezone.utc),
            'id': 535,
            'imdb_id': None,
            'media_type': <MediaType.TV: 'tv'>,
            'status': <MediaStatus.PARTIALLY_AVAILABLE: 4>,
            'tmdb_id': 249522,
            'tvdb_id': 447806,
            'updated_at': datetime.datetime(2024, 12, 26, 14, 45, tzinfo=datetime.timezone.utc),
          }),
          'name': 'Beast Games',
          'next_episode_to_air': dict({
            'air_date': datetime.date(2025, 1, 2),
            'episode_number': 4,
            'id': 5802153,
            'name': 'Episode 4',
            'overview': '',
            'still_path': 'None',
          }),
          'number_of_episodes': 10,
          'number_of_seasons': 1,
          'original_language': 'en',
          'original_name': 'Beast Games',
          'overview': "I gathered 1,000 people to fight for $5,000,000, the LARGEST cash prize in TV history! We're also giving away a private island, Lamborghinis, and millions more in cash throughout the competition! Go watch to see the greatest show ever made!",
          'popularity': 769.189,
          'seasons': list([
            dict({
              'air_date': datetime.date(2024, 12, 19),
              'episode_count': 10,
              'id': 384427,
              'name': 'Season 1',
              'overview': '',
              'poster_path': '/3itZlypnOcVcqI5xxyO6nvJ52yM.jpg',
              'season_number': 1,
            }),
          ]),
          'tagline': '1,000 players. 5 million dollars. 1 winner.',
        }),
        'modified_by': dict({
          'avatar': 'https://plex.tv/users/aaaaa/avatar?c=aaaaa',
          'created_at': datetime.datetime(2024, 12, 16, 21, 13, 58, tzinfo=datetime.timezone.utc),
          'display_name': 'somebody',
          'email': 'one@email.com',
          'id': 1,
          'movie_quota_days': None,
          'movie_quota_limit': None,
          'plex_id': 321321321,
          'plex_username': 'somebody',
          'request_count': 11,
          'tv_quota_days': None,
          'tv_quota_limit': None,
          'updated_at': datetime.datetime(2024, 12, 16, 23, 59, 3, tzinfo=datetime.timezone.utc),
        }),
        'requested_by': dict({
          'avatar': 'https://plex.tv/users/aaaaa/avatar?c=aaaaa',
          'created_at': datetime.datetime(2024, 12, 16, 21, 13, 58, tzinfo=datetime.timezone.utc),
          'display_name': 'somebody',
          'email': 'one@email.com',
          'id': 1,
          'movie_quota_days': None,
          'movie_quota_limit': None,
          'plex_id': 321321321,
          'plex_username': 'somebody',
          'request_count': 11,
          'tv_quota_days': None,
          'tv_quota_limit': None,
          'updated_at': datetime.datetime(2024, 12, 16, 23, 59, 3, tzinfo=datetime.timezone.utc),
        }),
        'season_count': 1,
        'status': <RequestStatus.APPROVED: 2>,
        'updated_at': datetime.datetime(2024, 12, 26, 14, 37, 30, tzinfo=datetime.timezone.utc),
      }),
    ]),
  })
# ---
