# serializer version: 1
# name: test_sensor[connected_plc_devices-async_get_network_overview-interval2]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Connected PLC devices',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_connected_plc_devices',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensor[connected_plc_devices-async_get_network_overview-interval2].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_connected_plc_devices',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Connected PLC devices',
    'platform': 'devolo_home_network',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'connected_plc_devices',
    'unique_id': '1234567890_connected_plc_devices',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[connected_wi_fi_clients-async_get_wifi_connected_station-interval0]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Connected Wi-Fi clients',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_connected_wi_fi_clients',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensor[connected_wi_fi_clients-async_get_wifi_connected_station-interval0].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_connected_wi_fi_clients',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Connected Wi-Fi clients',
    'platform': 'devolo_home_network',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'connected_wifi_clients',
    'unique_id': '1234567890_connected_wifi_clients',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[neighboring_wi_fi_networks-async_get_wifi_neighbor_access_points-interval1]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Neighboring Wi-Fi networks',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_neighboring_wi_fi_networks',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensor[neighboring_wi_fi_networks-async_get_wifi_neighbor_access_points-interval1].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_neighboring_wi_fi_networks',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Neighboring Wi-Fi networks',
    'platform': 'devolo_home_network',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'neighboring_wifi_networks',
    'unique_id': '1234567890_neighboring_wifi_networks',
    'unit_of_measurement': None,
  })
# ---
# name: test_update_plc_phyrates
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title PLC downlink PHY rate (test2)',
      'unit_of_measurement': <UnitOfDataRate.MEGABITS_PER_SECOND: 'Mbit/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_plc_downlink_phy_rate_test2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_update_plc_phyrates.1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_plc_downlink_phy_rate_test2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'PLC downlink PHY rate (test2)',
    'platform': 'devolo_home_network',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plc_rx_rate',
    'unique_id': '1234567890_plc_rx_rate_11:22:33:44:55:66',
    'unit_of_measurement': <UnitOfDataRate.MEGABITS_PER_SECOND: 'Mbit/s'>,
  })
# ---
# name: test_update_plc_phyrates.2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title PLC downlink PHY rate (test2)',
      'unit_of_measurement': <UnitOfDataRate.MEGABITS_PER_SECOND: 'Mbit/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_plc_downlink_phy_rate_test2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_update_plc_phyrates.3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mock_title_plc_downlink_phy_rate_test2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'PLC downlink PHY rate (test2)',
    'platform': 'devolo_home_network',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plc_rx_rate',
    'unique_id': '1234567890_plc_rx_rate_11:22:33:44:55:66',
    'unit_of_measurement': <UnitOfDataRate.MEGABITS_PER_SECOND: 'Mbit/s'>,
  })
# ---
