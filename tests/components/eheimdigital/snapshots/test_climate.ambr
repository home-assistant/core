# serializer version: 1
# name: test_dynamic_new_devices[climate.mock_heater-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 32,
      'min_temp': 18,
      'preset_modes': list([
        'none',
        'bio_mode',
        'smart_mode',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.mock_heater',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': None,
    'platform': 'eheimdigital',
    'previous_unique_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'heater',
    'unique_id': '00:00:00:00:00:02',
    'unit_of_measurement': None,
  })
# ---
# name: test_dynamic_new_devices[climate.mock_heater-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.2,
      'friendly_name': 'Mock Heater',
      'hvac_action': <HVACAction.HEATING: 'heating'>,
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 32,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'bio_mode',
        'smart_mode',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 25.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.mock_heater',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'auto',
  })
# ---
# name: test_setup_heater[climate.mock_heater-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 32,
      'min_temp': 18,
      'preset_modes': list([
        'none',
        'bio_mode',
        'smart_mode',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.mock_heater',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': None,
    'platform': 'eheimdigital',
    'previous_unique_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'heater',
    'unique_id': '00:00:00:00:00:02',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup_heater[climate.mock_heater-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.2,
      'friendly_name': 'Mock Heater',
      'hvac_action': <HVACAction.HEATING: 'heating'>,
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 32,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'bio_mode',
        'smart_mode',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 25.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.mock_heater',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'auto',
  })
# ---
