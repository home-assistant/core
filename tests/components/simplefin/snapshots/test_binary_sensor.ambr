# serializer version: 1
# name: test_all_entities[binary_sensor.investments_dr_evil_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.investments_dr_evil_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-4k5l6m7n-8o9p-1q2r-3s4t_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.investments_dr_evil_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Investments Dr Evil Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.investments_dr_evil_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_all_entities[binary_sensor.investments_my_checking_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.investments_my_checking_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-1k2l3m4n-5o6p-7q8r-9s0t_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.investments_my_checking_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Investments My Checking Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.investments_my_checking_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_all_entities[binary_sensor.investments_nerdcorp_series_b_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.investments_nerdcorp_series_b_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-5k6l7m8n-9o0p-1q2r-3s4t_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.investments_nerdcorp_series_b_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Investments NerdCorp Series B Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.investments_nerdcorp_series_b_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_all_entities[binary_sensor.mythical_randomsavings_castle_mortgage_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.mythical_randomsavings_castle_mortgage_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-7a8b9c0d-1e2f-3g4h-5i6j_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.mythical_randomsavings_castle_mortgage_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Mythical RandomSavings Castle Mortgage Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.mythical_randomsavings_castle_mortgage_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.mythical_randomsavings_unicorn_pot_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.mythical_randomsavings_unicorn_pot_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-6a7b8c9d-0e1f-2g3h-4i5j_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.mythical_randomsavings_unicorn_pot_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Mythical RandomSavings Unicorn Pot Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.mythical_randomsavings_unicorn_pot_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.random_bank_costco_anywhere_visa_r_card_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.random_bank_costco_anywhere_visa_r_card_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-3a4b5c6d-7e8f-9g0h-1i2j_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.random_bank_costco_anywhere_visa_r_card_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'Random Bank Costco Anywhere VisaÂ® Card Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.random_bank_costco_anywhere_visa_r_card_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.the_bank_of_go_prime_savings_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.the_bank_of_go_prime_savings_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-2a3b4c5d-6e7f-8g9h-0i1j_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.the_bank_of_go_prime_savings_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'The Bank of Go PRIME SAVINGS Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.the_bank_of_go_prime_savings_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_all_entities[binary_sensor.the_bank_of_go_the_bank_possible_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.the_bank_of_go_the_bank_possible_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Possible error',
    'platform': 'simplefin',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'possible_error',
    'unique_id': 'account_ACT-1a2b3c4d-5e6f-7g8h-9i0j_possible_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.the_bank_of_go_the_bank_possible_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by SimpleFIN API',
      'device_class': 'problem',
      'friendly_name': 'The Bank of Go The Bank Possible error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.the_bank_of_go_the_bank_possible_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
