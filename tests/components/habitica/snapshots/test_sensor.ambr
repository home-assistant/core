# serializer version: 1
# name: test_sensors[sensor.test_user_class-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'warrior',
        'rogue',
        'wizard',
        'healer',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_class',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Class',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.CLASS: 'class'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_class',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.test_user_class-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'test-user Class',
      'options': list([
        'warrior',
        'rogue',
        'wizard',
        'healer',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_class',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'wizard',
  })
# ---
# name: test_sensors[sensor.test_user_constitution-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_constitution',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Constitution',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.CONSTITUTION: 'constitution'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_constitution',
    'unit_of_measurement': 'CON',
  })
# ---
# name: test_sensors[sensor.test_user_constitution-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'allocated': 15,
      'buffs': 26,
      'class': 0,
      'equipment': 42,
      'friendly_name': 'test-user Constitution',
      'level': 19,
      'unit_of_measurement': 'CON',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_constitution',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '102',
  })
# ---
# name: test_sensors[sensor.test_user_display_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_display_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Display name',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.DISPLAY_NAME: 'display_name'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_display_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.test_user_display_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Display name',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_display_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'test-user',
  })
# ---
# name: test_sensors[sensor.test_user_eggs-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_eggs',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Eggs',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.EGGS_TOTAL: 'eggs_total'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_eggs_total',
    'unit_of_measurement': 'eggs',
  })
# ---
# name: test_sensors[sensor.test_user_eggs-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'Pandajunges': 2,
      'Tigerjunges': 0,
      'Wolfsjunges': 1,
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/Pet_Egg_Egg.png',
      'friendly_name': 'test-user Eggs',
      'unit_of_measurement': 'eggs',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_eggs',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_sensors[sensor.test_user_experience-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_experience',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Experience',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.EXPERIENCE: 'experience'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_experience',
    'unit_of_measurement': 'XP',
  })
# ---
# name: test_sensors[sensor.test_user_experience-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Experience',
      'unit_of_measurement': 'XP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_experience',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '737',
  })
# ---
# name: test_sensors[sensor.test_user_gems-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_gems',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Gems',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.GEMS: 'gems'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_gems',
    'unit_of_measurement': 'gems',
  })
# ---
# name: test_sensors[sensor.test_user_gems-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/shop_gem.png',
      'friendly_name': 'test-user Gems',
      'unit_of_measurement': 'gems',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_gems',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_sensors[sensor.test_user_gold-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_gold',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Gold',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.GOLD: 'gold'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_gold',
    'unit_of_measurement': 'GP',
  })
# ---
# name: test_sensors[sensor.test_user_gold-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Gold',
      'unit_of_measurement': 'GP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_gold',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '137.625872146098',
  })
# ---
# name: test_sensors[sensor.test_user_habits-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_habits',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Habits',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.HABITS: 'habits'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_habits',
    'unit_of_measurement': 'tasks',
  })
# ---
# name: test_sensors[sensor.test_user_habits-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      '1d147de6-5c02-4740-8e2f-71d3015a37f4': dict({
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'created_at': '2024-07-07T17:51:53.266000+00:00',
        'frequency': 'daily',
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'priority': 1,
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'text': 'Eine kurze Pause machen',
        'type': 'habit',
        'up': True,
      }),
      'bc1d1855-b2b8-4663-98ff-62e7b763dfc4': dict({
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'created_at': '2024-07-07T17:51:53.265000+00:00',
        'down': True,
        'frequency': 'daily',
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': 1,
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'type': 'habit',
      }),
      'e97659e0-2c42-4599-a7bb-00282adc410d': dict({
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'created_at': '2024-07-07T17:51:53.264000+00:00',
        'frequency': 'daily',
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': 1,
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'type': 'habit',
        'up': True,
      }),
      'f21fa608-cfc6-4413-9fc7-0eb1b48ca43a': dict({
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'created_at': '2024-07-07T17:51:53.268000+00:00',
        'down': True,
        'frequency': 'daily',
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'priority': 1,
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'text': 'Gesundes Essen/Junkfood',
        'type': 'habit',
        'up': True,
      }),
      'friendly_name': 'test-user Habits',
      'unit_of_measurement': 'tasks',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_habits',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_sensors[sensor.test_user_hatching_potions-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_hatching_potions',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Hatching potions',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.HATCHING_POTIONS_TOTAL: 'hatching_potions_total'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_hatching_potions_total',
    'unit_of_measurement': 'potions',
  })
# ---
# name: test_sensors[sensor.test_user_hatching_potions-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'Normales': 2,
      'Weißes': 0,
      'Wüstenfarbenes': 1,
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/Pet_HatchingPotion_RoyalPurple.png',
      'friendly_name': 'test-user Hatching potions',
      'unit_of_measurement': 'potions',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_hatching_potions',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_sensors[sensor.test_user_health-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_health',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Health',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.HEALTH: 'health'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_health',
    'unit_of_measurement': 'HP',
  })
# ---
# name: test_sensors[sensor.test_user_health-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Health',
      'unit_of_measurement': 'HP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_health',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.test_user_intelligence-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_intelligence',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Intelligence',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.INTELLIGENCE: 'intelligence'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_intelligence',
    'unit_of_measurement': 'INT',
  })
# ---
# name: test_sensors[sensor.test_user_intelligence-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'allocated': 15,
      'buffs': 26,
      'class': 0,
      'equipment': 12,
      'friendly_name': 'test-user Intelligence',
      'level': 19,
      'unit_of_measurement': 'INT',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_intelligence',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '72',
  })
# ---
# name: test_sensors[sensor.test_user_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Level',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.LEVEL: 'level'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_level',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.test_user_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Level',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '38',
  })
# ---
# name: test_sensors[sensor.test_user_mana-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_mana',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mana',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.MANA: 'mana'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_mana',
    'unit_of_measurement': 'MP',
  })
# ---
# name: test_sensors[sensor.test_user_mana-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Mana',
      'unit_of_measurement': 'MP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_mana',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '50.9',
  })
# ---
# name: test_sensors[sensor.test_user_max_health-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_max_health',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Max. health',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.HEALTH_MAX: 'health_max'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_health_max',
    'unit_of_measurement': 'HP',
  })
# ---
# name: test_sensors[sensor.test_user_max_health-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Max. health',
      'unit_of_measurement': 'HP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_max_health',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '50',
  })
# ---
# name: test_sensors[sensor.test_user_max_mana-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_max_mana',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Max. mana',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.MANA_MAX: 'mana_max'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_mana_max',
    'unit_of_measurement': 'MP',
  })
# ---
# name: test_sensors[sensor.test_user_max_mana-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Max. mana',
      'unit_of_measurement': 'MP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_max_mana',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '166',
  })
# ---
# name: test_sensors[sensor.test_user_mystic_hourglasses-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_mystic_hourglasses',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mystic hourglasses',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.TRINKETS: 'trinkets'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_trinkets',
    'unit_of_measurement': '⧖',
  })
# ---
# name: test_sensors[sensor.test_user_mystic_hourglasses-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/notif_subscriber_reward.png',
      'friendly_name': 'test-user Mystic hourglasses',
      'unit_of_measurement': '⧖',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_mystic_hourglasses',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.test_user_next_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_next_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Next level',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.EXPERIENCE_MAX: 'experience_max'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_experience_max',
    'unit_of_measurement': 'XP',
  })
# ---
# name: test_sensors[sensor.test_user_next_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Next level',
      'unit_of_measurement': 'XP',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_next_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '880',
  })
# ---
# name: test_sensors[sensor.test_user_perception-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_perception',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Perception',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.PERCEPTION: 'perception'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_perception',
    'unit_of_measurement': 'PER',
  })
# ---
# name: test_sensors[sensor.test_user_perception-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'allocated': 15,
      'buffs': 26,
      'class': 0,
      'equipment': 15,
      'friendly_name': 'test-user Perception',
      'level': 19,
      'unit_of_measurement': 'PER',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_perception',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75',
  })
# ---
# name: test_sensors[sensor.test_user_pet_food-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_pet_food',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Pet food',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.FOOD_TOTAL: 'food_total'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_food_total',
    'unit_of_measurement': 'foods',
  })
# ---
# name: test_sensors[sensor.test_user_pet_food-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'Fleisch': 0,
      'Kartoffel': 2,
      'Milch': 1,
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/Pet_Food_Strawberry.png',
      'friendly_name': 'test-user Pet food',
      'unit_of_measurement': 'foods',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_pet_food',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_sensors[sensor.test_user_quest_scrolls-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_quest_scrolls',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Quest scrolls',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.QUEST_SCROLLS: 'quest_scrolls'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_quest_scrolls',
    'unit_of_measurement': 'scrolls',
  })
# ---
# name: test_sensors[sensor.test_user_quest_scrolls-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'Angriff des Banalen, Teil 1: Abwasch-Katastrophe!': 1,
      'Der Basi-List': 0,
      'Die goldene Ritterin, Teil 1: Ein ernstes Gespräch': 0,
      'Die ungezähmten Staubmäuse': 1,
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/inventory_quest_scroll_dustbunnies.png',
      'friendly_name': 'test-user Quest scrolls',
      'unit_of_measurement': 'scrolls',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_quest_scrolls',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensors[sensor.test_user_rewards-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_rewards',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Rewards',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.REWARDS: 'rewards'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_rewards',
    'unit_of_measurement': 'tasks',
  })
# ---
# name: test_sensors[sensor.test_user_rewards-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      '5e2ea1df-f6e6-4ba3-bccb-97c5ec63e99b': dict({
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'created_at': '2024-07-07T17:51:53.266000+00:00',
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'notes': 'Schaue fern, spiele ein Spiel, gönne Dir einen Leckerbissen, es liegt ganz bei Dir!',
        'priority': 1,
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'text': 'Belohne Dich selbst',
        'type': 'reward',
        'value': 10.0,
      }),
      'friendly_name': 'test-user Rewards',
      'unit_of_measurement': 'tasks',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_rewards',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensors[sensor.test_user_saddles-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_saddles',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Saddles',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.SADDLE: 'saddle'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_saddle',
    'unit_of_measurement': 'saddles',
  })
# ---
# name: test_sensors[sensor.test_user_saddles-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'entity_picture': 'https://habitica-assets.s3.amazonaws.com/mobileApp/images/Pet_Food_Saddle.png',
      'friendly_name': 'test-user Saddles',
      'unit_of_measurement': 'saddles',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_saddles',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensors[sensor.test_user_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_user_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Strength',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabiticaSensorEntity.STRENGTH: 'strength'>,
    'unique_id': 'a380546a-94be-4b8e-8a0b-23e0d5c03303_strength',
    'unit_of_measurement': 'STR',
  })
# ---
# name: test_sensors[sensor.test_user_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'allocated': 15,
      'buffs': 26,
      'class': 0,
      'equipment': 44,
      'friendly_name': 'test-user Strength',
      'level': 19,
      'unit_of_measurement': 'STR',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_user_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '104',
  })
# ---
