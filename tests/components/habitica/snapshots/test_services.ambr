# serializer version: 1
# name: test_get_tasks[all_tasks]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('f21fa608-cfc6-4413-9fc7-0eb1b48ca43a'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Gesundes Essen/Junkfood',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 324000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('1d147de6-5c02-4740-8e2f-71d3015a37f4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Eine kurze Pause machen',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('bc1d1855-b2b8-4663-98ff-62e7b763dfc4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'up': False,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': 'create_a_task',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 264000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 140000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('e97659e0-2c42-4599-a7bb-00282adc410d'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 17, 55, 3, 74000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 291000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 717000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 7, 20, 59, 722000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 246000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 10, 1, 32, 219000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 2.023365658844519,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 691000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0738942424964806,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 638000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.10103816898038132,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 540000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.8963760215867302,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 607000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.919611992979862,
          }),
        ]),
        'id': UUID('f2c85972-1a19-4426-bc6d-ce3337b9d99f'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 22, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 23, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 25, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 26, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um Deinen Terminplan festzulegen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('1491d640-6b21-4d0c-8940-0b7aa61c8836'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 20, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
        ]),
        'text': '5 Minuten ruhig durchatmen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 51, 41, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -1.919611992979862,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': True,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('2c6d136c-a1c3-4bef-b7c4-fa980784b1e1'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 28, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 1, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 4, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 8, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Ein einstündiges Workout im Fitnessstudio absolvieren.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': True,
          'su': True,
          't': False,
          'th': False,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
          UUID('6aa65cbb-dc08-4fdd-9a66-7dedb7ba4cab'),
        ]),
        'text': 'Fitnessstudio besuchen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'userId': UUID('1343a9af-d891-4027-841a-956d105ca408'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 27, 22, 17, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('88de7cd9-af2b-49ce-9afd-bf941d87336b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Das Buch, das du angefangen hast, bis zum Wochenende fertig lesen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('20409521-c096-447f-9a90-23e8da615710'),
          UUID('8515e4ae-2f4b-455a-b4a4-8939e04b1bfd'),
        ]),
        'text': 'Buch zu Ende lesen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': 'pay_bills',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 19, 513000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 8, 31, 22, 16, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('2f6fcabc-f670-4ec3-ba65-817e8deea490'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Strom- und Internetrechnungen rechtzeitig überweisen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('91c09432-10ac-4a49-bd20-823081ec29ed'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 2, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Rechnungen bezahlen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 35, 576000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('1aa3137e-ef72-4d1f-91ee-41933602f438'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Rasen mähen und die Pflanzen gießen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Garten pflegen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('86ea2475-d1b5-4020-bdcc-c188c7996afa'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Den Ausflug für das kommende Wochenende organisieren.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('51076966-2970-4b40-b6ba-d58c6a756dd7'),
        ]),
        'text': 'Wochenendausflug planen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.REWARD: 'reward'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('5e2ea1df-f6e6-4ba3-bccb-97c5ec63e99b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Schaue fern, spiele ein Spiel, gönne Dir einen Leckerbissen, es liegt ganz bei Dir!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Belohne Dich selbst',
        'up': None,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 10.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 10, 10, 15, 57, 14, 304000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.MONTHLY: 'monthly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('6e53f1f5-a315-4edd-984d-8d762e4a08ef'),
        'isDue': False,
        'nextDue': list([
          datetime.datetime(2024, 12, 14, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 1, 18, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 2, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 3, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 4, 19, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 5, 17, 23, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um den Namen Deines aktuellen Projekts anzugeben & setze einen Terminplan!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': False,
          'su': True,
          't': False,
          'th': False,
          'w': False,
        }),
        'startDate': datetime.datetime(2024, 9, 20, 23, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Arbeite an einem kreativen Projekt',
        'up': None,
        'updatedAt': datetime.datetime(2024, 11, 27, 23, 47, 29, 986000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -0.9215181434950852,
        'weeksOfMonth': list([
          3,
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 19, 10, 919000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('162f0bbe-a097-4a06-b4f4-8fbeed85d2ba'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Lebensmittel und Haushaltsbedarf für die Woche einkaufen.',
        'priority': <TaskPriority.MEDIUM: 1.5>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wocheneinkauf erledigen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 15, 484000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 18, 30, 646000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('3fa06743-aa0f-472b-af1a-f27c755e329c'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Wohnzimmer und Küche gründlich aufräumen.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wohnung aufräumen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 18, 34, 663000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[by alias]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[by keyword]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('bc1d1855-b2b8-4663-98ff-62e7b763dfc4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'up': False,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': 'create_a_task',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 264000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 140000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('e97659e0-2c42-4599-a7bb-00282adc410d'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[by tag]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': True,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('2c6d136c-a1c3-4bef-b7c4-fa980784b1e1'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 28, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 1, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 4, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 8, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Ein einstündiges Workout im Fitnessstudio absolvieren.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': True,
          'su': True,
          't': False,
          'th': False,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
          UUID('6aa65cbb-dc08-4fdd-9a66-7dedb7ba4cab'),
        ]),
        'text': 'Fitnessstudio besuchen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'userId': UUID('1343a9af-d891-4027-841a-956d105ca408'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 27, 22, 17, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('88de7cd9-af2b-49ce-9afd-bf941d87336b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Das Buch, das du angefangen hast, bis zum Wochenende fertig lesen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('20409521-c096-447f-9a90-23e8da615710'),
          UUID('8515e4ae-2f4b-455a-b4a4-8939e04b1bfd'),
        ]),
        'text': 'Buch zu Ende lesen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[by task ID]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 17, 55, 3, 74000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 291000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 717000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 7, 20, 59, 722000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 246000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 10, 1, 32, 219000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 2.023365658844519,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 691000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0738942424964806,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 638000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.10103816898038132,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 540000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.8963760215867302,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 607000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.919611992979862,
          }),
        ]),
        'id': UUID('f2c85972-1a19-4426-bc6d-ce3337b9d99f'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 22, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 23, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 25, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 26, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um Deinen Terminplan festzulegen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('1491d640-6b21-4d0c-8940-0b7aa61c8836'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 20, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
        ]),
        'text': '5 Minuten ruhig durchatmen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 51, 41, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -1.919611992979862,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[by task name]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 324000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('1d147de6-5c02-4740-8e2f-71d3015a37f4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Eine kurze Pause machen',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[easy tasks]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('f21fa608-cfc6-4413-9fc7-0eb1b48ca43a'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Gesundes Essen/Junkfood',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 324000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('1d147de6-5c02-4740-8e2f-71d3015a37f4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Eine kurze Pause machen',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('bc1d1855-b2b8-4663-98ff-62e7b763dfc4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'up': False,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': 'create_a_task',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 264000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 140000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('e97659e0-2c42-4599-a7bb-00282adc410d'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 17, 55, 3, 74000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 291000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 717000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 7, 20, 59, 722000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 246000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 10, 1, 32, 219000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 2.023365658844519,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 691000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0738942424964806,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 638000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.10103816898038132,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 540000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.8963760215867302,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 607000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.919611992979862,
          }),
        ]),
        'id': UUID('f2c85972-1a19-4426-bc6d-ce3337b9d99f'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 22, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 23, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 25, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 26, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um Deinen Terminplan festzulegen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('1491d640-6b21-4d0c-8940-0b7aa61c8836'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 20, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
        ]),
        'text': '5 Minuten ruhig durchatmen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 51, 41, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -1.919611992979862,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 27, 22, 17, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('88de7cd9-af2b-49ce-9afd-bf941d87336b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Das Buch, das du angefangen hast, bis zum Wochenende fertig lesen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('20409521-c096-447f-9a90-23e8da615710'),
          UUID('8515e4ae-2f4b-455a-b4a4-8939e04b1bfd'),
        ]),
        'text': 'Buch zu Ende lesen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': 'pay_bills',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 19, 513000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 8, 31, 22, 16, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('2f6fcabc-f670-4ec3-ba65-817e8deea490'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Strom- und Internetrechnungen rechtzeitig überweisen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('91c09432-10ac-4a49-bd20-823081ec29ed'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 2, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Rechnungen bezahlen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 35, 576000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('1aa3137e-ef72-4d1f-91ee-41933602f438'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Rasen mähen und die Pflanzen gießen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Garten pflegen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('86ea2475-d1b5-4020-bdcc-c188c7996afa'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Den Ausflug für das kommende Wochenende organisieren.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('51076966-2970-4b40-b6ba-d58c6a756dd7'),
        ]),
        'text': 'Wochenendausflug planen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.REWARD: 'reward'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('5e2ea1df-f6e6-4ba3-bccb-97c5ec63e99b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Schaue fern, spiele ein Spiel, gönne Dir einen Leckerbissen, es liegt ganz bei Dir!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Belohne Dich selbst',
        'up': None,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 10.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 10, 10, 15, 57, 14, 304000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.MONTHLY: 'monthly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('6e53f1f5-a315-4edd-984d-8d762e4a08ef'),
        'isDue': False,
        'nextDue': list([
          datetime.datetime(2024, 12, 14, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 1, 18, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 2, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 3, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 4, 19, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 5, 17, 23, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um den Namen Deines aktuellen Projekts anzugeben & setze einen Terminplan!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': False,
          'su': True,
          't': False,
          'th': False,
          'w': False,
        }),
        'startDate': datetime.datetime(2024, 9, 20, 23, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Arbeite an einem kreativen Projekt',
        'up': None,
        'updatedAt': datetime.datetime(2024, 11, 27, 23, 47, 29, 986000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -0.9215181434950852,
        'weeksOfMonth': list([
          3,
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[empty result]
  dict({
    'tasks': list([
    ]),
  })
# ---
# name: test_get_tasks[hard tasks]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': True,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('2c6d136c-a1c3-4bef-b7c4-fa980784b1e1'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 28, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 1, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 4, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 8, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Ein einstündiges Workout im Fitnessstudio absolvieren.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': True,
          'su': True,
          't': False,
          'th': False,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
          UUID('6aa65cbb-dc08-4fdd-9a66-7dedb7ba4cab'),
        ]),
        'text': 'Fitnessstudio besuchen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'userId': UUID('1343a9af-d891-4027-841a-956d105ca408'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 18, 30, 646000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('3fa06743-aa0f-472b-af1a-f27c755e329c'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Wohnzimmer und Küche gründlich aufräumen.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wohnung aufräumen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 18, 34, 663000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[medium tasks]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 19, 10, 919000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('162f0bbe-a097-4a06-b4f4-8fbeed85d2ba'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Lebensmittel und Haushaltsbedarf für die Woche einkaufen.',
        'priority': <TaskPriority.MEDIUM: 1.5>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wocheneinkauf erledigen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 15, 484000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only dailies and habits]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('f21fa608-cfc6-4413-9fc7-0eb1b48ca43a'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Gesundes Essen/Junkfood',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 324000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('1d147de6-5c02-4740-8e2f-71d3015a37f4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Eine kurze Pause machen',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('bc1d1855-b2b8-4663-98ff-62e7b763dfc4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'up': False,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': 'create_a_task',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 264000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 140000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('e97659e0-2c42-4599-a7bb-00282adc410d'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 17, 55, 3, 74000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 291000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 717000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 7, 20, 59, 722000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 246000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 10, 1, 32, 219000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 2.023365658844519,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 691000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0738942424964806,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 638000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.10103816898038132,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 540000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.8963760215867302,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 607000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.919611992979862,
          }),
        ]),
        'id': UUID('f2c85972-1a19-4426-bc6d-ce3337b9d99f'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 22, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 23, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 25, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 26, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um Deinen Terminplan festzulegen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('1491d640-6b21-4d0c-8940-0b7aa61c8836'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 20, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
        ]),
        'text': '5 Minuten ruhig durchatmen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 51, 41, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -1.919611992979862,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': True,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('2c6d136c-a1c3-4bef-b7c4-fa980784b1e1'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 28, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 1, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 4, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 8, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Ein einstündiges Workout im Fitnessstudio absolvieren.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': True,
          'su': True,
          't': False,
          'th': False,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
          UUID('6aa65cbb-dc08-4fdd-9a66-7dedb7ba4cab'),
        ]),
        'text': 'Fitnessstudio besuchen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'userId': UUID('1343a9af-d891-4027-841a-956d105ca408'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 10, 10, 15, 57, 14, 304000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.MONTHLY: 'monthly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('6e53f1f5-a315-4edd-984d-8d762e4a08ef'),
        'isDue': False,
        'nextDue': list([
          datetime.datetime(2024, 12, 14, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 1, 18, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 2, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 3, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 4, 19, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 5, 17, 23, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um den Namen Deines aktuellen Projekts anzugeben & setze einen Terminplan!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': False,
          'su': True,
          't': False,
          'th': False,
          'w': False,
        }),
        'startDate': datetime.datetime(2024, 9, 20, 23, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Arbeite an einem kreativen Projekt',
        'up': None,
        'updatedAt': datetime.datetime(2024, 11, 27, 23, 47, 29, 986000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -0.9215181434950852,
        'weeksOfMonth': list([
          3,
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only dailies]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': 'alias_zahnseide_benutzen',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': False,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 6, 749000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 292000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 719000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 9, 44, 56, 907000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 243000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 20, 20, 19, 56, 447000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.07645736684721605,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 692000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.921585289356988,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 640000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.9454824860630637,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 542000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9966001649571803,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 608000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -4.07641493832036,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 9, 21, 22, 24, 20, 150000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -2.9663035443712333,
          }),
        ]),
        'id': UUID('564b9ac9-c53d-4638-9e7f-1cd96fe19baa'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 24, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 25, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 26, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
          datetime.datetime(2024, 9, 28, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), 'GMT')),
        ]),
        'notes': 'Klicke um Änderungen zu machen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Zahnseide benutzen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 24, 20, 154000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -2.9663035443712333,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 7, 17, 55, 3, 74000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 17, 15, 11, 291000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.02529999999999999,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 7, 9, 22, 31, 46, 717000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.9740518837628547,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 11, 7, 20, 59, 722000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.051222853419153,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 9, 58, 45, 246000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0499115128458676,
          }),
          dict({
            'completed': True,
            'date': datetime.datetime(2024, 7, 12, 10, 1, 32, 219000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 2.023365658844519,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 8, 21, 15, 55, 7, 691000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 1.0738942424964806,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 20, 15, 29, 23, 638000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': 0.10103816898038132,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 21, 23, 7, 540000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -0.8963760215867302,
          }),
          dict({
            'completed': False,
            'date': datetime.datetime(2024, 9, 21, 22, 1, 55, 607000, tzinfo=datetime.timezone.utc),
            'isDue': True,
            'scoredDown': None,
            'scoredUp': None,
            'value': -1.919611992979862,
          }),
        ]),
        'id': UUID('f2c85972-1a19-4426-bc6d-ce3337b9d99f'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 22, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 23, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 25, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 26, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um Deinen Terminplan festzulegen!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('1491d640-6b21-4d0c-8940-0b7aa61c8836'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 20, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': True,
          'm': True,
          's': True,
          'su': True,
          't': True,
          'th': True,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 7, 6, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
        ]),
        'text': '5 Minuten ruhig durchatmen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 51, 41, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -1.919611992979862,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
          dict({
            'completed': True,
            'id': UUID('c8662c16-8cd3-4104-a3b2-b1e54f61b8ca'),
            'text': 'Checklist-item1',
          }),
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.WEEKLY: 'weekly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('2c6d136c-a1c3-4bef-b7c4-fa980784b1e1'),
        'isDue': True,
        'nextDue': list([
          datetime.datetime(2024, 9, 24, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 27, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 9, 28, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 1, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 4, 22, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2024, 10, 8, 22, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Ein einstündiges Workout im Fitnessstudio absolvieren.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': True,
          'su': True,
          't': False,
          'th': False,
          'w': True,
        }),
        'startDate': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'streak': 0,
        'tags': list([
          UUID('6aa65cbb-dc08-4fdd-9a66-7dedb7ba4cab'),
        ]),
        'text': 'Fitnessstudio besuchen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 22, 11, 44, 43, 774000, tzinfo=datetime.timezone.utc),
        'userId': UUID('1343a9af-d891-4027-841a-956d105ca408'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': True,
      }),
      dict({
        'Type': <TaskType.DAILY: 'daily'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 10, 10, 15, 57, 14, 304000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': 1,
        'frequency': <Frequency.MONTHLY: 'monthly'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('6e53f1f5-a315-4edd-984d-8d762e4a08ef'),
        'isDue': False,
        'nextDue': list([
          datetime.datetime(2024, 12, 14, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 1, 18, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 2, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 3, 15, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 4, 19, 23, 0, tzinfo=datetime.timezone.utc),
          datetime.datetime(2025, 5, 17, 23, 0, tzinfo=datetime.timezone.utc),
        ]),
        'notes': 'Klicke um den Namen Deines aktuellen Projekts anzugeben & setze einen Terminplan!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': False,
          's': False,
          'su': True,
          't': False,
          'th': False,
          'w': False,
        }),
        'startDate': datetime.datetime(2024, 9, 20, 23, 0, tzinfo=datetime.timezone.utc),
        'streak': 1,
        'tags': list([
        ]),
        'text': 'Arbeite an einem kreativen Projekt',
        'up': None,
        'updatedAt': datetime.datetime(2024, 11, 27, 23, 47, 29, 986000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': -0.9215181434950852,
        'weeksOfMonth': list([
          3,
        ]),
        'yesterDaily': True,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only habits]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('f21fa608-cfc6-4413-9fc7-0eb1b48ca43a'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Gesundes Essen/Junkfood',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 268000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 324000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('1d147de6-5c02-4740-8e2f-71d3015a37f4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': '',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Eine kurze Pause machen',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': True,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
        ]),
        'id': UUID('bc1d1855-b2b8-4663-98ff-62e7b763dfc4'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Oder lösche es über die Bearbeitungs-Ansicht',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Klicke hier um dies als schlechte Gewohnheit zu markieren, die Du gerne loswerden möchtest',
        'up': False,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 265000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.HABIT: 'habit'>,
        'alias': 'create_a_task',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': 0,
        'counterUp': 0,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 264000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': False,
        'everyX': None,
        'frequency': <Frequency.DAILY: 'daily'>,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': list([
          dict({
            'completed': None,
            'date': datetime.datetime(2024, 7, 7, 18, 26, 3, 140000, tzinfo=datetime.timezone.utc),
            'isDue': None,
            'scoredDown': 0,
            'scoredUp': 1,
            'value': 1.0,
          }),
        ]),
        'id': UUID('e97659e0-2c42-4599-a7bb-00282adc410d'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Eine Gewohnheit, eine Tagesaufgabe oder ein To-Do',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Füge eine Aufgabe zu Habitica hinzu',
        'up': True,
        'updatedAt': datetime.datetime(2024, 7, 12, 9, 58, 45, 438000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only rewards]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.REWARD: 'reward'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('5e2ea1df-f6e6-4ba3-bccb-97c5ec63e99b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Schaue fern, spiele ein Spiel, gönne Dir einen Leckerbissen, es liegt ganz bei Dir!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Belohne Dich selbst',
        'up': None,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 10.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only todos and rewards]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 27, 22, 17, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('88de7cd9-af2b-49ce-9afd-bf941d87336b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Das Buch, das du angefangen hast, bis zum Wochenende fertig lesen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('20409521-c096-447f-9a90-23e8da615710'),
          UUID('8515e4ae-2f4b-455a-b4a4-8939e04b1bfd'),
        ]),
        'text': 'Buch zu Ende lesen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': 'pay_bills',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 19, 513000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 8, 31, 22, 16, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('2f6fcabc-f670-4ec3-ba65-817e8deea490'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Strom- und Internetrechnungen rechtzeitig überweisen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('91c09432-10ac-4a49-bd20-823081ec29ed'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 2, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Rechnungen bezahlen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 35, 576000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('1aa3137e-ef72-4d1f-91ee-41933602f438'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Rasen mähen und die Pflanzen gießen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Garten pflegen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('86ea2475-d1b5-4020-bdcc-c188c7996afa'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Den Ausflug für das kommende Wochenende organisieren.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('51076966-2970-4b40-b6ba-d58c6a756dd7'),
        ]),
        'text': 'Wochenendausflug planen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.REWARD: 'reward'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': None,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('5e2ea1df-f6e6-4ba3-bccb-97c5ec63e99b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Schaue fern, spiele ein Spiel, gönne Dir einen Leckerbissen, es liegt ganz bei Dir!',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Belohne Dich selbst',
        'up': None,
        'updatedAt': datetime.datetime(2024, 7, 7, 17, 51, 53, 266000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 10.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 19, 10, 919000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('162f0bbe-a097-4a06-b4f4-8fbeed85d2ba'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Lebensmittel und Haushaltsbedarf für die Woche einkaufen.',
        'priority': <TaskPriority.MEDIUM: 1.5>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wocheneinkauf erledigen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 15, 484000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 18, 30, 646000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('3fa06743-aa0f-472b-af1a-f27c755e329c'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Wohnzimmer und Küche gründlich aufräumen.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wohnung aufräumen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 18, 34, 663000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[only todos]
  dict({
    'tasks': list([
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 27, 22, 17, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('88de7cd9-af2b-49ce-9afd-bf941d87336b'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Das Buch, das du angefangen hast, bis zum Wochenende fertig lesen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('20409521-c096-447f-9a90-23e8da615710'),
          UUID('8515e4ae-2f4b-455a-b4a4-8939e04b1bfd'),
        ]),
        'text': 'Buch zu Ende lesen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 17, 57, 816000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': 'pay_bills',
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 17, 19, 513000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 8, 31, 22, 16, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('2f6fcabc-f670-4ec3-ba65-817e8deea490'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Strom- und Internetrechnungen rechtzeitig überweisen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
          dict({
            'id': UUID('91c09432-10ac-4a49-bd20-823081ec29ed'),
            'startDate': None,
            'time': datetime.datetime(2024, 9, 22, 2, 0, tzinfo=datetime.timezone.utc),
          }),
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Rechnungen bezahlen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 35, 576000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('1aa3137e-ef72-4d1f-91ee-41933602f438'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Rasen mähen und die Pflanzen gießen.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
        ]),
        'text': 'Garten pflegen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 38, 153000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': False,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'date': datetime.datetime(2024, 9, 21, 22, 0, tzinfo=datetime.timezone.utc),
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('86ea2475-d1b5-4020-bdcc-c188c7996afa'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Den Ausflug für das kommende Wochenende organisieren.',
        'priority': <TaskPriority.EASY: 1>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('51076966-2970-4b40-b6ba-d58c6a756dd7'),
        ]),
        'text': 'Wochenendausflug planen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 16, 16, 756000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 0.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 19, 10, 919000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('162f0bbe-a097-4a06-b4f4-8fbeed85d2ba'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Lebensmittel und Haushaltsbedarf für die Woche einkaufen.',
        'priority': <TaskPriority.MEDIUM: 1.5>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wocheneinkauf erledigen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 19, 15, 484000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
      dict({
        'Type': <TaskType.TODO: 'todo'>,
        'alias': None,
        'attribute': <Attributes.STR: 'str'>,
        'byHabitica': False,
        'challenge': dict({
          'broken': None,
          'id': None,
          'shortName': None,
          'taskId': None,
          'winner': None,
        }),
        'checklist': list([
        ]),
        'collapseChecklist': False,
        'completed': True,
        'counterDown': None,
        'counterUp': None,
        'createdAt': datetime.datetime(2024, 9, 21, 22, 18, 30, 646000, tzinfo=datetime.timezone.utc),
        'date': None,
        'daysOfMonth': list([
        ]),
        'down': None,
        'everyX': None,
        'frequency': None,
        'group': dict({
          'assignedDate': None,
          'assignedUsers': list([
          ]),
          'assignedUsersDetail': dict({
          }),
          'assigningUsername': None,
          'completedBy': dict({
            'date': None,
            'userId': None,
          }),
          'id': None,
          'managerNotes': None,
          'taskId': None,
        }),
        'history': None,
        'id': UUID('3fa06743-aa0f-472b-af1a-f27c755e329c'),
        'isDue': None,
        'nextDue': list([
        ]),
        'notes': 'Wohnzimmer und Küche gründlich aufräumen.',
        'priority': <TaskPriority.HARD: 2>,
        'reminders': list([
        ]),
        'repeat': dict({
          'f': False,
          'm': True,
          's': False,
          'su': False,
          't': True,
          'th': False,
          'w': True,
        }),
        'startDate': None,
        'streak': None,
        'tags': list([
          UUID('64235347-55d0-4ba1-a86a-3428dcfdf319'),
        ]),
        'text': 'Wohnung aufräumen',
        'up': None,
        'updatedAt': datetime.datetime(2024, 9, 21, 22, 18, 34, 663000, tzinfo=datetime.timezone.utc),
        'userId': UUID('5f359083-ef78-4af0-985a-0b2c6d05797c'),
        'value': 1.0,
        'weeksOfMonth': list([
        ]),
        'yesterDaily': None,
      }),
    ]),
  })
# ---
# name: test_get_tasks[trivial tasks]
  dict({
    'tasks': list([
    ]),
  })
# ---
