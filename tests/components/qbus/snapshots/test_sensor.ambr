# serializer version: 1
# name: test_sensor[sensor.energie-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energie',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_84',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor[sensor.energie-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Energie',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energie',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.gas-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.gas',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLUME_FLOW_RATE: 'volume_flow_rate'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_85',
    'unit_of_measurement': <UnitOfVolumeFlowRate.CUBIC_METERS_PER_HOUR: 'm³/h'>,
  })
# ---
# name: test_sensor[sensor.gas-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volume_flow_rate',
      'friendly_name': 'Gas',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumeFlowRate.CUBIC_METERS_PER_HOUR: 'm³/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gas',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.gas_flow-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.gas_flow',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLUME_FLOW_RATE: 'volume_flow_rate'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_86',
    'unit_of_measurement': <UnitOfVolumeFlowRate.CUBIC_METERS_PER_HOUR: 'm³/h'>,
  })
# ---
# name: test_sensor[sensor.gas_flow-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volume_flow_rate',
      'friendly_name': 'Gas Flow',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumeFlowRate.CUBIC_METERS_PER_HOUR: 'm³/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gas_flow',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.lichtsterkte_tuin-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.lichtsterkte_tuin',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_88',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.lichtsterkte_tuin-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Lichtsterkte Tuin',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lichtsterkte_tuin',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.living_th_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.living_th_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_120',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor[sensor.living_th_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Living Th Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.living_th_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.luchtdruk-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.luchtdruk',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_81',
    'unit_of_measurement': <UnitOfPressure.MBAR: 'mbar'>,
  })
# ---
# name: test_sensor[sensor.luchtdruk-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'Luchtdruk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.MBAR: 'mbar'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.luchtdruk',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.luchtkwaliteit-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.luchtkwaliteit',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_82',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensor[sensor.luchtkwaliteit-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'Luchtkwaliteit',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.luchtkwaliteit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.luchtsensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.luchtsensor',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_224',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensor[sensor.luchtsensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'Luchtsensor',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.luchtsensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.regenput-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.regenput',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_40',
    'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
  })
# ---
# name: test_sensor[sensor.regenput-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'Regenput',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.regenput',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.stroom-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stroom',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_83',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_sensor[sensor.stroom-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'Stroom',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stroom',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.vochtigheid_keuken-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vochtigheid_keuken',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_94-1',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.vochtigheid_keuken-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Vochtigheid Keuken',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vochtigheid_keuken',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.vochtigheid_living-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vochtigheid_living',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_87',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.vochtigheid_living-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Vochtigheid Living',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vochtigheid_living',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_21007_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor[sensor.weersensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Weersensor',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_daylight-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_daylight',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Daylight',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'daylight',
    'unique_id': 'ctd_000001_21007_daylight',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.weersensor_daylight-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Weersensor Daylight',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_daylight',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_illuminance',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Illuminance',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_21007_light',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Weersensor Illuminance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_illuminance',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_east-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_illuminance_east',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Illuminance east',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_east',
    'unique_id': 'ctd_000001_21007_light_east',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_east-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Weersensor Illuminance east',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_illuminance_east',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_south-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_illuminance_south',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Illuminance south',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_south',
    'unique_id': 'ctd_000001_21007_light_south',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_south-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Weersensor Illuminance south',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_illuminance_south',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_west-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_illuminance_west',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Illuminance west',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'light_west',
    'unique_id': 'ctd_000001_21007_light_west',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensor[sensor.weersensor_illuminance_west-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Weersensor Illuminance west',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_illuminance_west',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor[sensor.weersensor_wind_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.weersensor_wind_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind speed',
    'platform': 'qbus',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'ctd_000001_21007_wind',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor[sensor.weersensor_wind_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'wind_speed',
      'friendly_name': 'Weersensor Wind speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.weersensor_wind_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
