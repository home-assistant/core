# serializer version: 1
# name: test_all_sensors[sensor.poweropti_energy_return-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.poweropti_energy_return',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy return',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_return',
    'unique_id': '9x9x1f12xx3x_energy_return',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_return-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Poweropti Energy return',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.poweropti_energy_return',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '111.111',
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.poweropti_energy_usage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy usage',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_usage',
    'unique_id': '9x9x1f12xx3x_energy_usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Poweropti Energy usage',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.poweropti_energy_usage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1111.111',
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage_high_tariff-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.poweropti_energy_usage_high_tariff',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy usage high tariff',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_usage_high_tariff',
    'unique_id': '9x9x1f12xx3x_energy_usage_high_tariff',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage_high_tariff-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Poweropti Energy usage high tariff',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.poweropti_energy_usage_high_tariff',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '111.111',
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage_low_tariff-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.poweropti_energy_usage_low_tariff',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy usage low tariff',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_usage_low_tariff',
    'unique_id': '9x9x1f12xx3x_energy_usage_low_tariff',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.poweropti_energy_usage_low_tariff-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Poweropti Energy usage low tariff',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.poweropti_energy_usage_low_tariff',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '111.111',
  })
# ---
# name: test_all_sensors[sensor.poweropti_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.poweropti_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '9x9x1f12xx3x_power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.poweropti_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Poweropti Power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.poweropti_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '111',
  })
# ---
# name: test_all_sensors[sensor.wateropti_cold_water-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.wateropti_cold_water',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Cold water',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cold_water',
    'unique_id': '9x9x1f12xx4x_cold_water',
    'unit_of_measurement': <UnitOfVolume.CUBIC_METERS: 'm³'>,
  })
# ---
# name: test_all_sensors[sensor.wateropti_cold_water-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Wateropti Cold water',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfVolume.CUBIC_METERS: 'm³'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.wateropti_cold_water',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1111.111',
  })
# ---
# name: test_all_sensors[sensor.wateropti_warm_water-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.wateropti_warm_water',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Warm water',
    'platform': 'powerfox',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'warm_water',
    'unique_id': '9x9x1f12xx4x_warm_water',
    'unit_of_measurement': <UnitOfVolume.CUBIC_METERS: 'm³'>,
  })
# ---
# name: test_all_sensors[sensor.wateropti_warm_water-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Wateropti Warm water',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfVolume.CUBIC_METERS: 'm³'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.wateropti_warm_water',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
