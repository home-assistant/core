# serializer version: 1
# name: test_all_entities[sensor.dryer_end_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.dryer_end_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': 'mdi:progress-clock',
    'original_name': 'End time',
    'platform': 'whirlpool',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'end_time',
    'unique_id': 'said_dryer-timeremaining',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.dryer_end_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'timestamp',
      'friendly_name': 'Dryer End time',
      'icon': 'mdi:progress-clock',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dryer_end_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2025-05-04T12:59:00+00:00',
  })
# ---
# name: test_all_entities[sensor.dryer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standby',
        'setting',
        'delay_countdown',
        'delay_paused',
        'smart_delay',
        'smart_grid_pause',
        'pause',
        'running_maincycle',
        'running_postcycle',
        'exception',
        'complete',
        'power_failure',
        'service_diagnostic_mode',
        'factory_diagnostic_mode',
        'life_test',
        'customer_focus_mode',
        'demo_mode',
        'hard_stop_or_error',
        'system_initialize',
        'cycle_filling',
        'cycle_rinsing',
        'cycle_sensing',
        'cycle_soaking',
        'cycle_spinning',
        'cycle_washing',
        'door_open',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.dryer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'State',
    'platform': 'whirlpool',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'dryer_state',
    'unique_id': 'said_dryer-state',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.dryer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Dryer State',
      'options': list([
        'standby',
        'setting',
        'delay_countdown',
        'delay_paused',
        'smart_delay',
        'smart_grid_pause',
        'pause',
        'running_maincycle',
        'running_postcycle',
        'exception',
        'complete',
        'power_failure',
        'service_diagnostic_mode',
        'factory_diagnostic_mode',
        'life_test',
        'customer_focus_mode',
        'demo_mode',
        'hard_stop_or_error',
        'system_initialize',
        'cycle_filling',
        'cycle_rinsing',
        'cycle_sensing',
        'cycle_soaking',
        'cycle_spinning',
        'cycle_washing',
        'door_open',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dryer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'running_maincycle',
  })
# ---
# name: test_all_entities[sensor.washer_detergent_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'empty',
        '25',
        '50',
        '100',
        'active',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washer_detergent_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Detergent level',
    'platform': 'whirlpool',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'whirlpool_tank',
    'unique_id': 'said_washer-DispenseLevel',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.washer_detergent_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washer Detergent level',
      'options': list([
        'empty',
        '25',
        '50',
        '100',
        'active',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washer_detergent_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '50',
  })
# ---
# name: test_all_entities[sensor.washer_end_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washer_end_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': 'mdi:progress-clock',
    'original_name': 'End time',
    'platform': 'whirlpool',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'end_time',
    'unique_id': 'said_washer-timeremaining',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.washer_end_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'timestamp',
      'friendly_name': 'Washer End time',
      'icon': 'mdi:progress-clock',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washer_end_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2025-05-04T12:59:00+00:00',
  })
# ---
# name: test_all_entities[sensor.washer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standby',
        'setting',
        'delay_countdown',
        'delay_paused',
        'smart_delay',
        'smart_grid_pause',
        'pause',
        'running_maincycle',
        'running_postcycle',
        'exception',
        'complete',
        'power_failure',
        'service_diagnostic_mode',
        'factory_diagnostic_mode',
        'life_test',
        'customer_focus_mode',
        'demo_mode',
        'hard_stop_or_error',
        'system_initialize',
        'cycle_filling',
        'cycle_rinsing',
        'cycle_sensing',
        'cycle_soaking',
        'cycle_spinning',
        'cycle_washing',
        'door_open',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'State',
    'platform': 'whirlpool',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'washer_state',
    'unique_id': 'said_washer-state',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.washer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washer State',
      'options': list([
        'standby',
        'setting',
        'delay_countdown',
        'delay_paused',
        'smart_delay',
        'smart_grid_pause',
        'pause',
        'running_maincycle',
        'running_postcycle',
        'exception',
        'complete',
        'power_failure',
        'service_diagnostic_mode',
        'factory_diagnostic_mode',
        'life_test',
        'customer_focus_mode',
        'demo_mode',
        'hard_stop_or_error',
        'system_initialize',
        'cycle_filling',
        'cycle_rinsing',
        'cycle_sensing',
        'cycle_soaking',
        'cycle_spinning',
        'cycle_washing',
        'door_open',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'running_maincycle',
  })
# ---
