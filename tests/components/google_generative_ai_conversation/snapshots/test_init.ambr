# serializer version: 1
# name: test_devices
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'config_entries_subentries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': <DeviceEntryType.SERVICE: 'service'>,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'google_generative_ai_conversation',
          'ulid-conversation',
        ),
      }),
      'labels': set({
      }),
      'manufacturer': 'Google',
      'model': 'gemini-2.5-flash',
      'model_id': None,
      'name': 'Google AI Conversation',
      'name_by_user': None,
      'primary_config_entry': <ANY>,
      'serial_number': None,
      'sw_version': None,
      'via_device_id': None,
    }),
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'config_entries_subentries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': <DeviceEntryType.SERVICE: 'service'>,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'google_generative_ai_conversation',
          'ulid-stt',
        ),
      }),
      'labels': set({
      }),
      'manufacturer': 'Google',
      'model': 'gemini-2.5-flash',
      'model_id': None,
      'name': 'Google AI STT',
      'name_by_user': None,
      'primary_config_entry': <ANY>,
      'serial_number': None,
      'sw_version': None,
      'via_device_id': None,
    }),
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'config_entries_subentries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': <DeviceEntryType.SERVICE: 'service'>,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'google_generative_ai_conversation',
          'ulid-ai-task',
        ),
      }),
      'labels': set({
      }),
      'manufacturer': 'Google',
      'model': 'gemini-2.5-flash',
      'model_id': None,
      'name': 'Google AI Task',
      'name_by_user': None,
      'primary_config_entry': <ANY>,
      'serial_number': None,
      'sw_version': None,
      'via_device_id': None,
    }),
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'config_entries_subentries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': <DeviceEntryType.SERVICE: 'service'>,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'google_generative_ai_conversation',
          'ulid-tts',
        ),
      }),
      'labels': set({
      }),
      'manufacturer': 'Google',
      'model': 'gemini-2.5-flash-preview-tts',
      'model_id': None,
      'name': 'Google AI TTS',
      'name_by_user': None,
      'primary_config_entry': <ANY>,
      'serial_number': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_generate_content_file_processing_succeeds
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'contents': list([
          'Describe this image from my doorbell camera',
          File(
    name='doorbell_snapshot.jpg',
    state=<FileState.ACTIVE: 'ACTIVE'>
  ),
          File(
    name='context.txt',
    state=<FileState.PROCESSING: 'PROCESSING'>
  ),
        ]),
        'model': 'models/gemini-2.5-flash',
      }),
    ),
  ])
# ---
# name: test_generate_content_service_with_image
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'contents': list([
          'Describe this image from my doorbell camera',
          File(
    name='doorbell_snapshot.jpg',
    state=<FileState.ACTIVE: 'ACTIVE'>
  ),
          File(
    name='context.txt',
    state=<FileState.ACTIVE: 'ACTIVE'>
  ),
        ]),
        'model': 'models/gemini-2.5-flash',
      }),
    ),
  ])
# ---
# name: test_generate_content_service_without_images
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'contents': list([
          'Write an opening speech for a Home Assistant release party',
        ]),
        'model': 'models/gemini-2.5-flash',
      }),
    ),
  ])
# ---
# name: test_load_entry_with_unloaded_entries
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'contents': list([
          'Write an opening speech for a Home Assistant release party',
        ]),
        'model': 'models/gemini-2.5-flash',
      }),
    ),
  ])
# ---
