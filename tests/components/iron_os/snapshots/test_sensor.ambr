# serializer version: 1
# name: test_sensors[sensor.pinecil_dc_input_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_dc_input_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'DC input voltage',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.DC_VOLTAGE: 'voltage'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.pinecil_dc_input_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pinecil DC input voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_dc_input_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20.6',
  })
# ---
# name: test_sensors[sensor.pinecil_estimated_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pinecil_estimated_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Estimated power',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.ESTIMATED_POWER: 'estimated_power'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_estimated_power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.pinecil_estimated_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Pinecil Estimated power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_estimated_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.8',
  })
# ---
# name: test_sensors[sensor.pinecil_hall_effect_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_hall_effect_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Hall effect strength',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.HALL_SENSOR: 'hall_sensor'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_hall_sensor',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.pinecil_hall_effect_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Pinecil Hall effect strength',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_hall_effect_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[sensor.pinecil_handle_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pinecil_handle_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Handle temperature',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.HANDLETEMP: 'handle_temperature'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_handle_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.pinecil_handle_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Pinecil Handle temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_handle_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '36.3',
  })
# ---
# name: test_sensors[sensor.pinecil_last_movement_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_last_movement_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Last movement time',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.MOVEMENT_TIME: 'movement_time'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_movement_time',
    'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
  })
# ---
# name: test_sensors[sensor.pinecil_last_movement_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Pinecil Last movement time',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_last_movement_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10000',
  })
# ---
# name: test_sensors[sensor.pinecil_max_tip_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_max_tip_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Max tip temperature',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.MAX_TIP_TEMP_ABILITY: 'max_tip_temp_ability'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_max_tip_temp_ability',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.pinecil_max_tip_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Pinecil Max tip temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_max_tip_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '460',
  })
# ---
# name: test_sensors[sensor.pinecil_operating_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'idle',
        'soldering',
        'boost',
        'sleeping',
        'settings',
        'debug',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pinecil_operating_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Operating mode',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.OPERATING_MODE: 'operating_mode'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_operating_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.pinecil_operating_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pinecil Operating mode',
      'options': list([
        'idle',
        'soldering',
        'boost',
        'sleeping',
        'settings',
        'debug',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_operating_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'soldering',
  })
# ---
# name: test_sensors[sensor.pinecil_power_level-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_power_level',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER_FACTOR: 'power_factor'>,
    'original_icon': None,
    'original_name': 'Power level',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.PWMLEVEL: 'power_pwm_level'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_power_pwm_level',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.pinecil_power_level-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power_factor',
      'friendly_name': 'Pinecil Power level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_power_level',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '41',
  })
# ---
# name: test_sensors[sensor.pinecil_power_source-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'dc',
        'qc',
        'pd_vbus',
        'pd',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_power_source',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Power source',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.POWER_SRC: 'power_source'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_power_source',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[sensor.pinecil_power_source-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pinecil Power source',
      'options': list([
        'dc',
        'qc',
        'pd_vbus',
        'pd',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_power_source',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'pd',
  })
# ---
# name: test_sensors[sensor.pinecil_raw_tip_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_raw_tip_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 3,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Raw tip voltage',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.TIP_VOLTAGE: 'tip_voltage'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_tip_voltage',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_sensors[sensor.pinecil_raw_tip_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pinecil Raw tip voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_raw_tip_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2212',
  })
# ---
# name: test_sensors[sensor.pinecil_tip_resistance-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_tip_resistance',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Tip resistance',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.TIP_RESISTANCE: 'tip_resistance'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_tip_resistance',
    'unit_of_measurement': '廓',
  })
# ---
# name: test_sensors[sensor.pinecil_tip_resistance-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Pinecil Tip resistance',
      'unit_of_measurement': '廓',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_tip_resistance',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.2',
  })
# ---
# name: test_sensors[sensor.pinecil_tip_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pinecil_tip_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Tip temperature',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.LIVE_TEMP: 'live_temperature'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_live_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.pinecil_tip_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Pinecil Tip temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_tip_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '298',
  })
# ---
# name: test_sensors[sensor.pinecil_uptime-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pinecil_uptime',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Uptime',
    'platform': 'iron_os',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <PinecilSensor.UPTIME: 'uptime'>,
    'unique_id': 'c0:ff:ee:c0:ff:ee_uptime',
    'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
  })
# ---
# name: test_sensors[sensor.pinecil_uptime-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Pinecil Uptime',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pinecil_uptime',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1671',
  })
# ---
