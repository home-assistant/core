# serializer version: 1
# name: test_all_entities[climate.device_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 30,
      'min_temp': 7,
      'preset_modes': list([
        'none',
        'comfort',
        'eco',
        'away',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.device_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': None,
    'platform': 'nobo_hub',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 18>,
    'translation_key': None,
    'unique_id': '218886794:device_1',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[climate.device_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 1.0,
      'friendly_name': 'Device 1',
      'hvac_modes': list([
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 30,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'comfort',
        'eco',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 18>,
      'target_temp_high': 22,
      'target_temp_low': 18,
      'target_temp_step': 1,
    }),
    'context': <ANY>,
    'entity_id': 'climate.device_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_all_entities[climate.device_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 30,
      'min_temp': 7,
      'preset_modes': list([
        'none',
        'comfort',
        'eco',
        'away',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.device_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': None,
    'platform': 'nobo_hub',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 18>,
    'translation_key': None,
    'unique_id': '218886794:device_2',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[climate.device_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 1.0,
      'friendly_name': 'Device 2',
      'hvac_modes': list([
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.AUTO: 'auto'>,
      ]),
      'max_temp': 30,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'comfort',
        'eco',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 18>,
      'target_temp_high': 22,
      'target_temp_low': 18,
      'target_temp_step': 1,
    }),
    'context': <ANY>,
    'entity_id': 'climate.device_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
