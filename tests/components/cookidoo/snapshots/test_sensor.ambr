# serializer version: 1
# name: test_setup[sensor.cookidoo_subscription-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'free',
        'trial',
        'premium',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.cookidoo_subscription',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Subscription',
    'platform': 'cookidoo',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <CookidooSensor.SUBSCRIPTION: 'subscription'>,
    'unique_id': 'sub_uuid_subscription',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup[sensor.cookidoo_subscription-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Cookidoo Subscription',
      'options': list([
        'free',
        'trial',
        'premium',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.cookidoo_subscription',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'premium',
  })
# ---
# name: test_setup[sensor.cookidoo_subscription_expiration_date-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.cookidoo_subscription_expiration_date',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Subscription expiration date',
    'platform': 'cookidoo',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <CookidooSensor.EXPIRES: 'expires'>,
    'unique_id': 'sub_uuid_expires',
    'unit_of_measurement': None,
  })
# ---
# name: test_setup[sensor.cookidoo_subscription_expiration_date-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'timestamp',
      'friendly_name': 'Cookidoo Subscription expiration date',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.cookidoo_subscription_expiration_date',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2025-12-16T23:59:00+00:00',
  })
# ---
