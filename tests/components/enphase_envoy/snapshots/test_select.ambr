# serializer version: 1
# name: test_select[envoy_eu_batt][select.envoy_1234_storage_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'backup',
        'self_consumption',
        'savings',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.envoy_1234_storage_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Storage mode',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'storage_mode',
    'unique_id': '1234_storage_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_eu_batt][select.envoy_1234_storage_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Envoy 1234 Storage mode',
      'options': list([
        'backup',
        'self_consumption',
        'savings',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.envoy_1234_storage_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'self_consumption',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.enpower_654321_storage_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'backup',
        'self_consumption',
        'savings',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.enpower_654321_storage_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Storage mode',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'storage_mode',
    'unique_id': '654321_storage_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.enpower_654321_storage_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Enpower 654321 Storage mode',
      'options': list([
        'backup',
        'self_consumption',
        'savings',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.enpower_654321_storage_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'self_consumption',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_generator_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc1_fixture_generator_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Generator action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_generator_action',
    'unique_id': '654321_relay_NC1_generator_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_generator_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC1 Fixture Generator action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc1_fixture_generator_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_grid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc1_fixture_grid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Grid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_grid_action',
    'unique_id': '654321_relay_NC1_grid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_grid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC1 Fixture Grid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc1_fixture_grid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_microgrid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc1_fixture_microgrid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Microgrid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_microgrid_action',
    'unique_id': '654321_relay_NC1_microgrid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_microgrid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC1 Fixture Microgrid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc1_fixture_microgrid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc1_fixture_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_mode',
    'unique_id': '654321_relay_NC1_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc1_fixture_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC1 Fixture Mode',
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc1_fixture_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'standard',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_generator_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc2_fixture_generator_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Generator action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_generator_action',
    'unique_id': '654321_relay_NC2_generator_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_generator_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC2 Fixture Generator action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc2_fixture_generator_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_grid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc2_fixture_grid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Grid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_grid_action',
    'unique_id': '654321_relay_NC2_grid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_grid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC2 Fixture Grid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc2_fixture_grid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_microgrid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc2_fixture_microgrid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Microgrid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_microgrid_action',
    'unique_id': '654321_relay_NC2_microgrid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_microgrid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC2 Fixture Microgrid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc2_fixture_microgrid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc2_fixture_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_mode',
    'unique_id': '654321_relay_NC2_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc2_fixture_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC2 Fixture Mode',
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc2_fixture_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'standard',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_generator_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc3_fixture_generator_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Generator action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_generator_action',
    'unique_id': '654321_relay_NC3_generator_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_generator_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC3 Fixture Generator action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc3_fixture_generator_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_grid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc3_fixture_grid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Grid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_grid_action',
    'unique_id': '654321_relay_NC3_grid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_grid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC3 Fixture Grid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc3_fixture_grid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_microgrid_action-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc3_fixture_microgrid_action',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Microgrid action',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_microgrid_action',
    'unique_id': '654321_relay_NC3_microgrid_action',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_microgrid_action-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC3 Fixture Microgrid action',
      'options': list([
        'powered',
        'not_powered',
        'schedule',
        'none',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc3_fixture_microgrid_action',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'powered',
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.nc3_fixture_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mode',
    'platform': 'enphase_envoy',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relay_mode',
    'unique_id': '654321_relay_NC3_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_select[envoy_metered_batt_relay][select.nc3_fixture_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NC3 Fixture Mode',
      'options': list([
        'standard',
        'battery',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.nc3_fixture_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'standard',
  })
# ---
