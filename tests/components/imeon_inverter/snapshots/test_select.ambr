# serializer version: 1
# name: test_selects[select.imeon_inverter_inverter_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'smg',
        'bup',
        'ong',
        'ofg',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'select.imeon_inverter_inverter_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Inverter mode',
    'platform': 'imeon_inverter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'manager_inverter_mode',
    'unique_id': '111111111111111_manager_inverter_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_selects[select.imeon_inverter_inverter_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Imeon inverter Inverter mode',
      'options': list([
        'smg',
        'bup',
        'ong',
        'ofg',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.imeon_inverter_inverter_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
