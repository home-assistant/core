# serializer version: 1
# name: test_sensors[sensor.device_name_air_filter_operating_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_air_filter_operating_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Air filter operating time',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'air_filter_operating_time',
    'unique_id': '0000-0001-air_filter_operating_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensors[sensor.device_name_air_filter_operating_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Air filter operating time',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_air_filter_operating_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8820.0',
  })
# ---
# name: test_sensors[sensor.device_name_electric_heater_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_electric_heater_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 3,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Electric heater power',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'electric_heater_power',
    'unique_id': '0000-0001-electric_heater_power',
    'unit_of_measurement': <UnitOfPower.KILO_WATT: 'kW'>,
  })
# ---
# name: test_sensors[sensor.device_name_electric_heater_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Device Name Electric heater power',
      'unit_of_measurement': <UnitOfPower.KILO_WATT: 'kW'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_electric_heater_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.396365851163864',
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_fan-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_exhaust_air_fan',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Exhaust air fan',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'exhaust_air_fan_rpm',
    'unique_id': '0000-0001-exhaust_air_fan_rpm',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_fan-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Exhaust air fan',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_exhaust_air_fan',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2606',
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_fan_control_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_exhaust_air_fan_control_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Exhaust air fan control signal',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'exhaust_air_fan_control_signal',
    'unique_id': '0000-0001-exhaust_air_fan_control_signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_fan_control_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Exhaust air fan control signal',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_exhaust_air_fan_control_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '70',
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_exhaust_air_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Exhaust air temperature',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'exhaust_air_temperature',
    'unique_id': '0000-0001-exhaust_air_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.device_name_exhaust_air_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Device Name Exhaust air temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_exhaust_air_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-3.3',
  })
# ---
# name: test_sensors[sensor.device_name_extract_air_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_extract_air_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Extract air temperature',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'extract_air_temperature',
    'unique_id': '0000-0001-extract_air_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.device_name_extract_air_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Device Name Extract air temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_extract_air_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19.0',
  })
# ---
# name: test_sensors[sensor.device_name_fireplace_ventilation_remaining_duration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_fireplace_ventilation_remaining_duration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Fireplace ventilation remaining duration',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'fireplace_ventilation_remaining_duration',
    'unique_id': '0000-0001-fireplace_ventilation_remaining_duration',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensors[sensor.device_name_fireplace_ventilation_remaining_duration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Device Name Fireplace ventilation remaining duration',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_fireplace_ventilation_remaining_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10.0',
  })
# ---
# name: test_sensors[sensor.device_name_heat_exchanger_efficiency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_heat_exchanger_efficiency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Heat exchanger efficiency',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'heat_exchanger_efficiency',
    'unique_id': '0000-0001-heat_exchanger_efficiency',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.device_name_heat_exchanger_efficiency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Heat exchanger efficiency',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_heat_exchanger_efficiency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '81',
  })
# ---
# name: test_sensors[sensor.device_name_heat_exchanger_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_heat_exchanger_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Heat exchanger speed',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'heat_exchanger_speed',
    'unique_id': '0000-0001-heat_exchanger_speed',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.device_name_heat_exchanger_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Heat exchanger speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_heat_exchanger_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[sensor.device_name_outside_air_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_outside_air_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Outside air temperature',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'outside_air_temperature',
    'unique_id': '0000-0001-outside_air_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.device_name_outside_air_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Device Name Outside air temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_outside_air_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-8.6',
  })
# ---
# name: test_sensors[sensor.device_name_rapid_ventilation_remaining_duration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_rapid_ventilation_remaining_duration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Rapid ventilation remaining duration',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rapid_ventilation_remaining_duration',
    'unique_id': '0000-0001-rapid_ventilation_remaining_duration',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensors[sensor.device_name_rapid_ventilation_remaining_duration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Device Name Rapid ventilation remaining duration',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_rapid_ventilation_remaining_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '30.0',
  })
# ---
# name: test_sensors[sensor.device_name_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Room temperature',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'room_temperature',
    'unique_id': '0000-0001-room_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.device_name_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Device Name Room temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19.0',
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_fan-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_supply_air_fan',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Supply air fan',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'supply_air_fan_rpm',
    'unique_id': '0000-0001-supply_air_fan_rpm',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_fan-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Supply air fan',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_supply_air_fan',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2784',
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_fan_control_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_supply_air_fan_control_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Supply air fan control signal',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'supply_air_fan_control_signal',
    'unique_id': '0000-0001-supply_air_fan_control_signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_fan_control_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Device Name Supply air fan control signal',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_supply_air_fan_control_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '74',
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.device_name_supply_air_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Supply air temperature',
    'platform': 'flexit_bacnet',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'supply_air_temperature',
    'unique_id': '0000-0001-supply_air_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensors[sensor.device_name_supply_air_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Device Name Supply air temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.device_name_supply_air_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19.1',
  })
# ---
