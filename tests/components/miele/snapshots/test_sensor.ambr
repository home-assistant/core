# serializer version: 1
# name: test_sensor_states[platforms0][sensor.freezer-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_1-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Freezer',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_1-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Freezer Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-18.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hood',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:turbine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_18-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hood',
      'icon': 'mdi:turbine',
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hood',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_2-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Refrigerator',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_2-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Refrigerator Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:washing-machine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_3-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine',
      'icon': 'mdi:washing-machine',
      'options': list([
        'off',
        'on',
        'programmed',
        'waiting_to_start',
        'in_use',
        'pause',
        'program_ended',
        'failure',
        'program_interrupted',
        'idle',
        'rinse_hold',
        'service',
        'superfreezing',
        'supercooling',
        'superheating',
        'supercooling_superfreezing',
        'autocleaning',
        'not_connected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_duration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Duration',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'Dummy_Appliance_3-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Duration',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_duration_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Duration',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'Dummy_Appliance_3-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Duration',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_duration_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_duration_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Duration',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'Dummy_Appliance_3-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_duration_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Duration',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_duration_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
