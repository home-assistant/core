# serializer version: 1
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:pot-steam-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_hob_w_extr-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction',
      'icon': 'mdi:pot-steam-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 1',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-1',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 1',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 2',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-2',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 2',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '110',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 3',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-3',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 3',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 4',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-4',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 4',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 5',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-5',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 5',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '117',
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_1-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Freezer',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_1-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Freezer Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-18.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hood',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:turbine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_18-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hood',
      'icon': 'mdi:turbine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hood',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:chef-hat',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_12-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Oven',
      'icon': 'mdi:chef-hat',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_core_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_core_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Core target temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'core_target_temperature',
    'unique_id': 'DummyAppliance_12-state_core_target_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_core_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Oven Core target temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_core_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_core_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_core_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Core temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'core_temperature',
    'unique_id': 'DummyAppliance_12-state_core_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_core_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Oven Core temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_core_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_elapsed_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.oven_elapsed_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Elapsed time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'DummyAppliance_12-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_elapsed_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Oven Elapsed time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_elapsed_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '1_tray',
        '2_trays',
        'auto_roast',
        'baiser_one_large',
        'baiser_several_small',
        'baking_tray',
        'bottom_heat',
        'conventional_heat',
        'defrost',
        'descale',
        'drying',
        'eco_fan_heat',
        'economy_grill',
        'fan_grill',
        'fan_plus',
        'full_grill',
        'heat_crockery',
        'intensive_bake',
        'keeping_warm',
        'lemon_meringue_pie',
        'low_temperature_cooking',
        'microwave',
        'moisture_plus_auto_roast',
        'moisture_plus_conventional_heat',
        'moisture_plus_fan_plus',
        'moisture_plus_intensive_bake',
        'no_program',
        'prove_15_min',
        'prove_30_min',
        'prove_45_min',
        'pyrolytic',
        'shabbat_program',
        'steam_bake',
        'steam_cooking',
        'top_heat',
        'viennese_apple_strudel',
        'yom_tov',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_program',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_id',
    'unique_id': 'DummyAppliance_12-state_program_id',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Oven Program',
      'options': list([
        '1_tray',
        '2_trays',
        'auto_roast',
        'baiser_one_large',
        'baiser_several_small',
        'baking_tray',
        'bottom_heat',
        'conventional_heat',
        'defrost',
        'descale',
        'drying',
        'eco_fan_heat',
        'economy_grill',
        'fan_grill',
        'fan_plus',
        'full_grill',
        'heat_crockery',
        'intensive_bake',
        'keeping_warm',
        'lemon_meringue_pie',
        'low_temperature_cooking',
        'microwave',
        'moisture_plus_auto_roast',
        'moisture_plus_conventional_heat',
        'moisture_plus_fan_plus',
        'moisture_plus_intensive_bake',
        'no_program',
        'prove_15_min',
        'prove_30_min',
        'prove_45_min',
        'pyrolytic',
        'shabbat_program',
        'steam_bake',
        'steam_cooking',
        'top_heat',
        'viennese_apple_strudel',
        'yom_tov',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_program',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'no_program',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program_phase-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'energy_save',
        'heating_up',
        'not_running',
        'process_finished',
        'process_running',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_program_phase',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program phase',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_phase',
    'unique_id': 'DummyAppliance_12-state_program_phase',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program_phase-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Oven Program phase',
      'options': list([
        'energy_save',
        'heating_up',
        'not_running',
        'process_finished',
        'process_running',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_program_phase',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_running',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.oven_program_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program type',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_type',
    'unique_id': 'DummyAppliance_12-state_program_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_program_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Oven Program type',
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_program_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'normal_operation_mode',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_remaining_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.oven_remaining_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Remaining time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'DummyAppliance_12-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_remaining_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Oven Remaining time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_remaining_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_start_in-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.oven_start_in',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Start in',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'DummyAppliance_12-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_start_in-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Oven Start in',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_start_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Target temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'target_temperature',
    'unique_id': 'DummyAppliance_12-state_target_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Oven Target temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'DummyAppliance_12-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.oven_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Oven Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_2-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Refrigerator',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_2-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Refrigerator Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.steam_oven_micro',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:chef-hat',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_45-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Steam oven micro',
      'icon': 'mdi:chef-hat',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_elapsed_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.steam_oven_micro_elapsed_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Elapsed time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'DummyAppliance_45-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_elapsed_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Steam oven micro Elapsed time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_elapsed_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'amaranth',
        'apples_diced',
        'apples_halved',
        'apples_quartered',
        'apples_sliced',
        'apples_whole',
        'apricots_halved_skinning',
        'apricots_halved_steam_cooking',
        'apricots_quartered',
        'apricots_wedges',
        'artichokes_large',
        'artichokes_medium',
        'artichokes_small',
        'atlantic_catfish_fillet_1_cm',
        'atlantic_catfish_fillet_2_cm',
        'basmati_rice_rapid_steam_cooking',
        'basmati_rice_steam_cooking',
        'beef_casserole',
        'beef_tenderloin',
        'beef_tenderloin_medaillons_1_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_1_cm_steam_cooking',
        'beef_tenderloin_medaillons_2_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_2_cm_steam_cooking',
        'beef_tenderloin_medaillons_3_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_3_cm_steam_cooking',
        'beetroot_whole_large',
        'beetroot_whole_medium',
        'beetroot_whole_small',
        'beluga_lentils',
        'black_beans',
        'black_salsify_medium',
        'black_salsify_thick',
        'black_salsify_thin',
        'blanching',
        'bologna_sausage',
        'bottling',
        'bottling_hard',
        'bottling_medium',
        'bottling_soft',
        'bread_dumplings_boil_in_the_bag',
        'bread_dumplings_fresh',
        'broad_beans',
        'broccoli_florets_large',
        'broccoli_florets_medium',
        'broccoli_florets_small',
        'broccoli_whole_large',
        'broccoli_whole_medium',
        'broccoli_whole_small',
        'brown_lentils',
        'bruehwurst_sausages',
        'brussels_sprout',
        'bulgur',
        'bunched_carrots_cut_into_batons',
        'bunched_carrots_diced',
        'bunched_carrots_halved',
        'bunched_carrots_quartered',
        'bunched_carrots_sliced',
        'bunched_carrots_whole_large',
        'bunched_carrots_whole_medium',
        'bunched_carrots_whole_small',
        'carp',
        'carrots_cut_into_batons',
        'carrots_diced',
        'carrots_halved',
        'carrots_quartered',
        'carrots_sliced',
        'carrots_whole_large',
        'carrots_whole_medium',
        'carrots_whole_small',
        'cauliflower_florets_large',
        'cauliflower_florets_medium',
        'cauliflower_florets_small',
        'cauliflower_whole_large',
        'cauliflower_whole_medium',
        'cauliflower_whole_small',
        'celeriac_cut_into_batons',
        'celeriac_diced',
        'celeriac_sliced',
        'celery_pieces',
        'celery_sliced',
        'cep',
        'chanterelle',
        'char',
        'cheesecake_one_large',
        'cheesecake_several_small',
        'chick_peas',
        'chicken_tikka_masala_with_rice',
        'chinese_cabbage_cut',
        'chongming_rapid_steam_cooking',
        'chongming_steam_cooking',
        'christmas_pudding_cooking',
        'christmas_pudding_heating',
        'coalfish_fillet_2_cm',
        'coalfish_fillet_3_cm',
        'coalfish_piece',
        'cockles',
        'codfish_fillet',
        'codfish_piece',
        'common_beans',
        'common_sole_fillet_1_cm',
        'common_sole_fillet_2_cm',
        'cook_bacon',
        'corn_on_the_cob',
        'courgette_diced',
        'courgette_sliced',
        'cranberries',
        'crevettes',
        'decrystallise_honey',
        'defrosting_with_microwave',
        'defrosting_with_steam',
        'descale',
        'dissolve_gelatine',
        'dutch_hash',
        'eco_steam_cooking',
        'eggplant_diced',
        'eggplant_sliced',
        'endive_halved',
        'endive_quartered',
        'endive_strips',
        'fennel_halved',
        'fennel_quartered',
        'fennel_strips',
        'german_turnip_cut_into_batons',
        'german_turnip_diced',
        'german_turnip_sliced',
        'gilt_head_bream_fillet',
        'gilt_head_bream_whole',
        'gnocchi_fresh',
        'goose_barnacles',
        'gooseberries',
        'goulash_soup',
        'green_asparagus_medium',
        'green_asparagus_thick',
        'green_asparagus_thin',
        'green_beans_cut',
        'green_beans_whole',
        'green_cabbage_cut',
        'green_spelt_cracked',
        'green_spelt_whole',
        'green_split_peas',
        'greenage_plums',
        'halibut_fillet_2_cm',
        'halibut_fillet_3_cm',
        'heating_damp_flannels',
        'hens_eggs_size_l_hard',
        'hens_eggs_size_l_medium',
        'hens_eggs_size_l_soft',
        'hens_eggs_size_m_hard',
        'hens_eggs_size_m_medium',
        'hens_eggs_size_m_soft',
        'hens_eggs_size_s_hard',
        'hens_eggs_size_s_medium',
        'hens_eggs_size_s_soft',
        'hens_eggs_size_xl_hard',
        'hens_eggs_size_xl_medium',
        'hens_eggs_size_xl_soft',
        'huanghuanian_rapid_steam_cooking',
        'huanghuanian_steam_cooking',
        'iridescent_shark_fillet',
        'jasmine_rice_rapid_steam_cooking',
        'jasmine_rice_steam_cooking',
        'jerusalem_artichoke_diced',
        'jerusalem_artichoke_sliced',
        'kale_cut',
        'kasseler_piece',
        'kasseler_slice',
        'king_prawns',
        'knuckle_of_pork_cured',
        'knuckle_of_pork_fresh',
        'large_shrimps',
        'leek_pieces',
        'leek_rings',
        'long_grain_rice_general_rapid_steam_cooking',
        'long_grain_rice_general_steam_cooking',
        'make_yoghurt',
        'mangel_cut',
        'meat_for_soup_back_or_top_rib',
        'meat_for_soup_brisket',
        'meat_for_soup_leg_steak',
        'meat_with_rice',
        'melt_chocolate',
        'menu_cooking',
        'microwave',
        'millet',
        'mirabelles',
        'mushrooms_diced',
        'mushrooms_halved',
        'mushrooms_quartered',
        'mushrooms_sliced',
        'mushrooms_whole',
        'mussels',
        'mussels_in_sauce',
        'nectarines_peaches_halved_skinning',
        'nectarines_peaches_halved_steam_cooking',
        'nectarines_peaches_quartered',
        'nectarines_peaches_wedges',
        'nile_perch_fillet_2_cm',
        'nile_perch_fillet_3_cm',
        'oats_cracked',
        'oats_whole',
        'oyster_mushroom_diced',
        'oyster_mushroom_strips',
        'oyster_mushroom_whole',
        'parboiled_rice_rapid_steam_cooking',
        'parboiled_rice_steam_cooking',
        'parisian_carrots_large',
        'parisian_carrots_medium',
        'parisian_carrots_small',
        'parsley_root_cut_into_batons',
        'parsley_root_diced',
        'parsley_root_sliced',
        'parsnip_cut_into_batons',
        'parsnip_diced',
        'parsnip_sliced',
        'pears_halved',
        'pears_quartered',
        'pears_to_cook_large_halved',
        'pears_to_cook_large_quartered',
        'pears_to_cook_large_whole',
        'pears_to_cook_medium_halved',
        'pears_to_cook_medium_quartered',
        'pears_to_cook_medium_whole',
        'pears_to_cook_small_halved',
        'pears_to_cook_small_quartered',
        'pears_to_cook_small_whole',
        'pears_wedges',
        'peas',
        'pepper_diced',
        'pepper_halved',
        'pepper_quartered',
        'pepper_strips',
        'perch_fillet_2_cm',
        'perch_fillet_3_cm',
        'perch_whole',
        'pike_fillet',
        'pike_piece',
        'pinto_beans',
        'plaice_fillet_1_cm',
        'plaice_fillet_2_cm',
        'plaice_whole_2_cm',
        'plaice_whole_3_cm',
        'plaice_whole_4_cm',
        'plums_halved',
        'plums_whole',
        'pointed_cabbage_cut',
        'polenta',
        'polenta_swiss_style_coarse_polenta',
        'polenta_swiss_style_fine_polenta',
        'polenta_swiss_style_medium_polenta',
        'popcorn',
        'pork_tenderloin_medaillons_3_cm',
        'pork_tenderloin_medaillons_4_cm',
        'pork_tenderloin_medaillons_5_cm',
        'potato_dumplings_half_half_boil_in_bag',
        'potato_dumplings_half_half_deep_frozen',
        'potato_dumplings_raw_boil_in_bag',
        'potato_dumplings_raw_deep_frozen',
        'potatoes_floury_diced',
        'potatoes_floury_halved',
        'potatoes_floury_quartered',
        'potatoes_floury_whole_large',
        'potatoes_floury_whole_medium',
        'potatoes_floury_whole_small',
        'potatoes_in_the_skin_floury_large',
        'potatoes_in_the_skin_floury_medium',
        'potatoes_in_the_skin_floury_small',
        'potatoes_in_the_skin_mainly_waxy_large',
        'potatoes_in_the_skin_mainly_waxy_medium',
        'potatoes_in_the_skin_mainly_waxy_small',
        'potatoes_in_the_skin_waxy_large_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_large_steam_cooking',
        'potatoes_in_the_skin_waxy_medium_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_medium_steam_cooking',
        'potatoes_in_the_skin_waxy_small_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_small_steam_cooking',
        'potatoes_mainly_waxy_diced',
        'potatoes_mainly_waxy_halved',
        'potatoes_mainly_waxy_large',
        'potatoes_mainly_waxy_medium',
        'potatoes_mainly_waxy_quartered',
        'potatoes_mainly_waxy_small',
        'potatoes_waxy_diced',
        'potatoes_waxy_halved',
        'potatoes_waxy_quartered',
        'potatoes_waxy_whole_large',
        'potatoes_waxy_whole_medium',
        'potatoes_waxy_whole_small',
        'poularde_breast',
        'poularde_whole',
        'prawns',
        'prove_dough',
        'pumpkin_diced',
        'pumpkin_soup',
        'quick_mw',
        'quinces_diced',
        'quinoa',
        'rapid_steam_cooking',
        'ravioli_fresh',
        'razor_clams_large',
        'razor_clams_medium',
        'razor_clams_small',
        'red_beans',
        'red_cabbage_cut',
        'red_lentils',
        'red_snapper_fillet_2_cm',
        'red_snapper_fillet_3_cm',
        'redfish_fillet_2_cm',
        'redfish_fillet_3_cm',
        'redfish_piece',
        'reheating_with_microwave',
        'reheating_with_steam',
        'rhubarb_chunks',
        'rice_pudding_rapid_steam_cooking',
        'rice_pudding_steam_cooking',
        'risotto',
        'romanesco_florets_large',
        'romanesco_florets_medium',
        'romanesco_florets_small',
        'romanesco_whole_large',
        'romanesco_whole_medium',
        'romanesco_whole_small',
        'round_grain_rice_general_rapid_steam_cooking',
        'round_grain_rice_general_steam_cooking',
        'runner_beans_pieces',
        'runner_beans_sliced',
        'runner_beans_whole',
        'rye_cracked',
        'rye_whole',
        'salmon_fillet_2_cm',
        'salmon_fillet_3_cm',
        'salmon_piece',
        'salmon_steak_2_cm',
        'salmon_steak_3_cm',
        'salmon_trout',
        'saucisson',
        'savoy_cabbage_cut',
        'scallops',
        'schupfnudeln_potato_noodels',
        'sea_devil_fillet_3_cm',
        'sea_devil_fillet_4_cm',
        'sheyang_rapid_steam_cooking',
        'sheyang_steam_cooking',
        'silverside_10_cm',
        'silverside_5_cm',
        'silverside_7_5_cm',
        'simiao_rapid_steam_cooking',
        'simiao_steam_cooking',
        'small_shrimps',
        'snow_pea',
        'soak',
        'soup_hen',
        'sour_cherries',
        'sous_vide',
        'spaetzle_fresh',
        'spelt_cracked',
        'spelt_whole',
        'spinach',
        'steam_cooking',
        'sterilize_crockery',
        'stuffed_cabbage',
        'sweat_onions',
        'swede_cut_into_batons',
        'swede_diced',
        'sweet_cheese_dumplings',
        'sweet_cherries',
        'swiss_toffee_cream_100_ml',
        'swiss_toffee_cream_150_ml',
        'tagliatelli_fresh',
        'teltow_turnip_diced',
        'teltow_turnip_sliced',
        'tilapia_fillet_1_cm',
        'tilapia_fillet_2_cm',
        'toffee_date_dessert_one_large',
        'toffee_date_dessert_several_small',
        'tortellini_fresh',
        'treacle_sponge_pudding_one_large',
        'treacle_sponge_pudding_several_small',
        'trout',
        'tuna_fillet_2_cm',
        'tuna_fillet_3_cm',
        'tuna_steak',
        'turbot_fillet_2_cm',
        'turbot_fillet_3_cm',
        'turkey_breast',
        'uonumma_koshihikari_rapid_steam_cooking',
        'uonumma_koshihikari_steam_cooking',
        'veal_fillet_medaillons_1_cm',
        'veal_fillet_medaillons_2_cm',
        'veal_fillet_medaillons_3_cm',
        'veal_fillet_whole',
        'veal_sausages',
        'venus_clams',
        'viennese_silverside',
        'wheat_cracked',
        'wheat_whole',
        'white_asparagus_medium',
        'white_asparagus_thick',
        'white_asparagus_thin',
        'white_beans',
        'whole_ham_reheating',
        'whole_ham_steam_cooking',
        'wholegrain_rice',
        'wild_rice',
        'wuchang_rapid_steam_cooking',
        'wuchang_steam_cooking',
        'yam_halved',
        'yam_quartered',
        'yam_strips',
        'yeast_dumplings_fresh',
        'yellow_beans_cut',
        'yellow_beans_whole',
        'yellow_split_peas',
        'zander_fillet',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.steam_oven_micro_program',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_id',
    'unique_id': 'DummyAppliance_45-state_program_id',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Steam oven micro Program',
      'options': list([
        'amaranth',
        'apples_diced',
        'apples_halved',
        'apples_quartered',
        'apples_sliced',
        'apples_whole',
        'apricots_halved_skinning',
        'apricots_halved_steam_cooking',
        'apricots_quartered',
        'apricots_wedges',
        'artichokes_large',
        'artichokes_medium',
        'artichokes_small',
        'atlantic_catfish_fillet_1_cm',
        'atlantic_catfish_fillet_2_cm',
        'basmati_rice_rapid_steam_cooking',
        'basmati_rice_steam_cooking',
        'beef_casserole',
        'beef_tenderloin',
        'beef_tenderloin_medaillons_1_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_1_cm_steam_cooking',
        'beef_tenderloin_medaillons_2_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_2_cm_steam_cooking',
        'beef_tenderloin_medaillons_3_cm_low_temperature_cooking',
        'beef_tenderloin_medaillons_3_cm_steam_cooking',
        'beetroot_whole_large',
        'beetroot_whole_medium',
        'beetroot_whole_small',
        'beluga_lentils',
        'black_beans',
        'black_salsify_medium',
        'black_salsify_thick',
        'black_salsify_thin',
        'blanching',
        'bologna_sausage',
        'bottling',
        'bottling_hard',
        'bottling_medium',
        'bottling_soft',
        'bread_dumplings_boil_in_the_bag',
        'bread_dumplings_fresh',
        'broad_beans',
        'broccoli_florets_large',
        'broccoli_florets_medium',
        'broccoli_florets_small',
        'broccoli_whole_large',
        'broccoli_whole_medium',
        'broccoli_whole_small',
        'brown_lentils',
        'bruehwurst_sausages',
        'brussels_sprout',
        'bulgur',
        'bunched_carrots_cut_into_batons',
        'bunched_carrots_diced',
        'bunched_carrots_halved',
        'bunched_carrots_quartered',
        'bunched_carrots_sliced',
        'bunched_carrots_whole_large',
        'bunched_carrots_whole_medium',
        'bunched_carrots_whole_small',
        'carp',
        'carrots_cut_into_batons',
        'carrots_diced',
        'carrots_halved',
        'carrots_quartered',
        'carrots_sliced',
        'carrots_whole_large',
        'carrots_whole_medium',
        'carrots_whole_small',
        'cauliflower_florets_large',
        'cauliflower_florets_medium',
        'cauliflower_florets_small',
        'cauliflower_whole_large',
        'cauliflower_whole_medium',
        'cauliflower_whole_small',
        'celeriac_cut_into_batons',
        'celeriac_diced',
        'celeriac_sliced',
        'celery_pieces',
        'celery_sliced',
        'cep',
        'chanterelle',
        'char',
        'cheesecake_one_large',
        'cheesecake_several_small',
        'chick_peas',
        'chicken_tikka_masala_with_rice',
        'chinese_cabbage_cut',
        'chongming_rapid_steam_cooking',
        'chongming_steam_cooking',
        'christmas_pudding_cooking',
        'christmas_pudding_heating',
        'coalfish_fillet_2_cm',
        'coalfish_fillet_3_cm',
        'coalfish_piece',
        'cockles',
        'codfish_fillet',
        'codfish_piece',
        'common_beans',
        'common_sole_fillet_1_cm',
        'common_sole_fillet_2_cm',
        'cook_bacon',
        'corn_on_the_cob',
        'courgette_diced',
        'courgette_sliced',
        'cranberries',
        'crevettes',
        'decrystallise_honey',
        'defrosting_with_microwave',
        'defrosting_with_steam',
        'descale',
        'dissolve_gelatine',
        'dutch_hash',
        'eco_steam_cooking',
        'eggplant_diced',
        'eggplant_sliced',
        'endive_halved',
        'endive_quartered',
        'endive_strips',
        'fennel_halved',
        'fennel_quartered',
        'fennel_strips',
        'german_turnip_cut_into_batons',
        'german_turnip_diced',
        'german_turnip_sliced',
        'gilt_head_bream_fillet',
        'gilt_head_bream_whole',
        'gnocchi_fresh',
        'goose_barnacles',
        'gooseberries',
        'goulash_soup',
        'green_asparagus_medium',
        'green_asparagus_thick',
        'green_asparagus_thin',
        'green_beans_cut',
        'green_beans_whole',
        'green_cabbage_cut',
        'green_spelt_cracked',
        'green_spelt_whole',
        'green_split_peas',
        'greenage_plums',
        'halibut_fillet_2_cm',
        'halibut_fillet_3_cm',
        'heating_damp_flannels',
        'hens_eggs_size_l_hard',
        'hens_eggs_size_l_medium',
        'hens_eggs_size_l_soft',
        'hens_eggs_size_m_hard',
        'hens_eggs_size_m_medium',
        'hens_eggs_size_m_soft',
        'hens_eggs_size_s_hard',
        'hens_eggs_size_s_medium',
        'hens_eggs_size_s_soft',
        'hens_eggs_size_xl_hard',
        'hens_eggs_size_xl_medium',
        'hens_eggs_size_xl_soft',
        'huanghuanian_rapid_steam_cooking',
        'huanghuanian_steam_cooking',
        'iridescent_shark_fillet',
        'jasmine_rice_rapid_steam_cooking',
        'jasmine_rice_steam_cooking',
        'jerusalem_artichoke_diced',
        'jerusalem_artichoke_sliced',
        'kale_cut',
        'kasseler_piece',
        'kasseler_slice',
        'king_prawns',
        'knuckle_of_pork_cured',
        'knuckle_of_pork_fresh',
        'large_shrimps',
        'leek_pieces',
        'leek_rings',
        'long_grain_rice_general_rapid_steam_cooking',
        'long_grain_rice_general_steam_cooking',
        'make_yoghurt',
        'mangel_cut',
        'meat_for_soup_back_or_top_rib',
        'meat_for_soup_brisket',
        'meat_for_soup_leg_steak',
        'meat_with_rice',
        'melt_chocolate',
        'menu_cooking',
        'microwave',
        'millet',
        'mirabelles',
        'mushrooms_diced',
        'mushrooms_halved',
        'mushrooms_quartered',
        'mushrooms_sliced',
        'mushrooms_whole',
        'mussels',
        'mussels_in_sauce',
        'nectarines_peaches_halved_skinning',
        'nectarines_peaches_halved_steam_cooking',
        'nectarines_peaches_quartered',
        'nectarines_peaches_wedges',
        'nile_perch_fillet_2_cm',
        'nile_perch_fillet_3_cm',
        'oats_cracked',
        'oats_whole',
        'oyster_mushroom_diced',
        'oyster_mushroom_strips',
        'oyster_mushroom_whole',
        'parboiled_rice_rapid_steam_cooking',
        'parboiled_rice_steam_cooking',
        'parisian_carrots_large',
        'parisian_carrots_medium',
        'parisian_carrots_small',
        'parsley_root_cut_into_batons',
        'parsley_root_diced',
        'parsley_root_sliced',
        'parsnip_cut_into_batons',
        'parsnip_diced',
        'parsnip_sliced',
        'pears_halved',
        'pears_quartered',
        'pears_to_cook_large_halved',
        'pears_to_cook_large_quartered',
        'pears_to_cook_large_whole',
        'pears_to_cook_medium_halved',
        'pears_to_cook_medium_quartered',
        'pears_to_cook_medium_whole',
        'pears_to_cook_small_halved',
        'pears_to_cook_small_quartered',
        'pears_to_cook_small_whole',
        'pears_wedges',
        'peas',
        'pepper_diced',
        'pepper_halved',
        'pepper_quartered',
        'pepper_strips',
        'perch_fillet_2_cm',
        'perch_fillet_3_cm',
        'perch_whole',
        'pike_fillet',
        'pike_piece',
        'pinto_beans',
        'plaice_fillet_1_cm',
        'plaice_fillet_2_cm',
        'plaice_whole_2_cm',
        'plaice_whole_3_cm',
        'plaice_whole_4_cm',
        'plums_halved',
        'plums_whole',
        'pointed_cabbage_cut',
        'polenta',
        'polenta_swiss_style_coarse_polenta',
        'polenta_swiss_style_fine_polenta',
        'polenta_swiss_style_medium_polenta',
        'popcorn',
        'pork_tenderloin_medaillons_3_cm',
        'pork_tenderloin_medaillons_4_cm',
        'pork_tenderloin_medaillons_5_cm',
        'potato_dumplings_half_half_boil_in_bag',
        'potato_dumplings_half_half_deep_frozen',
        'potato_dumplings_raw_boil_in_bag',
        'potato_dumplings_raw_deep_frozen',
        'potatoes_floury_diced',
        'potatoes_floury_halved',
        'potatoes_floury_quartered',
        'potatoes_floury_whole_large',
        'potatoes_floury_whole_medium',
        'potatoes_floury_whole_small',
        'potatoes_in_the_skin_floury_large',
        'potatoes_in_the_skin_floury_medium',
        'potatoes_in_the_skin_floury_small',
        'potatoes_in_the_skin_mainly_waxy_large',
        'potatoes_in_the_skin_mainly_waxy_medium',
        'potatoes_in_the_skin_mainly_waxy_small',
        'potatoes_in_the_skin_waxy_large_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_large_steam_cooking',
        'potatoes_in_the_skin_waxy_medium_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_medium_steam_cooking',
        'potatoes_in_the_skin_waxy_small_rapid_steam_cooking',
        'potatoes_in_the_skin_waxy_small_steam_cooking',
        'potatoes_mainly_waxy_diced',
        'potatoes_mainly_waxy_halved',
        'potatoes_mainly_waxy_large',
        'potatoes_mainly_waxy_medium',
        'potatoes_mainly_waxy_quartered',
        'potatoes_mainly_waxy_small',
        'potatoes_waxy_diced',
        'potatoes_waxy_halved',
        'potatoes_waxy_quartered',
        'potatoes_waxy_whole_large',
        'potatoes_waxy_whole_medium',
        'potatoes_waxy_whole_small',
        'poularde_breast',
        'poularde_whole',
        'prawns',
        'prove_dough',
        'pumpkin_diced',
        'pumpkin_soup',
        'quick_mw',
        'quinces_diced',
        'quinoa',
        'rapid_steam_cooking',
        'ravioli_fresh',
        'razor_clams_large',
        'razor_clams_medium',
        'razor_clams_small',
        'red_beans',
        'red_cabbage_cut',
        'red_lentils',
        'red_snapper_fillet_2_cm',
        'red_snapper_fillet_3_cm',
        'redfish_fillet_2_cm',
        'redfish_fillet_3_cm',
        'redfish_piece',
        'reheating_with_microwave',
        'reheating_with_steam',
        'rhubarb_chunks',
        'rice_pudding_rapid_steam_cooking',
        'rice_pudding_steam_cooking',
        'risotto',
        'romanesco_florets_large',
        'romanesco_florets_medium',
        'romanesco_florets_small',
        'romanesco_whole_large',
        'romanesco_whole_medium',
        'romanesco_whole_small',
        'round_grain_rice_general_rapid_steam_cooking',
        'round_grain_rice_general_steam_cooking',
        'runner_beans_pieces',
        'runner_beans_sliced',
        'runner_beans_whole',
        'rye_cracked',
        'rye_whole',
        'salmon_fillet_2_cm',
        'salmon_fillet_3_cm',
        'salmon_piece',
        'salmon_steak_2_cm',
        'salmon_steak_3_cm',
        'salmon_trout',
        'saucisson',
        'savoy_cabbage_cut',
        'scallops',
        'schupfnudeln_potato_noodels',
        'sea_devil_fillet_3_cm',
        'sea_devil_fillet_4_cm',
        'sheyang_rapid_steam_cooking',
        'sheyang_steam_cooking',
        'silverside_10_cm',
        'silverside_5_cm',
        'silverside_7_5_cm',
        'simiao_rapid_steam_cooking',
        'simiao_steam_cooking',
        'small_shrimps',
        'snow_pea',
        'soak',
        'soup_hen',
        'sour_cherries',
        'sous_vide',
        'spaetzle_fresh',
        'spelt_cracked',
        'spelt_whole',
        'spinach',
        'steam_cooking',
        'sterilize_crockery',
        'stuffed_cabbage',
        'sweat_onions',
        'swede_cut_into_batons',
        'swede_diced',
        'sweet_cheese_dumplings',
        'sweet_cherries',
        'swiss_toffee_cream_100_ml',
        'swiss_toffee_cream_150_ml',
        'tagliatelli_fresh',
        'teltow_turnip_diced',
        'teltow_turnip_sliced',
        'tilapia_fillet_1_cm',
        'tilapia_fillet_2_cm',
        'toffee_date_dessert_one_large',
        'toffee_date_dessert_several_small',
        'tortellini_fresh',
        'treacle_sponge_pudding_one_large',
        'treacle_sponge_pudding_several_small',
        'trout',
        'tuna_fillet_2_cm',
        'tuna_fillet_3_cm',
        'tuna_steak',
        'turbot_fillet_2_cm',
        'turbot_fillet_3_cm',
        'turkey_breast',
        'uonumma_koshihikari_rapid_steam_cooking',
        'uonumma_koshihikari_steam_cooking',
        'veal_fillet_medaillons_1_cm',
        'veal_fillet_medaillons_2_cm',
        'veal_fillet_medaillons_3_cm',
        'veal_fillet_whole',
        'veal_sausages',
        'venus_clams',
        'viennese_silverside',
        'wheat_cracked',
        'wheat_whole',
        'white_asparagus_medium',
        'white_asparagus_thick',
        'white_asparagus_thin',
        'white_beans',
        'whole_ham_reheating',
        'whole_ham_steam_cooking',
        'wholegrain_rice',
        'wild_rice',
        'wuchang_rapid_steam_cooking',
        'wuchang_steam_cooking',
        'yam_halved',
        'yam_quartered',
        'yam_strips',
        'yeast_dumplings_fresh',
        'yellow_beans_cut',
        'yellow_beans_whole',
        'yellow_split_peas',
        'zander_fillet',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_program',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program_phase-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.steam_oven_micro_program_phase',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program phase',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_phase',
    'unique_id': 'DummyAppliance_45-state_program_phase',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program_phase-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Steam oven micro Program phase',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_program_phase',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.steam_oven_micro_program_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program type',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_type',
    'unique_id': 'DummyAppliance_45-state_program_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_program_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Steam oven micro Program type',
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_program_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'normal_operation_mode',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_remaining_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.steam_oven_micro_remaining_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Remaining time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'DummyAppliance_45-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_remaining_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Steam oven micro Remaining time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_remaining_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_start_in-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.steam_oven_micro_start_in',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Start in',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'DummyAppliance_45-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_start_in-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Steam oven micro Start in',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_start_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.steam_oven_micro_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Target temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'target_temperature',
    'unique_id': 'DummyAppliance_45-state_target_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Steam oven micro Target temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.steam_oven_micro_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'DummyAppliance_45-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.steam_oven_micro_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Steam oven micro Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.steam_oven_micro_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:washing-machine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_3-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine',
      'icon': 'mdi:washing-machine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_elapsed_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Elapsed time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'Dummy_Appliance_3-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_elapsed_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Elapsed time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_consumption',
    'unique_id': 'Dummy_Appliance_3-current_energy_consumption',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Washing machine Energy consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_id',
    'unique_id': 'Dummy_Appliance_3-state_program_id',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program',
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'no_program',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_phase-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program_phase',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program phase',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_phase',
    'unique_id': 'Dummy_Appliance_3-state_program_phase',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_phase-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program phase',
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_phase',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_running',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_program_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program type',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'program_type',
    'unique_id': 'Dummy_Appliance_3-state_program_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program type',
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'normal_operation_mode',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_remaining_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Remaining time',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'Dummy_Appliance_3-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_remaining_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Remaining time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_spin_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Spin speed',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'spin_speed',
    'unique_id': 'Dummy_Appliance_3-state_spinning_speed',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_spin_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Spin speed',
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_start_in-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_start_in',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Start in',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'Dummy_Appliance_3-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_start_in-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Start in',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_start_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Target temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'target_temperature',
    'unique_id': 'Dummy_Appliance_3-state_target_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Washing machine Target temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Water consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'water_consumption',
    'unique_id': 'Dummy_Appliance_3-current_water_consumption',
    'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Washing machine Water consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
