# serializer version: 1
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:pot-steam-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_hob_w_extr-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction',
      'icon': 'mdi:pot-steam-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 1',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-1',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 1',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 2',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-2',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 2',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '110',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 3',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-3',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 3',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 4',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-4',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 4',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hob_with_extraction_plate_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Plate 5',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'plate',
    'unique_id': 'DummyAppliance_hob_w_extr-state_plate_step-5',
    'unit_of_measurement': None,
  })
# ---
# name: test_hob_sensor_states[platforms0-hob.json][sensor.hob_with_extraction_plate_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hob with extraction Plate 5',
      'options': list([
        '0',
        '110',
        '220',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '10',
        '11',
        '12',
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '117',
        '118',
        '217',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hob_with_extraction_plate_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '117',
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_1-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Freezer',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_1-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.freezer_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Freezer Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-18.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hood',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:turbine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_18-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.hood-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hood',
      'icon': 'mdi:turbine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hood',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_2-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Refrigerator',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_2-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.refrigerator_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Refrigerator Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:washing-machine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_3-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine',
      'icon': 'mdi:washing-machine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_elapsed_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Elapsed time',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'Dummy_Appliance_3-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_elapsed_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Elapsed time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'energy_consumption',
    'unique_id': 'Dummy_Appliance_3-current_energy_consumption',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Washing machine Energy consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_forecast-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_energy_forecast',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Energy forecast',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'energy_forecast',
    'unique_id': 'Dummy_Appliance_3-energy_forecast',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_energy_forecast-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Energy forecast',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_energy_forecast',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_id',
    'unique_id': 'Dummy_Appliance_3-state_program_id',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program',
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'no_program',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_phase-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program_phase',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program phase',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_phase',
    'unique_id': 'Dummy_Appliance_3-state_program_phase',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_phase-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program phase',
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_phase',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_running',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_program_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program type',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_type',
    'unique_id': 'Dummy_Appliance_3-state_program_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_program_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program type',
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'normal_operation_mode',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_remaining_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Remaining time',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'Dummy_Appliance_3-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_remaining_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Remaining time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_spin_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Spin speed',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'spin_speed',
    'unique_id': 'Dummy_Appliance_3-state_spinning_speed',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_spin_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Spin speed',
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_start_in-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_start_in',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Start in',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'Dummy_Appliance_3-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_start_in-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Start in',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_start_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Water consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'water_consumption',
    'unique_id': 'Dummy_Appliance_3-current_water_consumption',
    'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Washing machine Water consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_forecast-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_water_forecast',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Water forecast',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'water_forecast',
    'unique_id': 'Dummy_Appliance_3-water_forecast',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[platforms0][sensor.washing_machine_water_forecast-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Water forecast',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_water_forecast',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.freezer-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_1-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.freezer-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Freezer',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.freezer_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.freezer_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_1-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.freezer_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Freezer Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.freezer_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-18.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.hood-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.hood',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:turbine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'DummyAppliance_18-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.hood-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Hood',
      'icon': 'mdi:turbine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.hood',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.refrigerator-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:fridge-industrial-outline',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_2-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.refrigerator-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Refrigerator',
      'icon': 'mdi:fridge-industrial-outline',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in_use',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.refrigerator_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.refrigerator_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'Dummy_Appliance_2-state_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.refrigerator_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Refrigerator Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.refrigerator_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': 'mdi:washing-machine',
    'original_name': None,
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': 'Dummy_Appliance_3-state_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine',
      'icon': 'mdi:washing-machine',
      'options': list([
        'autocleaning',
        'failure',
        'idle',
        'in_use',
        'not_connected',
        'off',
        'on',
        'pause',
        'program_ended',
        'program_interrupted',
        'programmed',
        'rinse_hold',
        'service',
        'supercooling',
        'supercooling_superfreezing',
        'superfreezing',
        'superheating',
        'waiting_to_start',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_elapsed_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Elapsed time',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'elapsed_time',
    'unique_id': 'Dummy_Appliance_3-state_elapsed_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_elapsed_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Elapsed time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_elapsed_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_energy_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'energy_consumption',
    'unique_id': 'Dummy_Appliance_3-current_energy_consumption',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_energy_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Washing machine Energy consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_energy_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_energy_forecast-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_energy_forecast',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Energy forecast',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'energy_forecast',
    'unique_id': 'Dummy_Appliance_3-energy_forecast',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_energy_forecast-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Energy forecast',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_energy_forecast',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_id',
    'unique_id': 'Dummy_Appliance_3-state_program_id',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program',
      'options': list([
        'automatic_plus',
        'clean_machine',
        'cool_air',
        'cottons',
        'cottons_eco',
        'cottons_hygiene',
        'curtains',
        'dark_garments',
        'delicates',
        'denim',
        'down_duvets',
        'down_filled_items',
        'drain_spin',
        'eco_40_60',
        'express_20',
        'first_wash',
        'freshen_up',
        'minimum_iron',
        'no_program',
        'outerwear',
        'pillows',
        'proofing',
        'quick_power_wash',
        'rinse',
        'rinse_out_lint',
        'separate_rinse_starch',
        'shirts',
        'silks',
        'sportswear',
        'starch',
        'steam_care',
        'trainers',
        'warm_air',
        'woollens',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'no_program',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program_phase-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.washing_machine_program_phase',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program phase',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_phase',
    'unique_id': 'Dummy_Appliance_3-state_program_phase',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program_phase-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program phase',
      'options': list([
        'anti_crease',
        'cleaning',
        'cooling_down',
        'disinfecting',
        'drain',
        'drying',
        'finished',
        'freshen_up_and_moisten',
        'hygiene',
        'main_wash',
        'not_running',
        'pre_wash',
        'rinse',
        'rinse_hold',
        'soak',
        'spin',
        'starch_stop',
        'steam_smoothing',
        'venting',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_phase',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_running',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_program_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Program type',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'program_type',
    'unique_id': 'Dummy_Appliance_3-state_program_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_program_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Washing machine Program type',
      'options': list([
        'automatic_program',
        'cleaning_care_program',
        'maintenance_program',
        'normal_operation_mode',
        'own_program',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_program_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'normal_operation_mode',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_remaining_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Remaining time',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'remaining_time',
    'unique_id': 'Dummy_Appliance_3-state_remaining_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_remaining_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Remaining time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_remaining_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_spin_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Spin speed',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'spin_speed',
    'unique_id': 'Dummy_Appliance_3-state_spinning_speed',
    'unit_of_measurement': 'rpm',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_spin_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Spin speed',
      'unit_of_measurement': 'rpm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_spin_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_start_in-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_start_in',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Start in',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'start_time',
    'unique_id': 'Dummy_Appliance_3-state_start_time',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_start_in-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Washing machine Start in',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_start_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_water_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WATER: 'water'>,
    'original_icon': None,
    'original_name': 'Water consumption',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'water_consumption',
    'unique_id': 'Dummy_Appliance_3-current_water_consumption',
    'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_water_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'water',
      'friendly_name': 'Washing machine Water consumption',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_water_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_water_forecast-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.washing_machine_water_forecast',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Water forecast',
    'platform': 'miele',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'water_forecast',
    'unique_id': 'Dummy_Appliance_3-water_forecast',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states_api_push[platforms0][sensor.washing_machine_water_forecast-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Washing machine Water forecast',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.washing_machine_water_forecast',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
