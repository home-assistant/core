# serializer version: 1
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.clip_flur-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.clip_flur',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'CLIP Flur',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '/sensors/3-status',
    'unit_of_measurement': None,
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.clip_flur-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'CLIP Flur',
      'on': True,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.clip_flur',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.clip_light_level_sensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.clip_light_level_sensor',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'CLIP light level sensor',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-00-light_level',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.clip_light_level_sensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'CLIP light level sensor',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.clip_light_level_sensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '999.8',
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.light_level_sensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.light_level_sensor',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Light level sensor',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:00-00-light_level',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.light_level_sensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'dark': False,
      'device_class': 'illuminance',
      'friendly_name': 'Light level sensor',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'temperature': 0.1,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.light_level_sensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '999.8',
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.light_level_sensor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.light_level_sensor_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Light level sensor Temperature',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:00-00-internal_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_allow_clip_sensors[config_entry_options0-sensor_payload0][sensor.light_level_sensor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Light level sensor Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.light_level_sensor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload0-expected0][sensor.bosch_air_quality_sensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bosch_air_quality_sensor',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'BOSCH Air quality sensor',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:12:4b:00:14:4d:00:07-02-fdef-air_quality',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload0-expected0][sensor.bosch_air_quality_sensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'BOSCH Air quality sensor',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bosch_air_quality_sensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'poor',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload0-expected0][sensor.bosch_air_quality_sensor_ppb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bosch_air_quality_sensor_ppb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'BOSCH Air quality sensor PPB',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:12:4b:00:14:4d:00:07-02-fdef-air_quality_ppb',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload0-expected0][sensor.bosch_air_quality_sensor_ppb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'BOSCH Air quality sensor PPB',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bosch_air_quality_sensor_ppb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '809',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload1-expected1][sensor.bosch_air_quality_sensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bosch_air_quality_sensor',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'BOSCH Air quality sensor',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:12:4b:00:14:4d:00:07-02-fdef-air_quality',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload1-expected1][sensor.bosch_air_quality_sensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'BOSCH Air quality sensor',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bosch_air_quality_sensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'poor',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload1-expected1][sensor.bosch_air_quality_sensor_ppb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bosch_air_quality_sensor_ppb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'BOSCH Air quality sensor PPB',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:12:4b:00:14:4d:00:07-02-fdef-air_quality_ppb',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload1-expected1][sensor.bosch_air_quality_sensor_ppb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'BOSCH Air quality sensor PPB',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bosch_air_quality_sensor_ppb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '809',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload10-expected10][sensor.fsm_state_motion_stair-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.fsm_state_motion_stair',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'FSM_STATE Motion stair',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'fsm-state-1520195376277-status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload10-expected10][sensor.fsm_state_motion_stair-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'FSM_STATE Motion stair',
      'on': True,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fsm_state_motion_stair',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload11-expected11][sensor.mi_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mi_temperature_1',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0405-humidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload11-expected11][sensor.mi_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Mi temperature 1',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '35.55',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload11-expected11][sensor.mi_temperature_1_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0405-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload11-expected11][sensor.mi_temperature_1_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Mi temperature 1 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload12-expected12][sensor.soil_sensor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.soil_sensor',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.MOISTURE: 'moisture'>,
    'original_icon': None,
    'original_name': 'Soil Sensor',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'a4:c1:38:fe:86:8f:07:a3-01-0408-moisture',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload12-expected12][sensor.soil_sensor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'moisture',
      'friendly_name': 'Soil Sensor',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.soil_sensor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '72.13',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload12-expected12][sensor.soil_sensor_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.soil_sensor_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Soil Sensor Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'a4:c1:38:fe:86:8f:07:a3-01-0408-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload12-expected12][sensor.soil_sensor_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Soil Sensor Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.soil_sensor_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload13-expected13][sensor.motion_sensor_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.motion_sensor_4',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'Motion sensor 4',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:17:88:01:03:28:8c:9b-02-0400-light_level',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload13-expected13][sensor.motion_sensor_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'dark': True,
      'daylight': False,
      'device_class': 'illuminance',
      'friendly_name': 'Motion sensor 4',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.motion_sensor_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5.0',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload13-expected13][sensor.motion_sensor_4_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.motion_sensor_4_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Motion sensor 4 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:17:88:01:03:28:8c:9b-02-0400-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload13-expected13][sensor.motion_sensor_4_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'dark': True,
      'daylight': False,
      'device_class': 'battery',
      'friendly_name': 'Motion sensor 4 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.motion_sensor_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload14-expected14][sensor.starkvind_airpurifier_pm25-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.starkvind_airpurifier_pm25',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'STARKVIND AirPurifier PM25',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'xx:xx:xx:xx:xx:xx:xx:xx-01-042a-particulate_matter_pm2_5',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload14-expected14][sensor.starkvind_airpurifier_pm25-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'STARKVIND AirPurifier PM25',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.starkvind_airpurifier_pm25',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload15-expected15][sensor.power_16-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.power_16',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power 16',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:0d:6f:00:0b:7a:64:29-01-0b04-power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload15-expected15][sensor.power_16-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current': 34,
      'device_class': 'power',
      'friendly_name': 'Power 16',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
      'voltage': 231,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.power_16',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '64',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload16-expected16][sensor.mi_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mi_temperature_1',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0403-pressure',
    'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload16-expected16][sensor.mi_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'Mi temperature 1',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1010',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload16-expected16][sensor.mi_temperature_1_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0403-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload16-expected16][sensor.mi_temperature_1_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Mi temperature 1 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload17-expected17][sensor.mi_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mi_temperature_1',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0402-temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload17-expected17][sensor.mi_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Mi temperature 1',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21.82',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload17-expected17][sensor.mi_temperature_1_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Mi temperature 1 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:45:dc:53-01-0402-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload17-expected17][sensor.mi_temperature_1_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Mi temperature 1 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mi_temperature_1_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload18-expected18][sensor.etrv_sejour-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.etrv_sejour',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'eTRV Séjour',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'cc:cc:cc:ff:fe:38:4d:b3-01-000a-last_set',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload18-expected18][sensor.etrv_sejour-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'timestamp',
      'friendly_name': 'eTRV Séjour',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.etrv_sejour',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2020-11-19T08:07:08+00:00',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload18-expected18][sensor.etrv_sejour_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.etrv_sejour_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'eTRV Séjour Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'cc:cc:cc:ff:fe:38:4d:b3-01-000a-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload18-expected18][sensor.etrv_sejour_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'eTRV Séjour Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.etrv_sejour_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload19-expected19][sensor.alarm_10_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.alarm_10_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Alarm 10 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:b5:d1:80-01-0500-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload19-expected19][sensor.alarm_10_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Alarm 10 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'temperature': 26.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.alarm_10_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload19-expected19][sensor.alarm_10_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.alarm_10_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Alarm 10 Temperature',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:15:8d:00:02:b5:d1:80-01-0500-internal_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload19-expected19][sensor.alarm_10_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Alarm 10 Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.alarm_10_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26.0',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_ch2o-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ch2o',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLATILE_ORGANIC_COMPOUNDS: 'volatile_organic_compounds'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CH2O',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_formaldehyde',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_ch2o-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volatile_organic_compounds',
      'friendly_name': 'AirQuality 1 CH2O',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ch2o',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_co2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_co2',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CO2',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_co2',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_co2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'AirQuality 1 CO2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_co2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '359',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_pm25-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_pm25',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 PM25',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_pm2_5',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_pm25-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'AirQuality 1 PM25',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_pm25',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_ppb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ppb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'AirQuality 1 PPB',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_ppb',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload2-expected2][sensor.airquality_1_ppb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'AirQuality 1 PPB',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ppb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload20-expected20][sensor.dimmer_switch_3_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.dimmer_switch_3_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Dimmer switch 3 Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:17:88:01:02:0e:32:a3-02-fc00-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload20-expected20][sensor.dimmer_switch_3_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'event_id': 'dimmer_switch_3',
      'friendly_name': 'Dimmer switch 3 Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dimmer_switch_3_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '90',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload21-expected21][sensor.ikea_starkvind_filter_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ikea_starkvind_filter_time',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfTime.DAYS: 'd'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'IKEA Starkvind Filter time',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '0c:43:14:ff:fe:6c:20:12-01-fc7d-air_purifier_filter_run_time',
    'unit_of_measurement': <UnitOfTime.DAYS: 'd'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload21-expected21][sensor.ikea_starkvind_filter_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'IKEA Starkvind Filter time',
      'unit_of_measurement': <UnitOfTime.DAYS: 'd'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ikea_starkvind_filter_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.849594907407407',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_ch2o-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ch2o',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLATILE_ORGANIC_COMPOUNDS: 'volatile_organic_compounds'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CH2O',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_formaldehyde',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_ch2o-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volatile_organic_compounds',
      'friendly_name': 'AirQuality 1 CH2O',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ch2o',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_co2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_co2',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CO2',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_co2',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_co2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'AirQuality 1 CO2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_co2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '359',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_pm25-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_pm25',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 PM25',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_pm2_5',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_pm25-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'AirQuality 1 PM25',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_pm25',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_ppb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ppb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'AirQuality 1 PPB',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_ppb',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload3-expected3][sensor.airquality_1_ppb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'AirQuality 1 PPB',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ppb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_ch2o-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ch2o',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLATILE_ORGANIC_COMPOUNDS: 'volatile_organic_compounds'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CH2O',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_formaldehyde',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_ch2o-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volatile_organic_compounds',
      'friendly_name': 'AirQuality 1 CH2O',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ch2o',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_co2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_co2',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 CO2',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_co2',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_co2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'AirQuality 1 CO2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_co2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '359',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_pm25-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_pm25',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'AirQuality 1 PM25',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_pm2_5',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_pm25-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'AirQuality 1 PM25',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_pm25',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_ppb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.airquality_1_ppb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'AirQuality 1 PPB',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:00:00:00:00:00:00:01-02-0113-air_quality_ppb',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload4-expected4][sensor.airquality_1_ppb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'AirQuality 1 PPB',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.airquality_1_ppb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload5-expected5][sensor.fyrtur_block_out_roller_blind_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fyrtur_block_out_roller_blind_battery',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'FYRTUR block-out roller blind Battery',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:0d:6f:ff:fe:01:23:45-01-0001-battery',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload5-expected5][sensor.fyrtur_block_out_roller_blind_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'FYRTUR block-out roller blind Battery',
      'on': True,
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fyrtur_block_out_roller_blind_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload6-expected6][sensor.carbondioxide_35-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.carbondioxide_35',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': 'CarbonDioxide 35',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'xx:xx:xx:xx:xx:xx:xx:xx-01-040d-carbon_dioxide',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload6-expected6][sensor.carbondioxide_35-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'CarbonDioxide 35',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.carbondioxide_35',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '370',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload7-expected7][sensor.consumption_15-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.consumption_15',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Consumption 15',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00:0d:6f:00:0b:7a:64:29-01-0702-consumption',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload7-expected7][sensor.consumption_15-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Consumption 15',
      'on': True,
      'power': 123,
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.consumption_15',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11.342',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload8-expected8][sensor.daylight-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.daylight',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:white-balance-sunny',
    'original_name': 'Daylight',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '01:23:4E:FF:FF:56:78:9A-01-daylight_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload8-expected8][sensor.daylight-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'daylight': True,
      'friendly_name': 'Daylight',
      'icon': 'mdi:white-balance-sunny',
      'on': True,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daylight',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solar_noon',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload9-expected9][sensor.formaldehyde_34-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.formaldehyde_34',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLATILE_ORGANIC_COMPOUNDS: 'volatile_organic_compounds'>,
    'original_icon': None,
    'original_name': 'Formaldehyde 34',
    'platform': 'deconz',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'xx:xx:xx:xx:xx:xx:xx:xx-01-042b-formaldehyde',
    'unit_of_measurement': 'ppb',
  })
# ---
# name: test_sensors[config_entry_options0-sensor_payload9-expected9][sensor.formaldehyde_34-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'volatile_organic_compounds',
      'friendly_name': 'Formaldehyde 34',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'ppb',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.formaldehyde_34',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
