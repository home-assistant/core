# serializer version: 1
# name: test_all_entities[sensor.stove_air_outlet_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_air_outlet_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Air outlet temperature',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'air_outlet_temperature',
    'unique_id': '11:22:33:44:55:66-air_outlet_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_air_outlet_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Air outlet temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_air_outlet_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.1',
  })
# ---
# name: test_all_entities[sensor.stove_hydro_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_hydro_temperature_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Hydro temperature 1',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 't1_hydro',
    'unique_id': '11:22:33:44:55:66-t1_hydro',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_hydro_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Hydro temperature 1',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_hydro_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21.5',
  })
# ---
# name: test_all_entities[sensor.stove_hydro_temperature_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_hydro_temperature_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Hydro temperature 2',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 't2_hydro',
    'unique_id': '11:22:33:44:55:66-t2_hydro',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_hydro_temperature_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Hydro temperature 2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_hydro_temperature_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.1',
  })
# ---
# name: test_all_entities[sensor.stove_pellet_quantity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_pellet_quantity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WEIGHT: 'weight'>,
    'original_icon': None,
    'original_name': 'Pellet quantity',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pellet_quantity',
    'unique_id': '11:22:33:44:55:66-pellet_quantity',
    'unit_of_measurement': <UnitOfMass.KILOGRAMS: 'kg'>,
  })
# ---
# name: test_all_entities[sensor.stove_pellet_quantity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'weight',
      'friendly_name': 'Stove Pellet quantity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfMass.KILOGRAMS: 'kg'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_pellet_quantity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1248',
  })
# ---
# name: test_all_entities[sensor.stove_return_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_return_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Return water temperature',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'return_water_temperature',
    'unique_id': '11:22:33:44:55:66-return_water_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_return_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Return water temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_return_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_all_entities[sensor.stove_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Room temperature',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'room_temperature',
    'unique_id': '11:22:33:44:55:66-room_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Room temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21.5',
  })
# ---
# name: test_all_entities[sensor.stove_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'off_timer',
        'test_fire',
        'heatup',
        'fueling',
        'ign_test',
        'burning',
        'burning_mod',
        'unknown',
        'cool_fluid',
        'fire_stop',
        'clean_fire',
        'cool',
        'cleanup',
        'ecomode',
        'chimney_alarm',
        'grate_error',
        'pellet_water_error',
        't05_error',
        'hatch_door_open',
        'pressure_error',
        'main_probe_failure',
        'flue_probe_failure',
        'exhaust_temp_high',
        'pellet_finished',
        'OFF',
        'fueling',
        'ign_test',
        'burning',
        'firewood_finished',
        'cooling',
        'clean_fire',
        'general_error',
        'general_error',
        'door_open',
        'temp_too_high',
        'cleaning_warning',
        'fuel_error',
        'pellet_water_error',
        't05_error',
        'hatch_door_open',
        'pressure_error',
        'main_probe_failure',
        'flue_probe_failure',
        'exhaust_temp_high',
        'pellet_finished',
        'general_error',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Status',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'status',
    'unique_id': '11:22:33:44:55:66-status',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[sensor.stove_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Stove Status',
      'options': list([
        'off',
        'off_timer',
        'test_fire',
        'heatup',
        'fueling',
        'ign_test',
        'burning',
        'burning_mod',
        'unknown',
        'cool_fluid',
        'fire_stop',
        'clean_fire',
        'cool',
        'cleanup',
        'ecomode',
        'chimney_alarm',
        'grate_error',
        'pellet_water_error',
        't05_error',
        'hatch_door_open',
        'pressure_error',
        'main_probe_failure',
        'flue_probe_failure',
        'exhaust_temp_high',
        'pellet_finished',
        'OFF',
        'fueling',
        'ign_test',
        'burning',
        'firewood_finished',
        'cooling',
        'clean_fire',
        'general_error',
        'general_error',
        'door_open',
        'temp_too_high',
        'cleaning_warning',
        'fuel_error',
        'pellet_water_error',
        't05_error',
        'hatch_door_open',
        'pressure_error',
        'main_probe_failure',
        'flue_probe_failure',
        'exhaust_temp_high',
        'pellet_finished',
        'general_error',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'burning',
  })
# ---
# name: test_all_entities[sensor.stove_tank_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_tank_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Tank water temperature',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'tank_water_temperature',
    'unique_id': '11:22:33:44:55:66-tank_water_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_tank_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Tank water temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_tank_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_all_entities[sensor.stove_wood_combustion_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.stove_wood_combustion_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Wood combustion temperature',
    'platform': 'palazzetti',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wood_combustion_temperature',
    'unique_id': '11:22:33:44:55:66-wood_combustion_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_entities[sensor.stove_wood_combustion_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Stove Wood combustion temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.stove_wood_combustion_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '45',
  })
# ---
