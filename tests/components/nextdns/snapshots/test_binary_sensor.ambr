# serializer version: 1
# name: test_binary_Sensor[switch.fake_profile_ai_driven_threat_detection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_ai_driven_threat_detection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'AI-Driven threat detection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'ai_threat_detection',
    'unique_id': 'xyz12_ai_threat_detection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_ai_driven_threat_detection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile AI-Driven threat detection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_ai_driven_threat_detection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_allow_affiliate_tracking_links-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_allow_affiliate_tracking_links',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Allow affiliate & tracking links',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'allow_affiliate',
    'unique_id': 'xyz12_allow_affiliate',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_allow_affiliate_tracking_links-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Allow affiliate & tracking links',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_allow_affiliate_tracking_links',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_anonymized_edns_client_subnet-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_anonymized_edns_client_subnet',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Anonymized EDNS client subnet',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'anonymized_ecs',
    'unique_id': 'xyz12_anonymized_ecs',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_anonymized_edns_client_subnet-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Anonymized EDNS client subnet',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_anonymized_edns_client_subnet',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_9gag-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_9gag',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block 9GAG',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_9gag',
    'unique_id': 'xyz12_block_9gag',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_bypass_methods-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_bypass_methods',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block bypass methods',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_bypass_methods',
    'unique_id': 'xyz12_block_bypass_methods',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_bypass_methods-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block bypass methods',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_bypass_methods',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_child_sexual_abuse_material-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_child_sexual_abuse_material',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block child sexual abuse material',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_csam',
    'unique_id': 'xyz12_block_csam',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_child_sexual_abuse_material-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block child sexual abuse material',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_child_sexual_abuse_material',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_disguised_third_party_trackers-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_disguised_third_party_trackers',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block disguised third-party trackers',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_disguised_trackers',
    'unique_id': 'xyz12_block_disguised_trackers',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_disguised_third_party_trackers-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block disguised third-party trackers',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_disguised_third_party_trackers',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_dynamic_dns_hostnames-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_dynamic_dns_hostnames',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block dynamic DNS hostnames',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_ddns',
    'unique_id': 'xyz12_block_ddns',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_dynamic_dns_hostnames-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block dynamic DNS hostnames',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_dynamic_dns_hostnames',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_newly_registered_domains-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_newly_registered_domains',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block newly registered domains',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_nrd',
    'unique_id': 'xyz12_block_nrd',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_newly_registered_domains-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block newly registered domains',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_newly_registered_domains',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_page-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_page',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block page',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_page',
    'unique_id': 'xyz12_block_page',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_page-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block page',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_page',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_parked_domains-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_parked_domains',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block parked domains',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_parked_domains',
    'unique_id': 'xyz12_block_parked_domains',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_block_parked_domains-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block parked domains',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_parked_domains',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cache_boost-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cache_boost',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cache boost',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cache_boost',
    'unique_id': 'xyz12_cache_boost',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cache_boost-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Cache boost',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cache_boost',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cname_flattening-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cname_flattening',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'CNAME flattening',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cname_flattening',
    'unique_id': 'xyz12_cname_flattening',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cname_flattening-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile CNAME flattening',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cname_flattening',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cryptojacking_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cryptojacking_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cryptojacking protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cryptojacking_protection',
    'unique_id': 'xyz12_cryptojacking_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_cryptojacking_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Cryptojacking protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cryptojacking_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_dns_rebinding_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_dns_rebinding_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS rebinding protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dns_rebinding_protection',
    'unique_id': 'xyz12_dns_rebinding_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_dns_rebinding_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS rebinding protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_dns_rebinding_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_domain_generation_algorithms_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_domain_generation_algorithms_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Domain generation algorithms protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dga_protection',
    'unique_id': 'xyz12_dga_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_domain_generation_algorithms_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Domain generation algorithms protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_domain_generation_algorithms_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_force_safesearch-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_force_safesearch',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Force SafeSearch',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'safesearch',
    'unique_id': 'xyz12_safesearch',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_force_safesearch-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Force SafeSearch',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_force_safesearch',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_force_youtube_restricted_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_force_youtube_restricted_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Force YouTube restricted mode',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'youtube_restricted_mode',
    'unique_id': 'xyz12_youtube_restricted_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_force_youtube_restricted_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Force YouTube restricted mode',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_force_youtube_restricted_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_google_safe_browsing-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_google_safe_browsing',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Google safe browsing',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'google_safe_browsing',
    'unique_id': 'xyz12_google_safe_browsing',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_google_safe_browsing-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Google safe browsing',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_google_safe_browsing',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_idn_homograph_attacks_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_idn_homograph_attacks_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IDN homograph attacks protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'idn_homograph_attacks_protection',
    'unique_id': 'xyz12_idn_homograph_attacks_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_idn_homograph_attacks_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile IDN homograph attacks protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_idn_homograph_attacks_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_logs-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_logs',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Logs',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'logs',
    'unique_id': 'xyz12_logs',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_logs-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Logs',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_logs',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_threat_intelligence_feeds-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_threat_intelligence_feeds',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Threat intelligence feeds',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'threat_intelligence_feeds',
    'unique_id': 'xyz12_threat_intelligence_feeds',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_threat_intelligence_feeds-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Threat intelligence feeds',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_threat_intelligence_feeds',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_typosquatting_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_typosquatting_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Typosquatting protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'typosquatting_protection',
    'unique_id': 'xyz12_typosquatting_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_typosquatting_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Typosquatting protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_typosquatting_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_web3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_web3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Web3',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'web3',
    'unique_id': 'xyz12_web3',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_Sensor[switch.fake_profile_web3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Web3',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_web3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[binary_sensor.fake_profile_device_connection_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.fake_profile_device_connection_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Device connection status',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'device_connection_status',
    'unique_id': 'xyz12_this_device_nextdns_connection_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[binary_sensor.fake_profile_device_connection_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Fake Profile Device connection status',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.fake_profile_device_connection_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[binary_sensor.fake_profile_device_profile_connection_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.fake_profile_device_profile_connection_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Device profile connection status',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'device_profile_connection_status',
    'unique_id': 'xyz12_this_device_profile_connection_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[binary_sensor.fake_profile_device_profile_connection_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Fake Profile Device profile connection status',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.fake_profile_device_profile_connection_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_ai_driven_threat_detection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_ai_driven_threat_detection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'AI-Driven threat detection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'ai_threat_detection',
    'unique_id': 'xyz12_ai_threat_detection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_ai_driven_threat_detection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile AI-Driven threat detection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_ai_driven_threat_detection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_allow_affiliate_tracking_links-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_allow_affiliate_tracking_links',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Allow affiliate & tracking links',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'allow_affiliate',
    'unique_id': 'xyz12_allow_affiliate',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_allow_affiliate_tracking_links-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Allow affiliate & tracking links',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_allow_affiliate_tracking_links',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_anonymized_edns_client_subnet-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_anonymized_edns_client_subnet',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Anonymized EDNS client subnet',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'anonymized_ecs',
    'unique_id': 'xyz12_anonymized_ecs',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_anonymized_edns_client_subnet-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Anonymized EDNS client subnet',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_anonymized_edns_client_subnet',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_9gag-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_9gag',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block 9GAG',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_9gag',
    'unique_id': 'xyz12_block_9gag',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_bypass_methods-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_bypass_methods',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block bypass methods',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_bypass_methods',
    'unique_id': 'xyz12_block_bypass_methods',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_bypass_methods-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block bypass methods',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_bypass_methods',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_child_sexual_abuse_material-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_child_sexual_abuse_material',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block child sexual abuse material',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_csam',
    'unique_id': 'xyz12_block_csam',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_child_sexual_abuse_material-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block child sexual abuse material',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_child_sexual_abuse_material',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_disguised_third_party_trackers-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_disguised_third_party_trackers',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block disguised third-party trackers',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_disguised_trackers',
    'unique_id': 'xyz12_block_disguised_trackers',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_disguised_third_party_trackers-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block disguised third-party trackers',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_disguised_third_party_trackers',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_dynamic_dns_hostnames-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_dynamic_dns_hostnames',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block dynamic DNS hostnames',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_ddns',
    'unique_id': 'xyz12_block_ddns',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_dynamic_dns_hostnames-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block dynamic DNS hostnames',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_dynamic_dns_hostnames',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_newly_registered_domains-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_newly_registered_domains',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block newly registered domains',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_nrd',
    'unique_id': 'xyz12_block_nrd',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_newly_registered_domains-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block newly registered domains',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_newly_registered_domains',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_page-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_page',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block page',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_page',
    'unique_id': 'xyz12_block_page',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_page-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block page',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_page',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_parked_domains-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_block_parked_domains',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Block parked domains',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'block_parked_domains',
    'unique_id': 'xyz12_block_parked_domains',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_block_parked_domains-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Block parked domains',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_block_parked_domains',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cache_boost-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cache_boost',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cache boost',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cache_boost',
    'unique_id': 'xyz12_cache_boost',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cache_boost-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Cache boost',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cache_boost',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cname_flattening-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cname_flattening',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'CNAME flattening',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cname_flattening',
    'unique_id': 'xyz12_cname_flattening',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cname_flattening-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile CNAME flattening',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cname_flattening',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cryptojacking_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_cryptojacking_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cryptojacking protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cryptojacking_protection',
    'unique_id': 'xyz12_cryptojacking_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_cryptojacking_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Cryptojacking protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_cryptojacking_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_dns_rebinding_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_dns_rebinding_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS rebinding protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dns_rebinding_protection',
    'unique_id': 'xyz12_dns_rebinding_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_dns_rebinding_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS rebinding protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_dns_rebinding_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_domain_generation_algorithms_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_domain_generation_algorithms_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Domain generation algorithms protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dga_protection',
    'unique_id': 'xyz12_dga_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_domain_generation_algorithms_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Domain generation algorithms protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_domain_generation_algorithms_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_force_safesearch-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_force_safesearch',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Force SafeSearch',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'safesearch',
    'unique_id': 'xyz12_safesearch',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_force_safesearch-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Force SafeSearch',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_force_safesearch',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_force_youtube_restricted_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_force_youtube_restricted_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Force YouTube restricted mode',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'youtube_restricted_mode',
    'unique_id': 'xyz12_youtube_restricted_mode',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_force_youtube_restricted_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Force YouTube restricted mode',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_force_youtube_restricted_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_google_safe_browsing-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_google_safe_browsing',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Google safe browsing',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'google_safe_browsing',
    'unique_id': 'xyz12_google_safe_browsing',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_google_safe_browsing-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Google safe browsing',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_google_safe_browsing',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_idn_homograph_attacks_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_idn_homograph_attacks_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IDN homograph attacks protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'idn_homograph_attacks_protection',
    'unique_id': 'xyz12_idn_homograph_attacks_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_idn_homograph_attacks_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile IDN homograph attacks protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_idn_homograph_attacks_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_logs-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_logs',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Logs',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'logs',
    'unique_id': 'xyz12_logs',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_logs-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Logs',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_logs',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_threat_intelligence_feeds-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_threat_intelligence_feeds',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Threat intelligence feeds',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'threat_intelligence_feeds',
    'unique_id': 'xyz12_threat_intelligence_feeds',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_threat_intelligence_feeds-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Threat intelligence feeds',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_threat_intelligence_feeds',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_typosquatting_protection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_typosquatting_protection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Typosquatting protection',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'typosquatting_protection',
    'unique_id': 'xyz12_typosquatting_protection',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_typosquatting_protection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Typosquatting protection',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_typosquatting_protection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_binary_sensor[switch.fake_profile_web3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'switch.fake_profile_web3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Web3',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'web3',
    'unique_id': 'xyz12_web3',
    'unit_of_measurement': None,
  })
# ---
# name: test_binary_sensor[switch.fake_profile_web3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Web3',
    }),
    'context': <ANY>,
    'entity_id': 'switch.fake_profile_web3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
