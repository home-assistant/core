# serializer version: 1
# name: test_sensor[sensor.fake_profile_dns_over_http_3_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_http_3_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-HTTP/3 queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doh3_queries',
    'unique_id': 'xyz12_doh3_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_http_3_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-HTTP/3 queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_http_3_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_http_3_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_http_3_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-HTTP/3 queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doh3_queries_ratio',
    'unique_id': 'xyz12_doh3_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_http_3_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-HTTP/3 queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_http_3_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_https_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_https_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-HTTPS queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doh_queries',
    'unique_id': 'xyz12_doh_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_https_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-HTTPS queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_https_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_https_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_https_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-HTTPS queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doh_queries_ratio',
    'unique_id': 'xyz12_doh_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_https_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-HTTPS queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_https_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '17.4',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_quic_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_quic_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-QUIC queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doq_queries',
    'unique_id': 'xyz12_doq_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_quic_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-QUIC queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_quic_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_quic_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_quic_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-QUIC queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'doq_queries_ratio',
    'unique_id': 'xyz12_doq_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_quic_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-QUIC queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_quic_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8.7',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_tls_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_tls_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-TLS queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dot_queries',
    'unique_id': 'xyz12_dot_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_tls_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-TLS queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_tls_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '30',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_tls_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_over_tls_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS-over-TLS queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dot_queries_ratio',
    'unique_id': 'xyz12_dot_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_over_tls_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS-over-TLS queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_over_tls_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26.1',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'all_queries',
    'unique_id': 'xyz12_all_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_blocked-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_queries_blocked',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS queries blocked',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'blocked_queries',
    'unique_id': 'xyz12_blocked_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_blocked-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS queries blocked',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_queries_blocked',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_blocked_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_queries_blocked_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS queries blocked ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'blocked_queries_ratio',
    'unique_id': 'xyz12_blocked_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_blocked_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS queries blocked ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_queries_blocked_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_relayed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dns_queries_relayed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNS queries relayed',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'relayed_queries',
    'unique_id': 'xyz12_relayed_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dns_queries_relayed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNS queries relayed',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dns_queries_relayed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_not_validated_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dnssec_not_validated_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNSSEC not validated queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'not_validated_queries',
    'unique_id': 'xyz12_not_validated_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_not_validated_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNSSEC not validated queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dnssec_not_validated_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_validated_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dnssec_validated_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNSSEC validated queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'validated_queries',
    'unique_id': 'xyz12_validated_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_validated_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNSSEC validated queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dnssec_validated_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_validated_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_dnssec_validated_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DNSSEC validated queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'validated_queries_ratio',
    'unique_id': 'xyz12_validated_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_dnssec_validated_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile DNSSEC validated queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_dnssec_validated_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_encrypted_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_encrypted_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Encrypted queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'encrypted_queries',
    'unique_id': 'xyz12_encrypted_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_encrypted_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Encrypted queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_encrypted_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '60',
  })
# ---
# name: test_sensor[sensor.fake_profile_encrypted_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_encrypted_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Encrypted queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'encrypted_queries_ratio',
    'unique_id': 'xyz12_encrypted_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_encrypted_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Encrypted queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_encrypted_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '60.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv4_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_ipv4_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IPv4 queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'ipv4_queries',
    'unique_id': 'xyz12_ipv4_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv4_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile IPv4 queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_ipv4_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '90',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv6_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_ipv6_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IPv6 queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'ipv6_queries',
    'unique_id': 'xyz12_ipv6_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv6_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile IPv6 queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_ipv6_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv6_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_ipv6_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'IPv6 queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'ipv6_queries_ratio',
    'unique_id': 'xyz12_ipv6_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_ipv6_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile IPv6 queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_ipv6_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_tcp_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_tcp_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TCP queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'tcp_queries',
    'unique_id': 'xyz12_tcp_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_tcp_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile TCP queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_tcp_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor[sensor.fake_profile_tcp_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_tcp_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TCP queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'tcp_queries_ratio',
    'unique_id': 'xyz12_tcp_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_tcp_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile TCP queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_tcp_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensor[sensor.fake_profile_udp_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_udp_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'UDP queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'udp_queries',
    'unique_id': 'xyz12_udp_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_udp_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile UDP queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_udp_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_sensor[sensor.fake_profile_udp_queries_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_udp_queries_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'UDP queries ratio',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'udp_queries_ratio',
    'unique_id': 'xyz12_udp_queries_ratio',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.fake_profile_udp_queries_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile UDP queries ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_udp_queries_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '34.8',
  })
# ---
# name: test_sensor[sensor.fake_profile_unencrypted_queries-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.fake_profile_unencrypted_queries',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Unencrypted queries',
    'platform': 'nextdns',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'unencrypted_queries',
    'unique_id': 'xyz12_unencrypted_queries',
    'unit_of_measurement': 'queries',
  })
# ---
# name: test_sensor[sensor.fake_profile_unencrypted_queries-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Fake Profile Unencrypted queries',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': 'queries',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.fake_profile_unencrypted_queries',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
