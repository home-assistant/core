# serializer version: 1
# name: test_states[binary_sensor.my_device_battery_low-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_device_battery_low',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery low',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'battery_low',
    'unique_id': '123456789ABCDEFGH_battery_low',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_cloud_connection-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_device_cloud_connection',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Cloud connection',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cloud_connection',
    'unique_id': '123456789ABCDEFGH_cloud_connection',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_cloud_connection-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'my_device Cloud connection',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_device_cloud_connection',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_states[binary_sensor.my_device_door-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.my_device_door',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.DOOR: 'door'>,
    'original_icon': None,
    'original_name': 'Door',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'is_open',
    'unique_id': '123456789ABCDEFGH_is_open',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_door-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'door',
      'friendly_name': 'my_device Door',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_device_door',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_states[binary_sensor.my_device_humidity_warning-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_device_humidity_warning',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Humidity warning',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'humidity_warning',
    'unique_id': '123456789ABCDEFGH_humidity_warning',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_moisture-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.my_device_moisture',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.MOISTURE: 'moisture'>,
    'original_icon': None,
    'original_name': 'Moisture',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'water_alert',
    'unique_id': '123456789ABCDEFGH_water_alert',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_moisture-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'moisture',
      'friendly_name': 'my_device Moisture',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_device_moisture',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_states[binary_sensor.my_device_motion-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.my_device_motion',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.MOTION: 'motion'>,
    'original_icon': None,
    'original_name': 'Motion',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'motion_detected',
    'unique_id': '123456789ABCDEFGH_motion_detected',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_motion-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'motion',
      'friendly_name': 'my_device Motion',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_device_motion',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_states[binary_sensor.my_device_overheated-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_device_overheated',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Overheated',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'overheated',
    'unique_id': '123456789ABCDEFGH_overheated',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[binary_sensor.my_device_overheated-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'my_device Overheated',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_device_overheated',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_states[binary_sensor.my_device_temperature_warning-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': <RegistryEntryDisabler.INTEGRATION: 'integration'>,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_device_temperature_warning',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Temperature warning',
    'platform': 'tplink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'temperature_warning',
    'unique_id': '123456789ABCDEFGH_temperature_warning',
    'unit_of_measurement': None,
  })
# ---
# name: test_states[my_device-entry]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
      tuple(
        'mac',
        'aa:bb:cc:dd:ee:ff',
      ),
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': '1.0.0',
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'tplink',
        '123456789ABCDEFGH',
      ),
    }),
    'is_new': False,
    'labels': set({
    }),
    'manufacturer': 'TP-Link',
    'model': 'HS100',
    'model_id': None,
    'name': 'my_device',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'suggested_area': None,
    'sw_version': '1.0.0',
    'via_device_id': None,
  })
# ---
