# serializer version: 1
# name: test_entities[binary_sensor.air_conditioning_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 3 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Air Conditioning Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 3 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning Overlay',
      'termination': 'TADO_MODE',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 3 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_window-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_window',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.WINDOW: 'window'>,
    'original_icon': None,
    'original_name': 'Window',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'open window 3 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_window-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'window',
      'friendly_name': 'Air Conditioning Window',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_window',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 6 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Air Conditioning with fanlevel Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 6 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning with fanlevel Overlay',
      'termination': 'MANUAL',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 6 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning with fanlevel Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_window-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_window',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.WINDOW: 'window'>,
    'original_icon': None,
    'original_name': 'Window',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'open window 6 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_fanlevel_window-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'window',
      'friendly_name': 'Air Conditioning with fanlevel Window',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_fanlevel_window',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 5 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Air Conditioning with swing Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 5 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning with swing Overlay',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 5 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Air Conditioning with swing Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_window-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_window',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.WINDOW: 'window'>,
    'original_icon': None,
    'original_name': 'Window',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'open window 5 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.air_conditioning_with_swing_window-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'window',
      'friendly_name': 'Air Conditioning with swing Window',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_conditioning_with_swing_window',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.baseboard_heater_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Baseboard Heater Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.baseboard_heater_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_early_start-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.baseboard_heater_early_start',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Early start',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'early_start',
    'unique_id': 'early start 1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_early_start-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Baseboard Heater Early start',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.baseboard_heater_early_start',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.baseboard_heater_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Baseboard Heater Overlay',
      'termination': 'MANUAL',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.baseboard_heater_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.baseboard_heater_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Baseboard Heater Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.baseboard_heater_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_window-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.baseboard_heater_window',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.WINDOW: 'window'>,
    'original_icon': None,
    'original_name': 'Window',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'open window 1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.baseboard_heater_window-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'window',
      'friendly_name': 'Baseboard Heater Window',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.baseboard_heater_window',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.second_water_heater_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 4 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Second Water Heater Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.second_water_heater_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.second_water_heater_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 4 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Second Water Heater Overlay',
      'termination': 'TADO_MODE',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.second_water_heater_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.second_water_heater_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 4 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.second_water_heater_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Second Water Heater Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.second_water_heater_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.water_heater_connectivity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.water_heater_connectivity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connectivity',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'link 2 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.water_heater_connectivity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'Water Heater Connectivity',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.water_heater_connectivity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.water_heater_overlay-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.water_heater_overlay',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Overlay',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'overlay',
    'unique_id': 'overlay 2 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.water_heater_overlay-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Water Heater Overlay',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.water_heater_overlay',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[binary_sensor.water_heater_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.water_heater_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'power 2 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.water_heater_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Water Heater Power',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.water_heater_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.wr1_connection_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.wr1_connection_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connection state',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'connection_state',
    'unique_id': 'connection state WR1 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.wr1_connection_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'WR1 Connection state',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.wr1_connection_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[binary_sensor.wr4_connection_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.wr4_connection_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CONNECTIVITY: 'connectivity'>,
    'original_icon': None,
    'original_name': 'Connection state',
    'platform': 'tado',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'connection_state',
    'unique_id': 'connection state WR4 1',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[binary_sensor.wr4_connection_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'connectivity',
      'friendly_name': 'WR4 Connection state',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.wr4_connection_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
