# serializer version: 1
# name: test_coordinator_successful_setup
  TadoDataUpdateCoordinator(
    always_update=True,
    config_entry=ConfigEntrySnapshot({
      'data': dict({
        'password': 'mock',
        'username': 'mock',
      }),
      'disabled_by': None,
      'discovery_keys': dict({
      }),
      'domain': 'tado',
      'entry_id': <ANY>,
      'minor_version': 1,
      'options': dict({
        'fallback': 'NEXT_TIME_BLOCK',
      }),
      'pref_disable_new_entities': False,
      'pref_disable_polling': False,
      'source': 'user',
      'title': 'Mock Title',
      'unique_id': None,
      'version': 1,
    }),
    data=dict({
      'device': dict({
        'WR1': dict({
          'accessPointWiFi': dict({
            'ssid': 'tado8480',
          }),
          'characteristics': dict({
            'capabilities': list([
              'INSIDE_TEMPERATURE_MEASUREMENT',
              'IDENTIFY',
            ]),
          }),
          'commandTableUploadState': 'FINISHED',
          'connectionState': dict({
            'timestamp': '2020-03-23T18:30:07.377Z',
            'value': True,
          }),
          'currentFwVersion': '59.4',
          'deviceType': 'WR02',
          'serialNo': 'WR1',
          'shortSerialNo': 'WR1',
          'temperatureOffset': dict({
            'celsius': -1.0,
            'fahrenheit': -1.8,
          }),
        }),
      }),
      'geofence': dict({
        'presence': 'HOME',
        'presenceLocked': False,
      }),
      'mobile_device': dict({
        123456: dict({
          'deviceMetadata': dict({
            'locale': 'nl',
            'model': 'Samsung',
            'osVersion': '14',
            'platform': 'Android',
          }),
          'id': 123456,
          'name': 'Home',
          'settings': dict({
            'geoTrackingEnabled': False,
            'onDemandLogRetrievalEnabled': False,
            'pushNotifications': dict({
              'awayModeReminder': True,
              'energyIqReminder': False,
              'energySavingsReportReminder': True,
              'homeModeReminder': True,
              'incidentDetection': True,
              'lowBatteryReminder': True,
              'openWindowReminder': True,
            }),
            'specialOffersEnabled': False,
          }),
        }),
      }),
      'weather': dict({
        'outsideTemperature': dict({
          'celsius': 7.46,
          'fahrenheit': 45.43,
          'precision': dict({
            'celsius': 0.01,
            'fahrenheit': 0.01,
          }),
          'timestamp': '2020-12-22T08:13:13.652Z',
          'type': 'TEMPERATURE',
        }),
        'solarIntensity': dict({
          'percentage': 2.1,
          'timestamp': '2020-12-22T08:13:13.652Z',
          'type': 'PERCENTAGE',
        }),
        'weatherState': dict({
          'timestamp': '2020-12-22T08:13:13.652Z',
          'type': 'WEATHER_STATE',
          'value': 'FOGGY',
        }),
      }),
      'zone': dict({
        1: dict({
          'ac_power': None,
          'ac_power_timestamp': None,
          'available': True,
          'connection': None,
          'current_fan_level': None,
          'current_fan_speed': None,
          'current_horizontal_swing_mode': 'OFF',
          'current_humidity': 45.2,
          'current_humidity_timestamp': '2020-03-10T07:44:11.947Z',
          'current_hvac_action': 'IDLE',
          'current_hvac_mode': 'HEAT',
          'current_swing_mode': 'OFF',
          'current_temp': 20.65,
          'current_temp_timestamp': '2020-03-10T07:44:11.947Z',
          'current_vertical_swing_mode': 'OFF',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': 0.0,
          'heating_power_timestamp': '2020-03-10T07:47:45.978Z',
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': 'MANUAL',
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 20.5,
          'zone_id': 1,
        }),
        2: dict({
          'ac_power': None,
          'ac_power_timestamp': None,
          'available': True,
          'connection': None,
          'current_fan_level': None,
          'current_fan_speed': None,
          'current_horizontal_swing_mode': 'OFF',
          'current_humidity': None,
          'current_humidity_timestamp': None,
          'current_hvac_action': 'IDLE',
          'current_hvac_mode': 'SMART_SCHEDULE',
          'current_swing_mode': 'OFF',
          'current_temp': None,
          'current_temp_timestamp': None,
          'current_vertical_swing_mode': 'OFF',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': None,
          'heating_power_timestamp': None,
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': None,
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 65.0,
          'zone_id': 2,
        }),
        3: dict({
          'ac_power': 'ON',
          'ac_power_timestamp': '2020-03-05T04:01:07.162Z',
          'available': True,
          'connection': None,
          'current_fan_level': None,
          'current_fan_speed': 'AUTO',
          'current_horizontal_swing_mode': 'OFF',
          'current_humidity': 60.9,
          'current_humidity_timestamp': '2020-03-05T03:57:38.850Z',
          'current_hvac_action': 'COOLING',
          'current_hvac_mode': 'COOL',
          'current_swing_mode': 'OFF',
          'current_temp': 24.76,
          'current_temp_timestamp': '2020-03-05T03:57:38.850Z',
          'current_vertical_swing_mode': 'OFF',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': None,
          'heating_power_timestamp': None,
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': 'TADO_MODE',
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 17.78,
          'zone_id': 3,
        }),
        4: dict({
          'ac_power': None,
          'ac_power_timestamp': None,
          'available': True,
          'connection': None,
          'current_fan_level': None,
          'current_fan_speed': None,
          'current_horizontal_swing_mode': 'OFF',
          'current_humidity': None,
          'current_humidity_timestamp': None,
          'current_hvac_action': 'IDLE',
          'current_hvac_mode': 'HEATING',
          'current_swing_mode': 'OFF',
          'current_temp': None,
          'current_temp_timestamp': None,
          'current_vertical_swing_mode': 'OFF',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': None,
          'heating_power_timestamp': None,
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': 'TADO_MODE',
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 30.0,
          'zone_id': 4,
        }),
        5: dict({
          'ac_power': 'ON',
          'ac_power_timestamp': '2020-03-27T23:02:22.260Z',
          'available': True,
          'connection': None,
          'current_fan_level': None,
          'current_fan_speed': 'AUTO',
          'current_horizontal_swing_mode': 'OFF',
          'current_humidity': 42.3,
          'current_humidity_timestamp': '2020-03-28T02:09:27.830Z',
          'current_hvac_action': 'HEATING',
          'current_hvac_mode': 'SMART_SCHEDULE',
          'current_swing_mode': 'ON',
          'current_temp': 20.88,
          'current_temp_timestamp': '2020-03-28T02:09:27.830Z',
          'current_vertical_swing_mode': 'OFF',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': None,
          'heating_power_timestamp': None,
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': None,
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 20.0,
          'zone_id': 5,
        }),
        6: dict({
          'ac_power': 'ON',
          'ac_power_timestamp': '2022-07-13T18: 06: 58.183Z',
          'available': True,
          'connection': None,
          'current_fan_level': 'LEVEL3',
          'current_fan_speed': 'AUTO',
          'current_horizontal_swing_mode': 'ON',
          'current_humidity': 70.9,
          'current_humidity_timestamp': '2024-06-28T22: 23: 15.679Z',
          'current_hvac_action': 'HEATING',
          'current_hvac_mode': 'HEAT',
          'current_swing_mode': 'OFF',
          'current_temp': 24.3,
          'current_temp_timestamp': '2024-06-28T22: 23: 15.679Z',
          'current_vertical_swing_mode': 'ON',
          'default_overlay_termination_duration': None,
          'default_overlay_termination_type': 'MANUAL',
          'heating_power': None,
          'heating_power_percentage': None,
          'heating_power_timestamp': None,
          'is_away': False,
          'link': 'ONLINE',
          'open_window': False,
          'open_window_attr': dict({
          }),
          'open_window_detected': False,
          'overlay_termination_timestamp': None,
          'overlay_termination_type': 'MANUAL',
          'power': 'ON',
          'precision': 0.1,
          'preparation': False,
          'tado_mode': 'HOME',
          'target_temp': 25.0,
          'zone_id': 6,
        }),
      }),
    }),
    devices=list([
      dict({
        'accessPointWiFi': dict({
          'ssid': 'tado8480',
        }),
        'characteristics': dict({
          'capabilities': list([
            'INSIDE_TEMPERATURE_MEASUREMENT',
            'IDENTIFY',
          ]),
        }),
        'commandTableUploadState': 'FINISHED',
        'connectionState': dict({
          'timestamp': '2020-03-23T18:30:07.377Z',
          'value': True,
        }),
        'currentFwVersion': '59.4',
        'deviceType': 'WR02',
        'serialNo': 'WR1',
        'shortSerialNo': 'WR1',
      }),
    ]),
    fallback='NEXT_TIME_BLOCK',
    hass=<HomeAssistant RUNNING>,
    home_id=1,
    home_name='home name',
    last_exception=None,
    last_update_success=True,
    logger=<Logger homeassistant.components.tado.coordinator (DEBUG)>,
    name='tado',
    setup_method=None,
    tado=Tado(
    ),
    update_interval=datetime.timedelta(seconds=300),
    update_method=None,
    zones=list([
      dict({
        'dateCreated': '2019-11-28T15:58:48.968Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2020-03-23T18:30:07.377Z',
              'value': True,
            }),
            'currentFwVersion': '59.4',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR4',
            'shortSerialNo': 'WR4',
          }),
        ]),
        'id': 1,
        'name': 'Baseboard Heater',
        'reportAvailable': False,
        'supportsDazzle': True,
        'type': 'HEATING',
      }),
      dict({
        'dateCreated': '2019-11-28T15:58:48.968Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2020-03-23T18:30:07.377Z',
              'value': True,
            }),
            'currentFwVersion': '59.4',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR4',
            'shortSerialNo': 'WR4',
          }),
        ]),
        'id': 2,
        'name': 'Water Heater',
        'reportAvailable': False,
        'supportsDazzle': True,
        'type': 'HOT_WATER',
      }),
      dict({
        'dateCreated': '2019-11-28T15:58:48.968Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2020-03-23T18:30:07.377Z',
              'value': True,
            }),
            'currentFwVersion': '59.4',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR4',
            'shortSerialNo': 'WR4',
          }),
        ]),
        'id': 3,
        'name': 'Air Conditioning',
        'openWindowDetection': dict({
          'enabled': True,
          'supported': True,
          'timeoutInSeconds': 900,
        }),
        'reportAvailable': False,
        'supportsDazzle': True,
        'type': 'AIR_CONDITIONING',
      }),
      dict({
        'dateCreated': '2019-11-28T15:58:48.968Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2020-03-23T18:30:07.377Z',
              'value': True,
            }),
            'currentFwVersion': '59.4',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR4',
            'shortSerialNo': 'WR4',
          }),
        ]),
        'id': 4,
        'name': 'Second Water Heater',
        'reportAvailable': False,
        'supportsDazzle': True,
        'type': 'HOT_WATER',
      }),
      dict({
        'dateCreated': '2019-11-28T15:58:48.968Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2020-03-23T18:30:07.377Z',
              'value': True,
            }),
            'currentFwVersion': '59.4',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR4',
            'shortSerialNo': 'WR4',
          }),
        ]),
        'id': 5,
        'name': 'Air Conditioning with swing',
        'openWindowDetection': dict({
          'enabled': True,
          'supported': True,
          'timeoutInSeconds': 900,
        }),
        'reportAvailable': False,
        'supportsDazzle': True,
        'type': 'AIR_CONDITIONING',
      }),
      dict({
        'dateCreated': '2022-07-13T18: 06: 58.183Z',
        'dazzleEnabled': True,
        'dazzleMode': dict({
          'enabled': True,
          'supported': True,
        }),
        'deviceTypes': list([
          'WR02',
        ]),
        'devices': list([
          dict({
            'accessPointWiFi': dict({
              'ssid': 'tado8480',
            }),
            'characteristics': dict({
              'capabilities': list([
                'INSIDE_TEMPERATURE_MEASUREMENT',
                'IDENTIFY',
              ]),
            }),
            'commandTableUploadState': 'FINISHED',
            'connectionState': dict({
              'timestamp': '2024-06-28T21: 04: 23.463Z',
              'value': True,
            }),
            'currentFwVersion': '118.7',
            'deviceType': 'WR02',
            'duties': list([
              'ZONE_UI',
              'ZONE_DRIVER',
              'ZONE_LEADER',
            ]),
            'serialNo': 'WR5',
            'shortSerialNo': 'WR5',
          }),
        ]),
        'id': 6,
        'name': 'Air Conditioning with fanlevel',
        'openWindowDetection': dict({
          'enabled': True,
          'supported': True,
          'timeoutInSeconds': 900,
        }),
        'reportAvailable': False,
        'showScheduleSetup': False,
        'supportsDazzle': True,
        'type': 'AIR_CONDITIONING',
      }),
    ]),
  )
# ---
