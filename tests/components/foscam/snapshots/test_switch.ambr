# serializer version: 1
# name: test_entities[switch.mock_title_flip-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_flip',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Flip',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'flip_switch',
    'unique_id': '123ABC_is_flip',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_flip-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Flip',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_flip',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[switch.mock_title_infrared_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_infrared_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Infrared mode',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ir_switch',
    'unique_id': '123ABC_is_open_ir',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_infrared_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Infrared mode',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_infrared_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[switch.mock_title_light-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_light',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Light',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'turn_off_light_switch',
    'unique_id': '123ABC_is_turn_off_light',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_light-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Light',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_light',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[switch.mock_title_mirror-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_mirror',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Mirror',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'mirror_switch',
    'unique_id': '123ABC_is_mirror',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_mirror-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Mirror',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_mirror',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[switch.mock_title_siren_alarm-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_siren_alarm',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Siren alarm',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'siren_alarm_switch',
    'unique_id': '123ABC_is_siren_alarm',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_siren_alarm-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Siren alarm',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_siren_alarm',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entities[switch.mock_title_sleep_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_sleep_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sleep mode',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'sleep_switch',
    'unique_id': '123ABC_sleep_switch',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_sleep_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Sleep mode',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_sleep_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[switch.mock_title_volume_muted-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_volume_muted',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Volume muted',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'turn_off_volume_switch',
    'unique_id': '123ABC_is_turn_off_volume',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_volume_muted-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Volume muted',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_volume_muted',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entities[switch.mock_title_white_light-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.mock_title_white_light',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'White light',
    'platform': 'foscam',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'white_light_switch',
    'unique_id': '123ABC_is_open_white_light',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[switch.mock_title_white_light-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title White light',
    }),
    'context': <ANY>,
    'entity_id': 'switch.mock_title_white_light',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
