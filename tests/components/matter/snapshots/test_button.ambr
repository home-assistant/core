# serializer version: 1
# name: test_buttons[air_purifier][button.air_purifier_identify_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_identify_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (1)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Air Purifier Identify (1)',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_identify_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_identify_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (2)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-2-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Air Purifier Identify (2)',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_identify_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_identify_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (3)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-3-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Air Purifier Identify (3)',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_identify_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_identify_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (4)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-4-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Air Purifier Identify (4)',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_identify_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_identify_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (5)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-5-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_identify_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Air Purifier Identify (5)',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_identify_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_reset_filter_condition-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.air_purifier_reset_filter_condition',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Reset filter condition',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'reset_filter_condition',
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-1-HepaFilterMonitoringResetButton-113-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_reset_filter_condition-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier Reset filter condition',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_reset_filter_condition',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_reset_filter_condition_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.air_purifier_reset_filter_condition_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Reset filter condition',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'reset_filter_condition',
    'unique_id': '00000000000004D2-000000000000008F-MatterNodeDevice-1-ActivatedCarbonFilterMonitoringResetButton-114-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_purifier][button.air_purifier_reset_filter_condition_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier Reset filter condition',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_reset_filter_condition_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[air_quality_sensor][button.lightfi_aq1_air_quality_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.lightfi_aq1_air_quality_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[air_quality_sensor][button.lightfi_aq1_air_quality_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'lightfi-aq1-air-quality-sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.lightfi_aq1_air_quality_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[color_temperature_light][button.mock_color_temperature_light_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_color_temperature_light_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[color_temperature_light][button.mock_color_temperature_light_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Color Temperature Light Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_color_temperature_light_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[dimmable_plugin_unit][button.dimmable_plugin_unit_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.dimmable_plugin_unit_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000024-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[dimmable_plugin_unit][button.dimmable_plugin_unit_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Dimmable Plugin Unit Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.dimmable_plugin_unit_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[door_lock][button.mock_door_lock_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_door_lock_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[door_lock][button.mock_door_lock_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Door Lock Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_door_lock_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[door_lock_with_unbolt][button.mock_door_lock_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_door_lock_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[door_lock_with_unbolt][button.mock_door_lock_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Door Lock Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_door_lock_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_contact_sensor][button.eve_door_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_door_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_contact_sensor][button.eve_door_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Door Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_door_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_energy_plug][button.eve_energy_plug_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_energy_plug_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000053-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_energy_plug][button.eve_energy_plug_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Energy Plug Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_energy_plug_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_energy_plug_patched][button.eve_energy_plug_patched_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_energy_plug_patched_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000B7-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_energy_plug_patched][button.eve_energy_plug_patched_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Energy Plug Patched Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_energy_plug_patched_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_thermo][button.eve_thermo_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_thermo_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000021-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_thermo][button.eve_thermo_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Thermo Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_thermo_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_weather_sensor][button.eve_weather_identify_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_weather_identify_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (1)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000001D-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_weather_sensor][button.eve_weather_identify_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Weather Identify (1)',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_weather_identify_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[eve_weather_sensor][button.eve_weather_identify_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.eve_weather_identify_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (2)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000001D-MatterNodeDevice-2-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[eve_weather_sensor][button.eve_weather_identify_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Eve Weather Identify (2)',
    }),
    'context': <ANY>,
    'entity_id': 'button.eve_weather_identify_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[extended_color_light][button.mock_extended_color_light_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_extended_color_light_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[extended_color_light][button.mock_extended_color_light_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Extended Color Light Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_extended_color_light_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[fan][button.mocked_fan_switch_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mocked_fan_switch_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000001D-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[fan][button.mocked_fan_switch_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mocked Fan Switch Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mocked_fan_switch_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[flow_sensor][button.mock_flow_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_flow_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[flow_sensor][button.mock_flow_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Flow Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_flow_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[generic_switch][button.mock_generic_switch_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_generic_switch_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[generic_switch][button.mock_generic_switch_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Generic Switch Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_generic_switch_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[generic_switch_multi][button.mock_generic_switch_fancy_button-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_generic_switch_fancy_button',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Fancy Button',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-2-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[generic_switch_multi][button.mock_generic_switch_fancy_button-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Generic Switch Fancy Button',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_generic_switch_fancy_button',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[generic_switch_multi][button.mock_generic_switch_identify_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_generic_switch_identify_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (1)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[generic_switch_multi][button.mock_generic_switch_identify_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Generic Switch Identify (1)',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_generic_switch_identify_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[humidity_sensor][button.mock_humidity_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_humidity_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[humidity_sensor][button.mock_humidity_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Humidity Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_humidity_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[light_sensor][button.mock_light_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_light_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[light_sensor][button.mock_light_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Light Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_light_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.microwave_oven_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000009D-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Microwave Oven Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.microwave_oven_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_pause-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.microwave_oven_pause',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Pause',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pause',
    'unique_id': '00000000000004D2-000000000000009D-MatterNodeDevice-1-OperationalStatePauseButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_pause-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Microwave Oven Pause',
    }),
    'context': <ANY>,
    'entity_id': 'button.microwave_oven_pause',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_resume-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.microwave_oven_resume',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Resume',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'resume',
    'unique_id': '00000000000004D2-000000000000009D-MatterNodeDevice-1-OperationalStateResumeButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_resume-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Microwave Oven Resume',
    }),
    'context': <ANY>,
    'entity_id': 'button.microwave_oven_resume',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_start-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.microwave_oven_start',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Start',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start',
    'unique_id': '00000000000004D2-000000000000009D-MatterNodeDevice-1-OperationalStateStartButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_start-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Microwave Oven Start',
    }),
    'context': <ANY>,
    'entity_id': 'button.microwave_oven_start',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_stop-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.microwave_oven_stop',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Stop',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'stop',
    'unique_id': '00000000000004D2-000000000000009D-MatterNodeDevice-1-OperationalStateStopButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[microwave_oven][button.microwave_oven_stop-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Microwave Oven Stop',
    }),
    'context': <ANY>,
    'entity_id': 'button.microwave_oven_stop',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_config-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_config',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Config',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-5-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_config-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Config',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_config',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_down-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_down',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Down',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-4-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_down-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Down',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_down',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_identify_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (1)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Identify (1)',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_identify_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_identify_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (2)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-2-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Identify (2)',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_identify_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_6-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_identify_6',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (6)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-6-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_identify_6-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Identify (6)',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_identify_6',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_up-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.inovelli_up',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Up',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-00000000000000C5-MatterNodeDevice-3-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[multi_endpoint_light][button.inovelli_up-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Inovelli Up',
    }),
    'context': <ANY>,
    'entity_id': 'button.inovelli_up',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[occupancy_sensor][button.mock_occupancy_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_occupancy_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[occupancy_sensor][button.mock_occupancy_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Occupancy Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_occupancy_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[on_off_plugin_unit][button.mock_onoffpluginunit_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_onoffpluginunit_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[on_off_plugin_unit][button.mock_onoffpluginunit_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock OnOffPluginUnit Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_onoffpluginunit_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[onoff_light][button.mock_onoff_light_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_onoff_light_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[onoff_light][button.mock_onoff_light_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock OnOff Light Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_onoff_light_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[onoff_light_alt_name][button.mock_onoff_light_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_onoff_light_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[onoff_light_alt_name][button.mock_onoff_light_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock OnOff Light Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_onoff_light_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[onoff_light_no_name][button.mock_light_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_light_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[onoff_light_no_name][button.mock_light_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Light Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_light_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[onoff_light_with_levelcontrol_present][button.d215s_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.d215s_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000008-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[onoff_light_with_levelcontrol_present][button.d215s_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'D215S Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.d215s_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[pressure_sensor][button.mock_pressure_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_pressure_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[pressure_sensor][button.mock_pressure_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Pressure Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_pressure_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[room_airconditioner][button.room_airconditioner_identify_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.room_airconditioner_identify_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (1)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000024-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[room_airconditioner][button.room_airconditioner_identify_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Room AirConditioner Identify (1)',
    }),
    'context': <ANY>,
    'entity_id': 'button.room_airconditioner_identify_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[room_airconditioner][button.room_airconditioner_identify_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.room_airconditioner_identify_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify (2)',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000024-MatterNodeDevice-2-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[room_airconditioner][button.room_airconditioner_identify_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Room AirConditioner Identify (2)',
    }),
    'context': <ANY>,
    'entity_id': 'button.room_airconditioner_identify_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.dishwasher_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000036-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Dishwasher Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.dishwasher_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_pause-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.dishwasher_pause',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Pause',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pause',
    'unique_id': '00000000000004D2-0000000000000036-MatterNodeDevice-1-OperationalStatePauseButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_pause-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dishwasher Pause',
    }),
    'context': <ANY>,
    'entity_id': 'button.dishwasher_pause',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_start-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.dishwasher_start',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Start',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'start',
    'unique_id': '00000000000004D2-0000000000000036-MatterNodeDevice-1-OperationalStateStartButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_start-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dishwasher Start',
    }),
    'context': <ANY>,
    'entity_id': 'button.dishwasher_start',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_stop-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.dishwasher_stop',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Stop',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'stop',
    'unique_id': '00000000000004D2-0000000000000036-MatterNodeDevice-1-OperationalStateStopButton-96-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[silabs_dishwasher][button.dishwasher_stop-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dishwasher Stop',
    }),
    'context': <ANY>,
    'entity_id': 'button.dishwasher_stop',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[smoke_detector][button.smoke_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.smoke_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[smoke_detector][button.smoke_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Smoke sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.smoke_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[switch_unit][button.mock_switchunit_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_switchunit_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[switch_unit][button.mock_switchunit_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock SwitchUnit Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_switchunit_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[temperature_sensor][button.mock_temperature_sensor_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_temperature_sensor_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[temperature_sensor][button.mock_temperature_sensor_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Temperature Sensor Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_temperature_sensor_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[thermostat][button.longan_link_hvac_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.longan_link_hvac_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000004-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[thermostat][button.longan_link_hvac_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Longan link HVAC Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.longan_link_hvac_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[valve][button.valve_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.valve_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-000000000000004B-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[valve][button.valve_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Valve Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.valve_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[window_covering_full][button.mock_full_window_covering_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_full_window_covering_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000032-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[window_covering_full][button.mock_full_window_covering_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Full Window Covering Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_full_window_covering_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[window_covering_lift][button.mock_lift_window_covering_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_lift_window_covering_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000032-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[window_covering_lift][button.mock_lift_window_covering_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Lift Window Covering Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_lift_window_covering_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[window_covering_pa_lift][button.longan_link_wncv_da01_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.longan_link_wncv_da01_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000001-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[window_covering_pa_lift][button.longan_link_wncv_da01_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Longan link WNCV DA01 Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.longan_link_wncv_da01_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[window_covering_pa_tilt][button.mock_pa_tilt_window_covering_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_pa_tilt_window_covering_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000032-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[window_covering_pa_tilt][button.mock_pa_tilt_window_covering_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock PA Tilt Window Covering Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_pa_tilt_window_covering_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[window_covering_tilt][button.mock_tilt_window_covering_identify-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.mock_tilt_window_covering_identify',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <ButtonDeviceClass.IDENTIFY: 'identify'>,
    'original_icon': None,
    'original_name': 'Identify',
    'platform': 'matter',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000000000004D2-0000000000000032-MatterNodeDevice-1-IdentifyButton-3-65529',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[window_covering_tilt][button.mock_tilt_window_covering_identify-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'identify',
      'friendly_name': 'Mock Tilt Window Covering Identify',
    }),
    'context': <ANY>,
    'entity_id': 'button.mock_tilt_window_covering_identify',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
