# serializer version: 1
# name: test_all_sensors[sensor.pool_device_orp-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pool_device_orp',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'ORP',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'orp',
    'unique_id': 'TEST123456789_orp',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pool Device ORP',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '718',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_calibration_offset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'ORP calibration offset',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'orp_calibration_offset',
    'unique_id': 'TEST123456789_orp_calibration_offset',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pool Device ORP calibration offset',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_calibration_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_slope-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_calibration_slope',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'ORP calibration slope',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'orp_calibration_slope',
    'unique_id': 'TEST123456789_orp_calibration_slope',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_slope-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pool Device ORP calibration slope',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_calibration_slope',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.96',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'reference',
        '1_point',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_calibration_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'ORP calibration type',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'orp_calibration_type',
    'unique_id': 'TEST123456789_orp_calibration_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_calibration_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device ORP calibration type',
      'options': list([
        'off',
        'reference',
        '1_point',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_calibration_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_point',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_dosing_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'low',
        'high',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_dosing_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'ORP dosing type',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'orp_type_dosing',
    'unique_id': 'TEST123456789_orp_type_dosing',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_dosing_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device ORP dosing type',
      'options': list([
        'low',
        'high',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_dosing_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'low',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_overfeed_alert_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_overfeed_alert_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'ORP overfeed alert time',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ofa_orp_value',
    'unique_id': 'TEST123456789_ofa_orp_value',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_overfeed_alert_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Pool Device ORP overfeed alert time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_overfeed_alert_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_peristaltic_dosing-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'proportional',
        'on_off',
        'timed',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_orp_peristaltic_dosing',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'ORP peristaltic dosing',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'peristaltic_orp_dosing',
    'unique_id': 'TEST123456789_peristaltic_orp_dosing',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_orp_peristaltic_dosing-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device ORP peristaltic dosing',
      'options': list([
        'off',
        'proportional',
        'on_off',
        'timed',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_orp_peristaltic_dosing',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'proportional',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pool_device_ph',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PH: 'ph'>,
    'original_icon': None,
    'original_name': 'pH',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'TEST123456789_ph',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'ph',
      'friendly_name': 'Pool Device pH',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.8',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_calibration_offset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'pH calibration offset',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ph_calibration_offset',
    'unique_id': 'TEST123456789_ph_calibration_offset',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pool Device pH calibration offset',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_calibration_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_slope-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_calibration_slope',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'pH calibration slope',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ph_calibration_slope',
    'unique_id': 'TEST123456789_ph_calibration_slope',
    'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_slope-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Pool Device pH calibration slope',
      'unit_of_measurement': <UnitOfElectricPotential.MILLIVOLT: 'mV'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_calibration_slope',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '57.34',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'off',
        'reference',
        '1_point',
        '2_points',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_calibration_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'pH calibration type',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ph_calibration_type',
    'unique_id': 'TEST123456789_ph_calibration_type',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_calibration_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device pH calibration type',
      'options': list([
        'off',
        'reference',
        '1_point',
        '2_points',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_calibration_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2_points',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_dosing_type-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'alcalyne',
        'acid',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_dosing_type',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'pH dosing type',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ph_type_dosing',
    'unique_id': 'TEST123456789_ph_type_dosing',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_dosing_type-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device pH dosing type',
      'options': list([
        'alcalyne',
        'acid',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_dosing_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'alcalyne',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_overfeed_alert_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_overfeed_alert_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'pH overfeed alert time',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'ofa_ph_value',
    'unique_id': 'TEST123456789_ofa_ph_value',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_overfeed_alert_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Pool Device pH overfeed alert time',
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_overfeed_alert_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_peristaltic_dosing-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'proportional',
        'on_off',
        'timed',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.pool_device_ph_peristaltic_dosing',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'pH peristaltic dosing',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'peristaltic_ph_dosing',
    'unique_id': 'TEST123456789_peristaltic_ph_dosing',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.pool_device_ph_peristaltic_dosing-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Pool Device pH peristaltic dosing',
      'options': list([
        'proportional',
        'on_off',
        'timed',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_ph_peristaltic_dosing',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'proportional',
  })
# ---
# name: test_all_sensors[sensor.pool_device_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.pool_device_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'pooldose',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'TEST123456789_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.pool_device_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Pool Device Temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.pool_device_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
