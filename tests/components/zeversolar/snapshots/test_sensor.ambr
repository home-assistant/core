# serializer version: 1
# name: test_sensors
  ConfigEntrySnapshot({
    'data': dict({
      'host': 'zeversolar-fake-host',
      'port': 10200,
    }),
    'disabled_by': None,
    'domain': 'zeversolar',
    'entry_id': <ANY>,
    'minor_version': 1,
    'options': dict({
    }),
    'pref_disable_new_entities': False,
    'pref_disable_polling': False,
    'source': 'user',
    'title': 'Mock Title',
    'unique_id': None,
    'version': 1,
  })
# ---
# name: test_sensors[sensor.zeversolar_sensor_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.zeversolar_sensor_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Energy today',
    'platform': 'zeversolar',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'energy_today',
    'unique_id': '123456778_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.zeversolar_sensor_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Zeversolar Sensor Energy today',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.zeversolar_sensor_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '123.4',
  })
# ---
# name: test_sensors[sensor.zeversolar_sensor_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.zeversolar_sensor_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'zeversolar',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pac',
    'unique_id': '123456778_pac',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.zeversolar_sensor_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Zeversolar Sensor Power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.zeversolar_sensor_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1234',
  })
# ---
