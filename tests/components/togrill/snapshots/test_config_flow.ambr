# serializer version: 1
# name: test_bluetooth
  FlowResultSnapshot({
    'context': dict({
      'confirm_only': True,
      'discovery_key': dict({
        'domain': 'bluetooth',
        'key': '00000000-0000-0000-0000-000000000001',
        'version': 1,
      }),
      'source': 'bluetooth',
      'title_placeholders': dict({
        'name': 'Pro-05',
      }),
      'unique_id': '00000000-0000-0000-0000-000000000001',
    }),
    'flow_id': <ANY>,
    'handler': 'togrill',
    'step_id': 'bluetooth_confirm',
  })
# ---
# name: test_bluetooth.1
  FlowResultSnapshot({
    'context': dict({
      'confirm_only': True,
      'discovery_key': dict({
        'domain': 'bluetooth',
        'key': '00000000-0000-0000-0000-000000000001',
        'version': 1,
      }),
      'source': 'bluetooth',
      'title_placeholders': dict({
        'name': 'Pro-05',
      }),
      'unique_id': '00000000-0000-0000-0000-000000000001',
    }),
    'data': dict({
      'address': '00000000-0000-0000-0000-000000000001',
      'model': 'Pro-05',
      'probe_count': 0,
    }),
    'description': None,
    'description_placeholders': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'minor_version': 1,
    'options': dict({
    }),
    'result': ConfigEntrySnapshot({
      'data': dict({
        'address': '00000000-0000-0000-0000-000000000001',
        'model': 'Pro-05',
        'probe_count': 0,
      }),
      'disabled_by': None,
      'discovery_keys': dict({
        'bluetooth': tuple(
          dict({
            'domain': 'bluetooth',
            'key': '00000000-0000-0000-0000-000000000001',
            'version': 1,
          }),
        ),
      }),
      'domain': 'togrill',
      'entry_id': <ANY>,
      'minor_version': 1,
      'options': dict({
      }),
      'pref_disable_new_entities': False,
      'pref_disable_polling': False,
      'source': 'bluetooth',
      'subentries': list([
      ]),
      'title': 'Pro-05',
      'unique_id': '00000000-0000-0000-0000-000000000001',
      'version': 1,
    }),
    'subentries': tuple(
    ),
    'title': 'Pro-05',
    'type': <FlowResultType.CREATE_ENTRY: 'create_entry'>,
    'version': 1,
  })
# ---
# name: test_failed_connect
  FlowResultSnapshot({
    'data_schema': list([
      dict({
        'name': 'address',
        'options': list([
          tuple(
            '00000000-0000-0000-0000-000000000001',
            'Pro-05',
          ),
        ]),
        'required': True,
        'type': 'select',
      }),
    ]),
    'description_placeholders': None,
    'errors': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'last_step': None,
    'preview': None,
    'step_id': 'user',
    'type': <FlowResultType.FORM: 'form'>,
  })
# ---
# name: test_failed_connect.1
  FlowResultSnapshot({
    'description_placeholders': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'reason': 'failed_to_read_config',
    'type': <FlowResultType.ABORT: 'abort'>,
  })
# ---
# name: test_failed_request
  FlowResultSnapshot({
    'data_schema': list([
      dict({
        'name': 'address',
        'options': list([
          tuple(
            '00000000-0000-0000-0000-000000000001',
            'Pro-05',
          ),
        ]),
        'required': True,
        'type': 'select',
      }),
    ]),
    'description_placeholders': None,
    'errors': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'last_step': None,
    'preview': None,
    'step_id': 'user',
    'type': <FlowResultType.FORM: 'form'>,
  })
# ---
# name: test_failed_request.1
  FlowResultSnapshot({
    'description_placeholders': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'reason': 'failed_to_read_config',
    'type': <FlowResultType.ABORT: 'abort'>,
  })
# ---
# name: test_no_devices
  FlowResultSnapshot({
    'description_placeholders': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'reason': 'no_devices_found',
    'type': <FlowResultType.ABORT: 'abort'>,
  })
# ---
# name: test_user_selection
  FlowResultSnapshot({
    'data_schema': list([
      dict({
        'name': 'address',
        'options': list([
          tuple(
            '00000000-0000-0000-0000-000000000001',
            'Pro-05',
          ),
        ]),
        'required': True,
        'type': 'select',
      }),
    ]),
    'description_placeholders': None,
    'errors': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'last_step': None,
    'preview': None,
    'step_id': 'user',
    'type': <FlowResultType.FORM: 'form'>,
  })
# ---
# name: test_user_selection.1
  FlowResultSnapshot({
    'context': dict({
      'source': 'user',
      'unique_id': '00000000-0000-0000-0000-000000000001',
    }),
    'data': dict({
      'address': '00000000-0000-0000-0000-000000000001',
      'model': 'Pro-05',
      'probe_count': 0,
    }),
    'description': None,
    'description_placeholders': None,
    'flow_id': <ANY>,
    'handler': 'togrill',
    'minor_version': 1,
    'options': dict({
    }),
    'result': ConfigEntrySnapshot({
      'data': dict({
        'address': '00000000-0000-0000-0000-000000000001',
        'model': 'Pro-05',
        'probe_count': 0,
      }),
      'disabled_by': None,
      'discovery_keys': dict({
      }),
      'domain': 'togrill',
      'entry_id': <ANY>,
      'minor_version': 1,
      'options': dict({
      }),
      'pref_disable_new_entities': False,
      'pref_disable_polling': False,
      'source': 'user',
      'subentries': list([
      ]),
      'title': 'Pro-05',
      'unique_id': '00000000-0000-0000-0000-000000000001',
      'version': 1,
    }),
    'subentries': tuple(
    ),
    'title': 'Pro-05',
    'type': <FlowResultType.CREATE_ENTRY: 'create_entry'>,
    'version': 1,
  })
# ---
