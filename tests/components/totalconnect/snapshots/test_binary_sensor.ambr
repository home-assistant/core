# serializer version: 1
# name: test_entity_registry[binary_sensor.fire-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.fire',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.SMOKE: 'smoke'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_2_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.fire-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'smoke',
      'friendly_name': 'Fire',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '2',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.fire',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.fire_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.fire_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_2_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.fire_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Fire Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '2',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.fire_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entity_registry[binary_sensor.fire_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.fire_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_2_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.fire_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Fire Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '2',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.fire_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.gas-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.gas',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.GAS: 'gas'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_3_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.gas-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'gas',
      'friendly_name': 'Gas',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '3',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gas',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.gas_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gas_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_3_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.gas_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Gas Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '3',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gas_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.gas_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gas_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_3_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.gas_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Gas Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '3',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gas_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entity_registry[binary_sensor.medical-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.medical',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.SAFETY: 'safety'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_5_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.medical-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'safety',
      'friendly_name': 'Medical',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '5',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.medical',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.motion-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.motion',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.MOTION: 'motion'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_4_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.motion-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'motion',
      'friendly_name': 'Motion',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '4',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.motion',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.motion_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.motion_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_4_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.motion_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Motion Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '4',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.motion_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.motion_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.motion_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_4_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.motion_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Motion Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '4',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.motion_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.security-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.security',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.DOOR: 'door'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_1_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.security-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'door',
      'friendly_name': 'Security',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '1',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.security',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_entity_registry[binary_sensor.security_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.security_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_1_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.security_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Security Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '1',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.security_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.security_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.security_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_1_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.security_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Security Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '1',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.security_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_7_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Temperature',
      'location_id': 123456,
      'partition': '1',
      'zone_id': 7,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.temperature_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.temperature_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_7_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.temperature_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Temperature Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': 7,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.temperature_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.temperature_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.temperature_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_7_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.temperature_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Temperature Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': 7,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.temperature_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.test_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'test Battery',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_carbon_monoxide-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.test_carbon_monoxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.CO: 'carbon_monoxide'>,
    'original_icon': None,
    'original_name': 'Carbon monoxide',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_carbon_monoxide',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_carbon_monoxide-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_monoxide',
      'friendly_name': 'test Carbon monoxide',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_carbon_monoxide',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_police_emergency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.test_police_emergency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Police emergency',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'police',
    'unique_id': '123456_police',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_police_emergency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test Police emergency',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_police_emergency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.test_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Power',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_power',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'test Power',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_smoke-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.test_smoke',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.SMOKE: 'smoke'>,
    'original_icon': None,
    'original_name': 'Smoke',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_smoke',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_smoke-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'smoke',
      'friendly_name': 'test Smoke',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_smoke',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.test_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.test_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.test_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'test Tamper',
      'location_id': 123456,
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.test_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.unknown-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': None,
    'entity_id': 'binary_sensor.unknown',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.DOOR: 'door'>,
    'original_icon': None,
    'original_name': None,
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_6_zone',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.unknown-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'door',
      'friendly_name': 'Unknown',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '6',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.unknown',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.unknown_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.unknown_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': None,
    'original_name': 'Battery',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_6_low_battery',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.unknown_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Unknown Battery',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '6',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.unknown_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity_registry[binary_sensor.unknown_tamper-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.unknown_tamper',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.TAMPER: 'tamper'>,
    'original_icon': None,
    'original_name': 'Tamper',
    'platform': 'totalconnect',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '123456_6_tamper',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity_registry[binary_sensor.unknown_tamper-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'tamper',
      'friendly_name': 'Unknown Tamper',
      'location_id': 123456,
      'partition': '1',
      'zone_id': '6',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.unknown_tamper',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
