{
  "config": {
    "step": {
      "user": {
        "data": {
          "url": "[%key:common::config_flow::data::url%]",
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "url": "The URL of the Overseerr instance.",
          "api_key": "The API key of the Overseerr instance."
        }
      }
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_service%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_host": "The provided URL is not a valid host."
    }
  },
  "entity": {
    "sensor": {
      "total_requests": {
        "name": "Total requests"
      },
      "movie_requests": {
        "name": "Movie requests"
      },
      "tv_requests": {
        "name": "TV requests"
      },
      "pending_requests": {
        "name": "Pending requests"
      },
      "declined_requests": {
        "name": "Declined requests"
      },
      "processing_requests": {
        "name": "Processing requests"
      },
      "available_requests": {
        "name": "Available requests"
      }
    }
  },
  "exceptions": {
    "connection_error": {
      "message": "Error connecting to the Overseerr instance: {error}"
    },
    "not_loaded": {
      "message": "{target} is not loaded."
    },
    "integration_not_found": {
      "message": "Integration \"{target}\" not found in registry."
    }
  },
  "services": {
    "get_requests": {
      "name": "Get requests",
      "description": "Get media requests from Overseerr.",
      "fields": {
        "config_entry_id": {
          "name": "Overseerr instance",
          "description": "The Overseerr instance to get requests from."
        },
        "status": {
          "name": "Request status",
          "description": "Filter the requests by status."
        },
        "sort_order": {
          "name": "Sort order",
          "description": "Sort the requests by added or modified date."
        },
        "requested_by": {
          "name": "Requested by",
          "description": "Filter the requests by the user id that requested them."
        }
      }
    }
  },
  "selector": {
    "request_status": {
      "options": {
        "approved": "Approved",
        "pending": "Pending",
        "available": "Available",
        "processing": "Processing",
        "unavailable": "Unavailable",
        "failed": "Failed"
      }
    },
    "request_sort_order": {
      "options": {
        "added": "Added",
        "modified": "Modified"
      }
    }
  }
}
