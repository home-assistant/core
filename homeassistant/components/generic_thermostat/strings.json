{
  "title": "Generic thermostat",
  "config": {
    "step": {
      "user": {
        "title": "Create generic thermostat",
        "description": "Create a climate entity that controls the temperature via a switch and sensor.",
        "data": {
          "ac_mode": "Cooling mode",
          "heater": "Actuator switch",
          "target_sensor": "Temperature sensor",
          "min_cycle_duration": "Minimum cycle duration",
          "name": "[%key:common::config_flow::data::name%]",
          "cold_tolerance": "Cold tolerance",
          "hot_tolerance": "Hot tolerance"
        },
        "data_description": {
          "ac_mode": "Set the actuator specified to be treated as a cooling device instead of a heating device.",
          "heater": "Switch entity used to cool or heat depending on A/C mode.",
          "target_sensor": "Temperature sensor that reflects the current temperature.",
          "min_cycle_duration": "Set a minimum amount of time that the switch specified must be in its current state prior to being switched either off or on.",
          "cold_tolerance": "Minimum amount of difference between the temperature read by the temperature sensor the target temperature that must change prior to being switched on. For example, if the target temperature is 25 and the tolerance is 0.5 the heater will start when the sensor equals or goes below 24.5.",
          "hot_tolerance": "Minimum amount of difference between the temperature read by the temperature sensor the target temperature that must change prior to being switched off. For example, if the target temperature is 25 and the tolerance is 0.5 the heater will stop when the sensor equals or goes above 25.5."
        }
      },
      "presets": {
        "title": "Temperature presets",
        "data": {
          "away_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::away%]",
          "comfort_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::comfort%]",
          "eco_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::eco%]",
          "home_temp": "[%key:common::state::home%]",
          "sleep_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::sleep%]",
          "activity_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::activity%]"
        }
      }
    }
  },
  "options": {
    "step": {
      "init": {
        "data": {
          "ac_mode": "[%key:component::generic_thermostat::config::step::user::data::ac_mode%]",
          "heater": "[%key:component::generic_thermostat::config::step::user::data::heater%]",
          "target_sensor": "[%key:component::generic_thermostat::config::step::user::data::target_sensor%]",
          "min_cycle_duration": "[%key:component::generic_thermostat::config::step::user::data::min_cycle_duration%]",
          "cold_tolerance": "[%key:component::generic_thermostat::config::step::user::data::cold_tolerance%]",
          "hot_tolerance": "[%key:component::generic_thermostat::config::step::user::data::hot_tolerance%]"
        },
        "data_description": {
          "heater": "[%key:component::generic_thermostat::config::step::user::data_description::heater%]",
          "target_sensor": "[%key:component::generic_thermostat::config::step::user::data_description::target_sensor%]",
          "ac_mode": "[%key:component::generic_thermostat::config::step::user::data_description::ac_mode%]",
          "min_cycle_duration": "[%key:component::generic_thermostat::config::step::user::data_description::min_cycle_duration%]",
          "cold_tolerance": "[%key:component::generic_thermostat::config::step::user::data_description::cold_tolerance%]",
          "hot_tolerance": "[%key:component::generic_thermostat::config::step::user::data_description::hot_tolerance%]"
        }
      },
      "presets": {
        "title": "[%key:component::generic_thermostat::config::step::presets::title%]",
        "data": {
          "away_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::away%]",
          "comfort_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::comfort%]",
          "eco_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::eco%]",
          "home_temp": "[%key:common::state::home%]",
          "sleep_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::sleep%]",
          "activity_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::activity%]"
        }
      }
    }
  },
  "services": {
    "reload": {
      "name": "[%key:common::action::reload%]",
      "description": "Reloads generic thermostats from the YAML-configuration."
    }
  }
}
