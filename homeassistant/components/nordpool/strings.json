{
  "config": {
    "abort": {
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "no_data": "API connected but the response was empty"
    },
    "step": {
      "user": {
        "data": {
          "currency": "Currency",
          "areas": "Areas"
        },
        "data_description": {
          "currency": "Select currency to display prices in, EUR is the base currency.",
          "areas": "Areas to display prices for according to Nordpool market areas."
        }
      },
      "reconfigure": {
        "data": {
          "currency": "[%key:component::nordpool::config::step::user::data::currency%]",
          "areas": "[%key:component::nordpool::config::step::user::data::areas%]"
        },
        "data_description": {
          "currency": "[%key:component::nordpool::config::step::user::data_description::currency%]",
          "areas": "[%key:component::nordpool::config::step::user::data_description::areas%]"
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "updated_at": {
        "name": "Last updated"
      },
      "currency": {
        "name": "Currency"
      },
      "exchange_rate": {
        "name": "Exchange rate"
      },
      "current_price": {
        "name": "Current price"
      },
      "last_price": {
        "name": "Previous price"
      },
      "next_price": {
        "name": "Next price"
      },
      "block_average": {
        "name": "{block} average"
      },
      "block_min": {
        "name": "{block} lowest price"
      },
      "block_max": {
        "name": "{block} highest price"
      },
      "block_start_time": {
        "name": "{block} time from"
      },
      "block_end_time": {
        "name": "{block} time until"
      },
      "daily_average": {
        "name": "Daily average"
      }
    }
  },
  "exceptions": {
    "initial_update_failed": {
      "message": "Initial update failed on startup with error {error}"
    }
  }
}
