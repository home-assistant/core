{
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "no_devices": "No devices discovered",
      "no_username": "Could not get username",
      "incorrect_api_key": "Invalid API key for selected account"
    },
    "step": {
      "user": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "Follow the documentation to get your api key"
        }
      },
      "reauth_confirm": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "[%key:component::sensibo::config::step::user::data_description::api_key%]"
        }
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "filter_clean": {
        "name": "Filter clean required"
      },
      "is_main_sensor": {
        "name": "Main sensor"
      },
      "room_occupied": {
        "name": "Room occupied"
      },
      "pure_ac_integration": {
        "name": "Pure Boost linked with AC"
      },
      "pure_geo_integration": {
        "name": "Pure Boost linked with presence"
      },
      "pure_measure_integration": {
        "name": "Pure Boost linked with indoor air quality"
      },
      "pure_prime_integration": {
        "name": "Pure Boost linked with outdoor air quality"
      }
    },
    "button": {
      "reset_filter": {
        "name": "Reset filter"
      }
    },
    "number": {
      "calibration_temperature": {
        "name": "Temperature calibration"
      },
      "calibration_humidity": {
        "name": "Humidity calibration"
      }
    },
    "select": {
      "horizontalswing": {
        "name": "Horizontal swing",
        "state": {
          "stopped": "[%key:common::state::off%]",
          "fixedleft": "Fixed left",
          "fixedcenterleft": "Fixed center left",
          "fixedcenter": "Fixed center",
          "fixedcenterright": "Fixed center right",
          "fixedright": "Fixed right",
          "fixedleftright": "Fixed left right",
          "rangecenter": "Range center",
          "rangefull": "Range full",
          "rangeleft": "Range left",
          "rangeright": "Range right"
        }
      },
      "light": {
        "name": "[%key:component::light::title%]",
        "state": {
          "on": "[%key:common::state::on%]",
          "dim": "Dim",
          "off": "[%key:common::state::off%]"
        }
      }
    },
    "sensor": {
      "filter_last_reset": {
        "name": "Filter last reset"
      },
      "rssi": {
        "name": "RSSI"
      },
      "battery_voltage": {
        "name": "Battery voltage"
      },
      "sensitivity": {
        "name": "Pure sensitivity",
        "state": {
          "n": "Normal",
          "s": "Sensitive"
        }
      },
      "timer_time": {
        "name": "Timer end time"
      },
      "feels_like": {
        "name": "Temperature feels like"
      },
      "climate_react_low": {
        "name": "Climate React low temperature threshold",
        "state_attributes": {
          "fanlevel": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::name%]",
            "state": {
              "auto": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::auto%]",
              "high": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::high%]",
              "low": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::low%]",
              "medium_low": "Medium low",
              "medium": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::medium%]",
              "medium_high": "Medium high",
              "strong": "Strong",
              "quiet": "Quiet"
            }
          },
          "horizontalswing": {
            "name": "Horizontal swing",
            "state": {
              "stopped": "[%key:common::state::off%]",
              "fixedleft": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedleft%]",
              "fixedcenterleft": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenterleft%]",
              "fixedcenter": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenter%]",
              "fixedcenterright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenterright%]",
              "fixedright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedright%]",
              "fixedleftright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedleftright%]",
              "rangecenter": "[%key:component::sensibo::entity::select::horizontalswing::state::rangecenter%]",
              "rangefull": "[%key:component::sensibo::entity::select::horizontalswing::state::rangefull%]"
            }
          },
          "light": {
            "name": "[%key:component::light::title%]",
            "state": {
              "on": "[%key:common::state::on%]",
              "dim": "[%key:component::sensibo::entity::select::light::state::dim%]",
              "off": "[%key:common::state::off%]"
            }
          },
          "mode": {
            "name": "Mode",
            "state": {
              "off": "[%key:common::state::off%]",
              "heat": "[%key:component::climate::entity_component::_::state::heat%]",
              "cool": "[%key:component::climate::entity_component::_::state::cool%]",
              "heat_cool": "[%key:component::climate::entity_component::_::state::heat_cool%]",
              "auto": "[%key:component::climate::entity_component::_::state::auto%]",
              "dry": "[%key:component::climate::entity_component::_::state::dry%]",
              "fan_only": "[%key:component::climate::entity_component::_::state::fan_only%]"
            }
          },
          "on": {
            "name": "[%key:common::state::on%]",
            "state": {
              "true": "[%key:common::state::on%]",
              "false": "[%key:common::state::off%]"
            }
          },
          "swing": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::name%]",
            "state": {
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]",
              "fixedbottom": "Fixed bottom",
              "fixedmiddle": "Fixed middle",
              "fixedmiddlebottom": "Fixed middle bottom",
              "fixedmiddletop": "Fixed middle top",
              "fixedtop": "Fixed top",
              "horizontal": "Horizontal",
              "rangebottom": "Range bottom",
              "rangefull": "Range full",
              "rangemiddle": "Range middle",
              "rangetop": "Range top",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "targettemperature": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::temperature::name%]"
          },
          "temperatureunit": {
            "name": "Temperature unit",
            "state": {
              "c": "Celsius",
              "f": "Fahrenheit"
            }
          }
        }
      },
      "climate_react_high": {
        "name": "Climate React high temperature threshold",
        "state_attributes": {
          "fanlevel": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::name%]",
            "state": {
              "auto": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::auto%]",
              "high": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::high%]",
              "low": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::low%]",
              "medium_low": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_low%]",
              "medium": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::medium%]",
              "medium_high": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_high%]",
              "strong": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::strong%]",
              "quiet": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::quiet%]"
            }
          },
          "horizontalswing": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::name%]",
            "state": {
              "stopped": "[%key:common::state::off%]",
              "fixedleft": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedleft%]",
              "fixedcenterleft": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenterleft%]",
              "fixedcenter": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenter%]",
              "fixedcenterright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedcenterright%]",
              "fixedright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedright%]",
              "fixedleftright": "[%key:component::sensibo::entity::select::horizontalswing::state::fixedleftright%]",
              "rangecenter": "[%key:component::sensibo::entity::select::horizontalswing::state::rangecenter%]",
              "rangefull": "[%key:component::sensibo::entity::select::horizontalswing::state::rangefull%]"
            }
          },
          "light": {
            "name": "[%key:component::light::title%]",
            "state": {
              "on": "[%key:common::state::on%]",
              "dim": "[%key:component::sensibo::entity::select::light::state::dim%]",
              "off": "[%key:common::state::off%]"
            }
          },
          "mode": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::mode::name%]",
            "state": {
              "off": "[%key:common::state::off%]",
              "heat": "[%key:component::climate::entity_component::_::state::heat%]",
              "cool": "[%key:component::climate::entity_component::_::state::cool%]",
              "heat_cool": "[%key:component::climate::entity_component::_::state::heat_cool%]",
              "auto": "[%key:component::climate::entity_component::_::state::auto%]",
              "dry": "[%key:component::climate::entity_component::_::state::dry%]",
              "fan_only": "[%key:component::climate::entity_component::_::state::fan_only%]"
            }
          },
          "on": {
            "name": "[%key:common::state::on%]",
            "state": {
              "true": "[%key:common::state::on%]",
              "false": "[%key:common::state::off%]"
            }
          },
          "swing": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::name%]",
            "state": {
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]",
              "fixedbottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedbottom%]",
              "fixedmiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddle%]",
              "fixedmiddlebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddlebottom%]",
              "fixedmiddletop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddletop%]",
              "fixedtop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedtop%]",
              "horizontal": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::horizontal%]",
              "rangebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangebottom%]",
              "rangefull": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangefull%]",
              "rangemiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangemiddle%]",
              "rangetop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangetop%]",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "targettemperature": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::temperature::name%]"
          },
          "temperatureunit": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::name%]",
            "state": {
              "c": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::state::c%]",
              "f": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::state::f%]"
            }
          }
        }
      },
      "smart_type": {
        "name": "Climate React type",
        "state": {
          "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
          "feelslike": "[%key:component::sensibo::entity::switch::climate_react_switch::state_attributes::type::state::feelslike%]",
          "humidity": "[%key:component::sensor::entity_component::humidity::name%]"
        }
      },
      "airq_tvoc": {
        "name": "AirQ TVOC"
      },
      "airq_co2": {
        "name": "AirQ CO2"
      },
      "tvoc": {
        "name": "TVOC"
      },
      "ethanol": {
        "name": "Ethanol"
      }
    },
    "switch": {
      "timer_on_switch": {
        "name": "Timer",
        "state_attributes": {
          "id": { "name": "Id" },
          "turn_on": {
            "name": "Turns on",
            "state": {
              "true": "[%key:common::state::on%]",
              "false": "[%key:common::state::off%]"
            }
          }
        }
      },
      "climate_react_switch": {
        "name": "Climate React",
        "state_attributes": {
          "type": {
            "name": "Type",
            "state": {
              "feelslike": "Feels like",
              "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
              "humidity": "[%key:component::sensor::entity_component::humidity::name%]"
            }
          }
        }
      },
      "pure_boost_switch": {
        "name": "Pure Boost"
      }
    },
    "climate": {
      "climate_device": {
        "state_attributes": {
          "fan_mode": {
            "state": {
              "quiet": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::quiet%]",
              "strong": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::strong%]",
              "low": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::low%]",
              "medium_low": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_low%]",
              "medium": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::medium%]",
              "medium_high": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_high%]",
              "high": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::high%]",
              "auto": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::state::auto%]"
            }
          },
          "swing_mode": {
            "state": {
              "stopped": "[%key:common::state::off%]",
              "fixedtop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedtop%]",
              "fixedmiddletop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddletop%]",
              "fixedmiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddle%]",
              "fixedmiddlebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddlebottom%]",
              "fixedbottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedbottom%]",
              "rangetop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangetop%]",
              "rangemiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangemiddle%]",
              "rangebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangebottom%]",
              "rangefull": "[%key:component::sensibo::entity::select::horizontalswing::state::rangefull%]",
              "horizontal": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::horizontal%]",
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]"
            }
          }
        }
      }
    }
  },
  "services": {
    "assume_state": {
      "name": "Assume state",
      "description": "Sets Sensibo device to external state.",
      "fields": {
        "state": {
          "name": "State",
          "description": "State to set."
        }
      }
    },
    "enable_timer": {
      "name": "Enable timer",
      "description": "Enables the timer with custom time.",
      "fields": {
        "minutes": {
          "name": "Minutes",
          "description": "Countdown for timer (for timer state on)."
        }
      }
    },
    "enable_pure_boost": {
      "name": "Enable pure boost",
      "description": "Enables and configures Pure Boost settings.",
      "fields": {
        "ac_integration": {
          "name": "AC integration",
          "description": "Integrate with Air Conditioner."
        },
        "geo_integration": {
          "name": "Geo integration",
          "description": "Integrate with Presence."
        },
        "indoor_integration": {
          "name": "Indoor air quality",
          "description": "Integrate with checking indoor air quality."
        },
        "outdoor_integration": {
          "name": "Outdoor air quality",
          "description": "Integrate with checking outdoor air quality."
        },
        "sensitivity": {
          "name": "Sensitivity",
          "description": "Set the sensitivity for Pure Boost."
        }
      }
    },
    "full_state": {
      "name": "Set full state",
      "description": "Sets full state for Sensibo device.",
      "fields": {
        "mode": {
          "name": "HVAC mode",
          "description": "HVAC mode to set."
        },
        "target_temperature": {
          "name": "Target temperature",
          "description": "Set target temperature."
        },
        "fan_mode": {
          "name": "Fan mode",
          "description": "set fan mode."
        },
        "swing_mode": {
          "name": "Swing mode",
          "description": "Set swing mode."
        },
        "horizontal_swing_mode": {
          "name": "Horizontal swing mode",
          "description": "Set horizontal swing mode."
        },
        "light": {
          "name": "Light",
          "description": "Set light on or off."
        }
      }
    },
    "enable_climate_react": {
      "name": "Enable climate react",
      "description": "Enables and configures climate react.",
      "fields": {
        "high_temperature_threshold": {
          "name": "Threshold high",
          "description": "When temp/humidity goes above."
        },
        "high_temperature_state": {
          "name": "State high threshold",
          "description": "What should happen at high threshold. Requires full state."
        },
        "low_temperature_threshold": {
          "name": "Threshold low",
          "description": "When temp/humidity goes below."
        },
        "low_temperature_state": {
          "name": "State low threshold",
          "description": "What should happen at low threshold. Requires full state."
        },
        "smart_type": {
          "name": "Trigger type",
          "description": "Choose between temperature/feels like/humidity."
        }
      }
    }
  },
  "exceptions": {
    "no_target_temperature_in_features": {
      "message": "Current mode doesn't support setting target temperature"
    },
    "no_target_temperature": {
      "message": "No target temperature provided"
    },
    "no_fan_level_in_features": {
      "message": "Current mode doesn't support setting fan level"
    },
    "fan_mode_not_supported": {
      "message": "Climate fan mode {fan_mode} is not supported by the integration, please open an issue"
    },
    "no_swing_in_features": {
      "message": "Current mode doesn't support setting swing"
    },
    "swing_not_supported": {
      "message": "Climate swing mode {swing_mode} is not supported by the integration, please open an issue"
    },
    "service_result_not_true": {
      "message": "Could not execute service for {name}"
    },
    "service_raised": {
      "message": "Could not execute service for {name} with error {error}"
    },
    "select_option_not_available": {
      "message": "Current mode {hvac_mode} doesn't support setting {key}"
    },
    "climate_react_not_available": {
      "message": "Use Sensibo Enable Climate React Service once to enable switch or the Sensibo app"
    }
  }
}
