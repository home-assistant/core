{
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]"
    },
    "error": {
      "resource_error": "Could not update rest data. Verify your configuration"
    },
    "step": {
      "user": {
        "data": {
          "resource": "Resource",
          "authentication": "Select authentication method",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "headers": "Headers",
          "method": "Method",
          "payload": "Payload",
          "timeout": "Timeout",
          "encoding": "Character encoding"
        },
        "data_description": {
          "resource": "The URL to the website that contains the value.",
          "authentication": "Type of the HTTP authentication. Either basic or digest.",
          "verify_ssl": "Enables/disables verification of SSL/TLS certificate, for example if it is self-signed.",
          "headers": "Headers to use for the web request.",
          "timeout": "Timeout for connection to website.",
          "encoding": "Character encoding to use. Defaults to UTF-8.",
          "payload": "Payload to use when method is POST."
        }
      },
      "sensor": {
        "data": {
          "name": "[%key:common::config_flow::data::name%]",
          "attribute": "Attribute",
          "index": "Index",
          "select": "Select",
          "value_template": "Value template",
          "availability": "Availability template",
          "device_class": "Device class",
          "state_class": "State class",
          "unit_of_measurement": "Unit of measurement"
        },
        "data_description": {
          "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details.",
          "attribute": "Get value of an attribute on the selected tag.",
          "index": "Defines which of the elements returned by the CSS selector to use.",
          "value_template": "Defines a template to get the state of the sensor.",
          "availability": "Defines a template to get the availability of the sensor.",
          "device_class": "The type/class of the sensor to set the icon in the frontend.",
          "state_class": "The state_class of the sensor.",
          "unit_of_measurement": "Choose unit of measurement or create your own."
        }
      }
    }
  },
  "options": {
    "step": {
      "init": {
        "menu_options": {
          "add_sensor": "Add sensor",
          "select_edit_sensor": "Configure sensor",
          "remove_sensor": "Remove sensor",
          "resource": "Configure resource"
        }
      },
      "add_sensor": {
        "data": {
          "name": "[%key:common::config_flow::data::name%]",
          "attribute": "[%key:component::scrape::config::step::sensor::data::attribute%]",
          "index": "[%key:component::scrape::config::step::sensor::data::index%]",
          "select": "[%key:component::scrape::config::step::sensor::data::select%]",
          "value_template": "[%key:component::scrape::config::step::sensor::data::value_template%]",
          "availability": "[%key:component::scrape::config::step::sensor::data::availability%]",
          "device_class": "[%key:component::scrape::config::step::sensor::data::device_class%]",
          "state_class": "[%key:component::scrape::config::step::sensor::data::state_class%]",
          "unit_of_measurement": "[%key:component::scrape::config::step::sensor::data::unit_of_measurement%]"
        },
        "data_description": {
          "select": "[%key:component::scrape::config::step::sensor::data_description::select%]",
          "attribute": "[%key:component::scrape::config::step::sensor::data_description::attribute%]",
          "index": "[%key:component::scrape::config::step::sensor::data_description::index%]",
          "value_template": "[%key:component::scrape::config::step::sensor::data_description::value_template%]",
          "availability": "[%key:component::scrape::config::step::sensor::data_description::availability%]",
          "device_class": "[%key:component::scrape::config::step::sensor::data_description::device_class%]",
          "state_class": "[%key:component::scrape::config::step::sensor::data_description::state_class%]",
          "unit_of_measurement": "[%key:component::scrape::config::step::sensor::data_description::unit_of_measurement%]"
        }
      },
      "edit_sensor": {
        "data": {
          "name": "[%key:common::config_flow::data::name%]",
          "attribute": "[%key:component::scrape::config::step::sensor::data::attribute%]",
          "index": "[%key:component::scrape::config::step::sensor::data::index%]",
          "select": "[%key:component::scrape::config::step::sensor::data::select%]",
          "value_template": "[%key:component::scrape::config::step::sensor::data::value_template%]",
          "availability": "[%key:component::scrape::config::step::sensor::data::availability%]",
          "device_class": "[%key:component::scrape::config::step::sensor::data::device_class%]",
          "state_class": "[%key:component::scrape::config::step::sensor::data::state_class%]",
          "unit_of_measurement": "[%key:component::scrape::config::step::sensor::data::unit_of_measurement%]"
        },
        "data_description": {
          "select": "[%key:component::scrape::config::step::sensor::data_description::select%]",
          "attribute": "[%key:component::scrape::config::step::sensor::data_description::attribute%]",
          "index": "[%key:component::scrape::config::step::sensor::data_description::index%]",
          "value_template": "[%key:component::scrape::config::step::sensor::data_description::value_template%]",
          "availability": "[%key:component::scrape::config::step::sensor::data_description::availability%]",
          "device_class": "[%key:component::scrape::config::step::sensor::data_description::device_class%]",
          "state_class": "[%key:component::scrape::config::step::sensor::data_description::state_class%]",
          "unit_of_measurement": "[%key:component::scrape::config::step::sensor::data_description::unit_of_measurement%]"
        }
      },
      "resource": {
        "data": {
          "resource": "[%key:component::scrape::config::step::user::data::resource%]",
          "method": "[%key:component::scrape::config::step::user::data::method%]",
          "payload": "[%key:component::scrape::config::step::user::data::payload%]",
          "authentication": "[%key:component::scrape::config::step::user::data::authentication%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "headers": "[%key:component::scrape::config::step::user::data::headers%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]",
          "timeout": "[%key:component::scrape::config::step::user::data::timeout%]",
          "encoding": "[%key:component::scrape::config::step::user::data::encoding%]"
        },
        "data_description": {
          "resource": "[%key:component::scrape::config::step::user::data_description::resource%]",
          "authentication": "[%key:component::scrape::config::step::user::data_description::authentication%]",
          "headers": "[%key:component::scrape::config::step::user::data_description::headers%]",
          "verify_ssl": "[%key:component::scrape::config::step::user::data_description::verify_ssl%]",
          "timeout": "[%key:component::scrape::config::step::user::data_description::timeout%]",
          "encoding": "[%key:component::scrape::config::step::user::data_description::encoding%]",
          "payload": "[%key:component::scrape::config::step::user::data_description::payload%]"
        }
      }
    }
  },
  "selector": {
    "device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "conductivity": "[%key:component::sensor::entity_component::conductivity::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "data_size": "[%key:component::sensor::entity_component::data_size::name%]",
        "date": "[%key:component::sensor::entity_component::date::name%]",
        "distance": "[%key:component::sensor::entity_component::distance::name%]",
        "duration": "[%key:component::sensor::entity_component::duration::name%]",
        "energy": "[%key:component::sensor::entity_component::energy::name%]",
        "energy_storage": "[%key:component::sensor::entity_component::energy_storage::name%]",
        "frequency": "[%key:component::sensor::entity_component::frequency::name%]",
        "gas": "[%key:component::sensor::entity_component::gas::name%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "illuminance": "[%key:component::sensor::entity_component::illuminance::name%]",
        "irradiance": "[%key:component::sensor::entity_component::irradiance::name%]",
        "moisture": "[%key:component::sensor::entity_component::moisture::name%]",
        "monetary": "[%key:component::sensor::entity_component::monetary::name%]",
        "nitrogen_dioxide": "[%key:component::sensor::entity_component::nitrogen_dioxide::name%]",
        "nitrogen_monoxide": "[%key:component::sensor::entity_component::nitrogen_monoxide::name%]",
        "nitrous_oxide": "[%key:component::sensor::entity_component::nitrous_oxide::name%]",
        "ozone": "[%key:component::sensor::entity_component::ozone::name%]",
        "ph": "[%key:component::sensor::entity_component::ph::name%]",
        "pm1": "[%key:component::sensor::entity_component::pm1::name%]",
        "pm10": "[%key:component::sensor::entity_component::pm10::name%]",
        "pm25": "[%key:component::sensor::entity_component::pm25::name%]",
        "power": "[%key:component::sensor::entity_component::power::name%]",
        "power_factor": "[%key:component::sensor::entity_component::power_factor::name%]",
        "precipitation": "[%key:component::sensor::entity_component::precipitation::name%]",
        "precipitation_intensity": "[%key:component::sensor::entity_component::precipitation_intensity::name%]",
        "pressure": "[%key:component::sensor::entity_component::pressure::name%]",
        "reactive_power": "[%key:component::sensor::entity_component::reactive_power::name%]",
        "signal_strength": "[%key:component::sensor::entity_component::signal_strength::name%]",
        "sound_pressure": "[%key:component::sensor::entity_component::sound_pressure::name%]",
        "speed": "[%key:component::sensor::entity_component::speed::name%]",
        "sulphur_dioxide": "[%key:component::sensor::entity_component::sulphur_dioxide::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
        "timestamp": "[%key:component::sensor::entity_component::timestamp::name%]",
        "volatile_organic_compounds": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "volatile_organic_compounds_parts": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "voltage": "[%key:component::sensor::entity_component::voltage::name%]",
        "volume": "[%key:component::sensor::entity_component::volume::name%]",
        "volume_flow_rate": "[%key:component::sensor::entity_component::volume_flow_rate::name%]",
        "volume_storage": "[%key:component::sensor::entity_component::volume_storage::name%]",
        "water": "[%key:component::sensor::entity_component::water::name%]",
        "weight": "[%key:component::sensor::entity_component::weight::name%]",
        "wind_speed": "[%key:component::sensor::entity_component::wind_speed::name%]"
      }
    },
    "state_class": {
      "options": {
        "measurement": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::measurement%]",
        "total": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total%]",
        "total_increasing": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total_increasing%]"
      }
    },
    "unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    }
  }
}
