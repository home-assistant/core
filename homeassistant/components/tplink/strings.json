{
  "config": {
    "flow_title": "{name} {model} ({host})",
    "step": {
      "user": {
        "description": "If you leave the host empty, discovery will be used to find devices.",
        "data": {
          "host": "[%key:common::config_flow::data::host%]"
        },
        "data_description": {
          "host": "Hostname or IP address of your TP-Link device."
        }
      },
      "pick_device": {
        "data": {
          "device": "[%key:common::config_flow::data::device%]"
        }
      },
      "discovery_confirm": {
        "description": "Do you want to set up {name} {model} ({host})?"
      },
      "user_auth_confirm": {
        "title": "Authenticate",
        "description": "The device requires authentication, please input your TP-Link credentials below.",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]"
        }
      },
      "discovery_auth_confirm": {
        "title": "Authenticate",
        "description": "[%key:component::tplink::config::step::user_auth_confirm::description%]",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]"
        }
      },
      "reauth": {
        "title": "[%key:common::config_flow::title::reauth%]",
        "description": "[%key:component::tplink::config::step::user_auth_confirm::description%]"
      },
      "reauth_confirm": {
        "title": "[%key:common::config_flow::title::reauth%]",
        "description": "[%key:component::tplink::config::step::user_auth_confirm::description%]",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]"
        }
      }
    },
    "error": {
      "cannot_connect": "Connection error: {error}",
      "invalid_auth": "Invalid authentication: {error}"
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]",
      "no_devices_found": "[%key:common::config_flow::abort::no_devices_found%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]"
    }
  },
  "entity": {
    "binary_sensor": {
      "humidity_warning": {
        "name": "Humidity warning"
      },
      "temperature_warning": {
        "name": "Temperature warning"
      },
      "overheated": {
        "name": "Overheated"
      },
      "battery_low": {
        "name": "Battery low"
      },
      "cloud_connection": {
        "name": "Cloud connection"
      },
      "update_available": {
        "name": "[%key:component::binary_sensor::entity_component::update::name%]",
        "state": {
          "off": "[%key:component::binary_sensor::entity_component::update::state::off%]",
          "on": "[%key:component::binary_sensor::entity_component::update::state::on%]"
        }
      },
      "is_open": {
        "name": "[%key:component::binary_sensor::entity_component::door::name%]",
        "state": {
          "off": "[%key:common::state::closed%]",
          "on": "[%key:common::state::open%]"
        }
      },
      "water_alert": {
        "name": "[%key:component::binary_sensor::entity_component::moisture::name%]",
        "state": {
          "off": "[%key:component::binary_sensor::entity_component::moisture::state::off%]",
          "on": "[%key:component::binary_sensor::entity_component::moisture::state::on%]"
        }
      }
    },
    "button": {
      "test_alarm": {
        "name": "Test alarm"
      },
      "stop_alarm": {
        "name": "Stop alarm"
      }
    },
    "select": {
      "light_preset": {
        "name": "Light preset"
      },
      "alarm_sound": {
        "name": "Alarm sound"
      },
      "alarm_volume": {
        "name": "Alarm volume"
      }
    },
    "sensor": {
      "current_consumption": {
        "name": "Current consumption"
      },
      "consumption_total": {
        "name": "Total consumption"
      },
      "consumption_today": {
        "name": "Today's consumption"
      },
      "consumption_this_month": {
        "name": "This month's consumption"
      },
      "on_since": {
        "name": "On since"
      },
      "ssid": {
        "name": "SSID"
      },
      "signal_level": {
        "name": "Signal level"
      },
      "current_firmware_version": {
        "name": "Current firmware version"
      },
      "available_firmware_version": {
        "name": "Available firmware version"
      },
      "battery_level": {
        "name": "Battery level"
      },
      "temperature": {
        "name": "[%key:component::sensor::entity_component::temperature::name%]"
      },
      "voltage": {
        "name": "[%key:component::sensor::entity_component::voltage::name%]"
      },
      "current": {
        "name": "[%key:component::sensor::entity_component::current::name%]"
      },
      "humidity": {
        "name": "[%key:component::sensor::entity_component::humidity::name%]"
      },
      "device_time": {
        "name": "Device time"
      },
      "auto_off_at": {
        "name": "Auto off at"
      },
      "report_interval": {
        "name": "Report interval"
      },
      "alarm_source": {
        "name": "Alarm source"
      },
      "rssi": {
        "name": "[%key:component::sensor::entity_component::signal_strength::name%]"
      }
    },
    "switch": {
      "led": {
        "name": "LED"
      },
      "auto_update_enabled": {
        "name": "Auto update enabled"
      },
      "auto_off_enabled": {
        "name": "Auto off enabled"
      },
      "smooth_transitions": {
        "name": "Smooth transitions"
      },
      "fan_sleep_mode": {
        "name": "Fan sleep mode"
      }
    },
    "number": {
      "smooth_transition_on": {
        "name": "Smooth on"
      },
      "smooth_transition_off": {
        "name": "Smooth off"
      },
      "auto_off_minutes": {
        "name": "Turn off in"
      },
      "temperature_offset": {
        "name": "Temperature offset"
      }
    }
  },
  "services": {
    "sequence_effect": {
      "name": "Sequence effect",
      "description": "Sets a sequence effect.",
      "fields": {
        "sequence": {
          "name": "Sequence",
          "description": "List of HSV sequences (Max 16)."
        },
        "segments": {
          "name": "Segments",
          "description": "List of Segments (0 for all)."
        },
        "brightness": {
          "name": "Brightness",
          "description": "Initial brightness."
        },
        "duration": {
          "name": "Duration",
          "description": "Duration."
        },
        "repeat_times": {
          "name": "Repetitions",
          "description": "Repetitions (0 for continuous)."
        },
        "transition": {
          "name": "Transition",
          "description": "Transition."
        },
        "spread": {
          "name": "Spread",
          "description": "Speed of spread."
        },
        "direction": {
          "name": "Direction",
          "description": "Direction."
        }
      }
    },
    "random_effect": {
      "name": "Random effect",
      "description": "Sets a random effect.",
      "fields": {
        "init_states": {
          "name": "Initial states",
          "description": "Initial HSV sequence."
        },
        "backgrounds": {
          "name": "Backgrounds",
          "description": "[%key:component::tplink::services::sequence_effect::fields::sequence::description%]"
        },
        "segments": {
          "name": "Segments",
          "description": "List of segments (0 for all)."
        },
        "brightness": {
          "name": "Brightness",
          "description": "[%key:component::tplink::services::sequence_effect::fields::brightness::description%]"
        },
        "duration": {
          "name": "Duration",
          "description": "[%key:component::tplink::services::sequence_effect::fields::duration::description%]"
        },
        "transition": {
          "name": "Transition",
          "description": "[%key:component::tplink::services::sequence_effect::fields::transition::description%]"
        },
        "fadeoff": {
          "name": "Fade off",
          "description": "Fade off."
        },
        "hue_range": {
          "name": "Hue range",
          "description": "Range of hue."
        },
        "saturation_range": {
          "name": "Saturation range",
          "description": "Range of saturation."
        },
        "brightness_range": {
          "name": "Brightness range",
          "description": "Range of brightness."
        },
        "transition_range": {
          "name": "Transition range",
          "description": "Range of transition."
        },
        "random_seed": {
          "name": "Random seed",
          "description": "Random seed."
        }
      }
    }
  },
  "exceptions": {
    "device_timeout": {
      "message": "Timeout communicating with the device {func}: {exc}"
    },
    "device_error": {
      "message": "Unable to communicate with the device {func}: {exc}"
    },
    "device_authentication": {
      "message": "Device authentication error {func}: {exc}"
    }
  },
  "issues": {
    "deprecated_entity": {
      "title": "Detected deprecated {platform} entity usage",
      "description": "We detected that entity `{entity}` is being used in `{info}`\n\nWe have created a new `{new_platform}` entity and you should migrate `{info}` to use this new entity.\n\nWhen you are done migrating `{info}` and are ready to have the deprecated `{entity}` entity removed, disable the entity and restart Home Assistant."
    }
  }
}
