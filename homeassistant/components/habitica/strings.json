{
  "common": {
    "todos": "To-Do's",
    "dailies": "Dailies",
    "config_entry_name": "Select character"
  },
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "unknown": "[%key:common::config_flow::error::unknown%]"
    },
    "step": {
      "user": {
        "title": "Habitica - Gamify your life",
        "menu_options": {
          "login": "Login to Habitica",
          "advanced": "Login to other instances"
        },
        "description": "![Habiticans]({habiticans}) Connect your Habitica account to keep track of your adventurer's stats, progress, and manage your to-dos and daily tasks.\n\n[Don't have a Habitica account? Sign up here.]({signup})"
      },
      "login": {
        "title": "[%key:component::habitica::config::step::user::menu_options::login%]",
        "data": {
          "username": "Email or username (case-sensitive)",
          "password": "[%key:common::config_flow::data::password%]"
        },
        "data_description": {
          "username": "Email or username (case-sensitive) to connect Home Assistant to your Habitica account",
          "password": "Password for the account to connect Home Assistant to Habitica"
        },
        "description": "Enter your login details to start using Habitica with Home Assistant\n\n[Forgot your password?]({forgot_password})"
      },
      "advanced": {
        "title": "[%key:component::habitica::config::step::user::menu_options::advanced%]",
        "data": {
          "url": "[%key:common::config_flow::data::url%]",
          "api_user": "User ID",
          "api_key": "API Token",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "url": "URL of the Habitica installation to connect to. Defaults to `{default_url}`",
          "api_user": "User ID of your Habitica account",
          "api_key": "API Token of the Habitica account"
        },
        "description": "You can retrieve your `User ID` and `API Token` from [**Settings -> Site Data**]({site_data}) on Habitica or the instance you want to connect to"
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "pending_quest": {
        "name": "Pending quest invitation"
      }
    },
    "button": {
      "run_cron": {
        "name": "Start my day"
      },
      "buy_health_potion": {
        "name": "Buy a health potion"
      },
      "allocate_all_stat_points": {
        "name": "Allocate all stat points"
      },
      "revive": {
        "name": "Revive from death"
      },
      "mpheal": {
        "name": "Ethereal surge"
      },
      "earth": {
        "name": "Earthquake"
      },
      "frost": {
        "name": "Chilling frost"
      },
      "defensive_stance": {
        "name": "Defensive stance"
      },
      "valorous_presence": {
        "name": "Valorous presence"
      },
      "intimidate": {
        "name": "Intimidating gaze"
      },
      "tools_of_trade": {
        "name": "Tools of the trade"
      },
      "stealth": {
        "name": "Stealth"
      },
      "heal": {
        "name": "Healing light"
      },
      "brightness": {
        "name": "Searing brightness"
      },
      "protect_aura": {
        "name": "Protective aura"
      },
      "heal_all": {
        "name": "Blessing"
      }
    },
    "calendar": {
      "todos": {
        "name": "[%key:component::habitica::common::todos%]"
      },
      "dailys": {
        "name": "[%key:component::habitica::common::dailies%]",
        "state_attributes": {
          "yesterdaily": {
            "name": "Yester-Daily",
            "state": {
              "true": "[%key:common::state::yes%]",
              "false": "[%key:common::state::no%]"
            }
          }
        }
      },
      "todo_reminders": {
        "name": "To-do reminders"
      },
      "daily_reminders": {
        "name": "Daily reminders"
      }
    },
    "sensor": {
      "display_name": {
        "name": "Display name"
      },
      "health": {
        "name": "Health"
      },
      "health_max": {
        "name": "Max. health"
      },
      "mana": {
        "name": "Mana"
      },
      "mana_max": {
        "name": "Max. mana"
      },
      "experience": {
        "name": "Experience"
      },
      "experience_max": {
        "name": "Next level"
      },
      "level": {
        "name": "Level"
      },
      "gold": {
        "name": "Gold"
      },
      "gems": {
        "name": "Gems"
      },
      "trinkets": {
        "name": "Mystic hourglasses"
      },
      "class": {
        "name": "Class",
        "state": {
          "warrior": "Warrior",
          "healer": "Healer",
          "wizard": "Mage",
          "rogue": "Rogue"
        }
      },
      "todos": {
        "name": "[%key:component::habitica::common::todos%]"
      },
      "dailys": {
        "name": "[%key:component::habitica::common::dailies%]"
      },
      "habits": {
        "name": "Habits"
      },
      "rewards": {
        "name": "Rewards"
      },
      "strength": {
        "name": "Strength",
        "state_attributes": {
          "level": {
            "name": "[%key:component::habitica::entity::sensor::level::name%]"
          },
          "equipment": {
            "name": "Battle gear"
          },
          "class": {
            "name": "Class equip bonus"
          },
          "allocated": {
            "name": "Allocated attribute points"
          },
          "buffs": {
            "name": "Buffs"
          }
        }
      },
      "intelligence": {
        "name": "Intelligence",
        "state_attributes": {
          "level": {
            "name": "[%key:component::habitica::entity::sensor::level::name%]"
          },
          "equipment": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::equipment::name%]"
          },
          "class": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::class::name%]"
          },
          "allocated": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::allocated::name%]"
          },
          "buffs": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::buffs::name%]"
          }
        }
      },
      "perception": {
        "name": "Perception",
        "state_attributes": {
          "level": {
            "name": "[%key:component::habitica::entity::sensor::level::name%]"
          },
          "equipment": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::equipment::name%]"
          },
          "class": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::class::name%]"
          },
          "allocated": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::allocated::name%]"
          },
          "buffs": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::buffs::name%]"
          }
        }
      },
      "constitution": {
        "name": "Constitution",
        "state_attributes": {
          "level": {
            "name": "[%key:component::habitica::entity::sensor::level::name%]"
          },
          "equipment": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::equipment::name%]"
          },
          "class": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::class::name%]"
          },
          "allocated": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::allocated::name%]"
          },
          "buffs": {
            "name": "[%key:component::habitica::entity::sensor::strength::state_attributes::buffs::name%]"
          }
        }
      }
    },
    "switch": {
      "sleep": {
        "name": "Rest in the inn"
      }
    },
    "todo": {
      "todos": {
        "name": "[%key:component::habitica::common::todos%]"
      },
      "dailys": {
        "name": "[%key:component::habitica::common::dailies%]"
      }
    }
  },
  "exceptions": {
    "delete_todos_failed": {
      "message": "Unable to delete item from Habitica to-do list, please try again"
    },
    "delete_completed_todos_failed": {
      "message": "Unable to delete completed to-do items from Habitica to-do list, please try again"
    },
    "move_todos_item_failed": {
      "message": "Unable to move the Habitica to-do to position {pos}, please try again"
    },
    "move_dailys_item_failed": {
      "message": "Unable to move the Habitica daily to position {pos}, please try again"
    },
    "update_todos_item_failed": {
      "message": "Unable to update the Habitica to-do `{name}`, please try again"
    },
    "update_dailys_item_failed": {
      "message": "Unable to update the Habitica daily `{name}`, please try again"
    },
    "score_todos_item_failed": {
      "message": "Unable to update the score for your Habitica to-do `{name}`, please try again"
    },
    "score_dailys_item_failed": {
      "message": "Unable to update the score for your Habitica daily `{name}`, please try again"
    },
    "create_todos_item_failed": {
      "message": "Unable to create new to-do `{name}` for Habitica, please try again"
    },
    "setup_rate_limit_exception": {
      "message": "Rate limit exceeded, try again later"
    },
    "service_call_unallowed": {
      "message": "Unable to complete action, the required conditions are not met"
    },
    "service_call_exception": {
      "message": "Unable to connect to Habitica, try again later"
    },
    "not_enough_mana": {
      "message": "Unable to cast skill, not enough mana. Your character has {mana}, but the skill costs {cost}."
    },
    "not_enough_gold": {
      "message": "Unable to buy reward, not enough gold. Your character has {gold}, but the reward costs {cost}."
    },
    "skill_not_found": {
      "message": "Unable to cast skill, your character does not have the skill or spell {skill}."
    },
    "entry_not_found": {
      "message": "The selected character is not configured in Home Assistant."
    },
    "entry_not_loaded": {
      "message": "The selected character is currently not loaded or disabled in Home Assistant."
    },
    "task_not_found": {
      "message": "Unable to complete action, could not find the task {task}"
    },
    "quest_action_unallowed": {
      "message": "Action not allowed, only quest leader or group leader can perform this action"
    },
    "quest_not_found": {
      "message": "Unable to complete action, quest or group not found"
    },
    "target_not_found": {
      "message": "Unable to find target {target} in your party"
    },
    "party_not_found": {
      "message": "Unable to find target, you are currently not in a party. You can only target yourself"
    },
    "item_not_found": {
      "message": "Unable to use {item}, you don't own this item."
    }
  },
  "issues": {
    "deprecated_task_entity": {
      "title": "The Habitica {task_name} sensor is deprecated",
      "description": "The Habitica entity `{entity}` is deprecated and will be removed in a future release.\nPlease update your automations and scripts to replace the sensor entity with the newly added todo entity.\nWhen you are done migrating you can disable `{entity}`."
    },
    "deprecated_api_call": {
      "title": "The Habitica action habitica.api_call is deprecated",
      "description": "The Habitica action `habitica.api_call` is deprecated and will be removed in Home Assistant 2025.5.0.\n\nPlease update your automations and scripts to use other Habitica actions and entities."
    }
  },
  "services": {
    "api_call": {
      "name": "API name",
      "description": "Calls Habitica API.",
      "fields": {
        "name": {
          "name": "[%key:common::config_flow::data::name%]",
          "description": "Habitica's username to call for."
        },
        "path": {
          "name": "[%key:common::config_flow::data::path%]",
          "description": "Items from API URL in form of an array with method attached at the end. Consult https://habitica.com/apidoc/. Example uses https://habitica.com/apidoc/#api-Task-CreateUserTasks."
        },
        "args": {
          "name": "Args",
          "description": "Any additional JSON or URL parameter arguments. See apidoc mentioned for path. Example uses same API endpoint."
        }
      }
    },
    "cast_skill": {
      "name": "Cast a skill",
      "description": "Use a skill or spell from your Habitica character on a specific task to affect its progress or status.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "Choose the Habitica character to cast the skill."
        },
        "skill": {
          "name": "Skill",
          "description": "Select the skill or spell you want to cast on the task. Only skills corresponding to your character's class can be used."
        },
        "task": {
          "name": "Task name",
          "description": "The name (or task ID) of the task you want to target with the skill or spell."
        }
      }
    },
    "accept_quest": {
      "name": "Accept a quest invitation",
      "description": "Accept a pending invitation to a quest.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "Choose the Habitica character for which to perform the action."
        }
      }
    },
    "reject_quest": {
      "name": "Reject a quest invitation",
      "description": "Reject a pending invitation to a quest.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "[%key:component::habitica::services::accept_quest::fields::config_entry::description%]"
        }
      }
    },
    "leave_quest": {
      "name": "Leave a quest",
      "description": "Leave the current quest you are participating in.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "[%key:component::habitica::services::accept_quest::fields::config_entry::description%]"
        }
      }
    },
    "abort_quest": {
      "name": "Abort an active quest",
      "description": "Terminate your party's ongoing quest. All progress will be lost and the quest roll returned to the owner's inventory. Only quest leader or group leader can perform this action.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "[%key:component::habitica::services::accept_quest::fields::config_entry::description%]"
        }
      }
    },
    "cancel_quest": {
      "name": "Cancel a pending quest",
      "description": "Cancel a quest that has not yet startet. All accepted and pending invitations will be canceled and the quest roll returned to the owner's inventory. Only quest leader or group leader can perform this action.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "[%key:component::habitica::services::accept_quest::fields::config_entry::description%]"
        }
      }
    },
    "start_quest": {
      "name": "Force-start a pending quest",
      "description": "Begin the quest immediately, bypassing any pending invitations that haven't been accepted or rejected. Only quest leader or group leader can perform this action.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "[%key:component::habitica::services::accept_quest::fields::config_entry::description%]"
        }
      }
    },
    "score_habit": {
      "name": "Track a habit",
      "description": "Increase the positive or negative streak of a habit to track its progress.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "Select the Habitica character tracking your habit."
        },
        "task": {
          "name": "Habit name",
          "description": "The name (or task ID) of the Habitica habit."
        },
        "direction": {
          "name": "Reward or loss",
          "description": "Is it positive or negative progress you want to track for your habit."
        }
      }
    },
    "score_reward": {
      "name": "Buy a reward",
      "description": "Reward yourself and buy one of your custom rewards with gold earned by fulfilling tasks.",
      "fields": {
        "config_entry": {
          "name": "[%key:component::habitica::common::config_entry_name%]",
          "description": "Select the Habitica character buying the reward."
        },
        "task": {
          "name": "Reward name",
          "description": "The name (or task ID) of the custom reward."
        }
      }
    },
    "transformation": {
      "name": "Use a transformation item",
      "description": "Use a transformation item from your Habitica character's inventory on a member of your party or yourself.",
      "fields": {
        "config_entry": {
          "name": "Select character",
          "description": "Choose the Habitica character to use the transformation item."
        },
        "item": {
          "name": "Transformation item",
          "description": "Select the transformation item you want to use. Item must be in the characters inventory."
        },
        "target": {
          "name": "Target character",
          "description": "The name of the character you want to use the transformation item on. You can also specify the players username or user ID."
        }
      }
    }
  },
  "selector": {
    "skill_select": {
      "options": {
        "fireball": "Mage: Burst of flames",
        "pickpocket": "Rogue: Pickpocket",
        "backstab": "Rogue: Backstab",
        "smash": "Warrior: Brutal smash"
      }
    },
    "transformation_item_select": {
      "options": {
        "snowball": "Snowball",
        "spooky_sparkles": "Spooky sparkles",
        "seafoam": "Seafoam",
        "shiny_seed": "Shiny seed"
      }
    }
  }
}
