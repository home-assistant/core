{
  "config": {
    "step": {
      "connection_type": {
        "title": "KNX connection",
        "description": "'Automatic' performs a gateway scan on start, to find a KNX IP interface. It will connect via a tunnel. (Not available if a gateway scan was not successful.)\n\n'Tunneling' will connect to a specific KNX IP interface over a tunnel.\n\n'Routing' will use Multicast to communicate with KNX IP routers.",
        "data": {
          "connection_type": "KNX connection type"
        },
        "data_description": {
          "connection_type": "Please select the connection type you want to use for your KNX connection."
        }
      },
      "tunnel": {
        "title": "Tunnel",
        "data": {
          "gateway": "Please select a gateway from the list."
        },
        "data_description": {
          "gateway": "Select a KNX tunneling interface you want use for the connection."
        }
      },
      "tcp_tunnel_endpoint": {
        "title": "Tunnel endpoint",
        "data": {
          "tunnel_endpoint_ia": "Select the tunnel endpoint used for the connection."
        },
        "data_description": {
          "tunnel_endpoint_ia": "'Automatic' selects a free tunnel endpoint for you when connecting. If you're unsure, this is the best option."
        }
      },
      "manual_tunnel": {
        "title": "Tunnel settings",
        "description": "Please enter the connection information of your tunneling device.",
        "data": {
          "tunneling_type": "KNX tunneling type",
          "host": "[%key:common::config_flow::data::host%]",
          "port": "[%key:common::config_flow::data::port%]",
          "route_back": "Route back / NAT mode",
          "local_ip": "Local IP interface"
        },
        "data_description": {
          "tunneling_type": "Select the tunneling type of your KNX/IP tunneling device. Older interfaces may only support `UDP`.",
          "host": "IP address or hostname of the KNX/IP tunneling device.",
          "port": "Port used by the KNX/IP tunneling device.",
          "route_back": "Enable if your KNXnet/IP tunneling server is behind NAT. Only applies for UDP connections.",
          "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery."
        }
      },
      "secure_key_source_menu_tunnel": {
        "title": "KNX IP Secure",
        "description": "How do you want to configure KNX/IP Secure?",
        "menu_options": {
          "secure_knxkeys": "Use a `.knxkeys` file providing IP Secure keys",
          "secure_tunnel_manual": "Configure IP Secure credentials manually"
        }
      },
      "secure_key_source_menu_routing": {
        "title": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::title%]",
        "description": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::description%]",
        "menu_options": {
          "secure_knxkeys": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::menu_options::secure_knxkeys%]",
          "secure_routing_manual": "Configure IP Secure backbone key manually"
        }
      },
      "secure_knxkeys": {
        "title": "Import KNX Keyring",
        "description": "The Keyring is used to encrypt and decrypt KNX IP Secure communication.",
        "data": {
          "knxkeys_file": "Keyring file",
          "knxkeys_password": "Keyring password"
        },
        "data_description": {
          "knxkeys_file": "Select a `.knxkeys` file. This can be exported from ETS.",
          "knxkeys_password": "The password to open the `.knxkeys` file was set when exporting."
        }
      },
      "knxkeys_tunnel_select": {
        "title": "[%key:component::knx::config::step::tcp_tunnel_endpoint::title%]",
        "data": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data::tunnel_endpoint_ia%]"
        },
        "data_description": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data_description::tunnel_endpoint_ia%]"
        }
      },
      "secure_tunnel_manual": {
        "title": "Secure tunnelling",
        "description": "Please enter your IP Secure information.",
        "data": {
          "user_id": "User ID",
          "user_password": "User password",
          "device_authentication": "Device authentication password"
        },
        "data_description": {
          "user_id": "This usually is tunnel number +1. So first tunnel in the list presented in ETS would have User-ID `2`.",
          "user_password": "Password for the specific tunnel connection set in the 'Properties' panel of the tunnel in ETS.",
          "device_authentication": "This is set in the 'IP' panel of the interface in ETS."
        }
      },
      "secure_routing_manual": {
        "title": "Secure routing",
        "description": "[%key:component::knx::config::step::secure_tunnel_manual::description%]",
        "data": {
          "backbone_key": "Backbone key",
          "sync_latency_tolerance": "Network latency tolerance"
        },
        "data_description": {
          "backbone_key": "Can be seen in the 'Security' report of your ETS project. Eg. `00112233445566778899AABBCCDDEEFF`",
          "sync_latency_tolerance": "Should be equal to the backbone configuration of your ETS project. Default is `1000`"
        }
      },
      "routing": {
        "title": "Routing",
        "description": "Please configure the routing options.",
        "data": {
          "individual_address": "Individual address",
          "routing_secure": "KNX IP Secure Routing",
          "multicast_group": "Multicast group",
          "multicast_port": "Multicast port",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data::local_ip%]"
        },
        "data_description": {
          "individual_address": "KNX address to be used by Home Assistant, e.g. `0.0.4`",
          "routing_secure": "Select if your installation uses encrypted communication according to the KNX IP Secure standard. This setting requires compatible devices and configuration. You'll be prompted for credentials in the next step.",
          "multicast_group": "Multicast group used by your installation. Default is `224.0.23.12`",
          "multicast_port": "Multicast port used by your installation. Default is `3671`",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data_description::local_ip%]"
        }
      }
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_backbone_key": "Invalid backbone key. 32 hexadecimal numbers expected.",
      "invalid_individual_address": "Value does not match pattern for KNX individual address.\n'area.line.device'",
      "invalid_ip_address": "Invalid IPv4 address.",
      "keyfile_invalid_signature": "The password to decrypt the `.knxkeys` file is wrong.",
      "keyfile_no_backbone_key": "The `.knxkeys` file does not contain a backbone key for secure routing.",
      "keyfile_no_tunnel_for_host": "The `.knxkeys` file does not contain credentials for host `{host}`.",
      "keyfile_not_found": "The specified `.knxkeys` file was not found in the path config/.storage/knx/",
      "no_router_discovered": "No KNXnet/IP router was discovered on the network.",
      "no_tunnel_discovered": "Could not find a KNX tunneling server on your network.",
      "unsupported_tunnel_type": "Selected tunnelling type not supported by gateway."
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "KNX Settings",
        "menu_options": {
          "connection_type": "Configure KNX interface",
          "communication_settings": "Communication settings",
          "secure_knxkeys": "Import a `.knxkeys` file"
        }
      },
      "communication_settings": {
        "title": "[%key:component::knx::options::step::init::menu_options::communication_settings%]",
        "data": {
          "state_updater": "State updater",
          "rate_limit": "Rate limit",
          "telegram_log_size": "Telegram history limit"
        },
        "data_description": {
          "state_updater": "Sets the default behavior for reading state addresses from the KNX Bus.\nWhen enabled, Home Assistant will monitor each group address and read it from the bus if no value has been received for one hour.\nWhen disabled, state addresses will only be read once after a bus connection is established.\nThis behavior can be overridden for individual entities using the `sync_state` option.",
          "rate_limit": "Maximum outgoing telegrams per second.\n`0` to disable limit. Recommended: `0` or between `20` and `40`",
          "telegram_log_size": "Telegrams to keep in memory for KNX panel group monitor. Maximum: {telegram_log_size_max}"
        }
      },
      "connection_type": {
        "title": "[%key:component::knx::config::step::connection_type::title%]",
        "description": "[%key:component::knx::config::step::connection_type::description%]",
        "data": {
          "connection_type": "[%key:component::knx::config::step::connection_type::data::connection_type%]"
        },
        "data_description": {
          "connection_type": "[%key:component::knx::config::step::connection_type::data_description::connection_type%]"
        }
      },
      "tunnel": {
        "title": "[%key:component::knx::config::step::tunnel::title%]",
        "data": {
          "gateway": "[%key:component::knx::config::step::tunnel::data::gateway%]"
        },
        "data_description": {
          "gateway": "[%key:component::knx::config::step::tunnel::data_description::gateway%]"
        }
      },
      "tcp_tunnel_endpoint": {
        "title": "[%key:component::knx::config::step::tcp_tunnel_endpoint::title%]",
        "data": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data::tunnel_endpoint_ia%]"
        },
        "data_description": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data_description::tunnel_endpoint_ia%]"
        }
      },
      "manual_tunnel": {
        "title": "[%key:component::knx::config::step::manual_tunnel::title%]",
        "description": "[%key:component::knx::config::step::manual_tunnel::description%]",
        "data": {
          "tunneling_type": "[%key:component::knx::config::step::manual_tunnel::data::tunneling_type%]",
          "port": "[%key:common::config_flow::data::port%]",
          "host": "[%key:common::config_flow::data::host%]",
          "route_back": "[%key:component::knx::config::step::manual_tunnel::data::route_back%]",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data::local_ip%]"
        },
        "data_description": {
          "tunneling_type": "[%key:component::knx::config::step::manual_tunnel::data_description::tunneling_type%]",
          "port": "[%key:component::knx::config::step::manual_tunnel::data_description::port%]",
          "host": "[%key:component::knx::config::step::manual_tunnel::data_description::host%]",
          "route_back": "[%key:component::knx::config::step::manual_tunnel::data_description::route_back%]",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data_description::local_ip%]"
        }
      },
      "secure_key_source_menu_tunnel": {
        "title": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::title%]",
        "description": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::description%]",
        "menu_options": {
          "secure_knxkeys": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::menu_options::secure_knxkeys%]",
          "secure_tunnel_manual": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::menu_options::secure_tunnel_manual%]"
        }
      },
      "secure_key_source_menu_routing": {
        "title": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::title%]",
        "description": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::description%]",
        "menu_options": {
          "secure_knxkeys": "[%key:component::knx::config::step::secure_key_source_menu_tunnel::menu_options::secure_knxkeys%]",
          "secure_routing_manual": "[%key:component::knx::config::step::secure_key_source_menu_routing::menu_options::secure_routing_manual%]"
        }
      },
      "secure_knxkeys": {
        "title": "[%key:component::knx::config::step::secure_knxkeys::title%]",
        "description": "[%key:component::knx::config::step::secure_knxkeys::description%]",
        "data": {
          "knxkeys_file": "[%key:component::knx::config::step::secure_knxkeys::data::knxkeys_file%]",
          "knxkeys_password": "[%key:component::knx::config::step::secure_knxkeys::data::knxkeys_password%]"
        },
        "data_description": {
          "knxkeys_file": "[%key:component::knx::config::step::secure_knxkeys::data_description::knxkeys_file%]",
          "knxkeys_password": "[%key:component::knx::config::step::secure_knxkeys::data_description::knxkeys_password%]"
        }
      },
      "knxkeys_tunnel_select": {
        "title": "[%key:component::knx::config::step::tcp_tunnel_endpoint::title%]",
        "data": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data::tunnel_endpoint_ia%]"
        },
        "data_description": {
          "tunnel_endpoint_ia": "[%key:component::knx::config::step::tcp_tunnel_endpoint::data_description::tunnel_endpoint_ia%]"
        }
      },
      "secure_tunnel_manual": {
        "title": "[%key:component::knx::config::step::secure_tunnel_manual::title%]",
        "description": "[%key:component::knx::config::step::secure_tunnel_manual::description%]",
        "data": {
          "user_id": "[%key:component::knx::config::step::secure_tunnel_manual::data::user_id%]",
          "user_password": "[%key:component::knx::config::step::secure_tunnel_manual::data::user_password%]",
          "device_authentication": "[%key:component::knx::config::step::secure_tunnel_manual::data::device_authentication%]"
        },
        "data_description": {
          "user_id": "[%key:component::knx::config::step::secure_tunnel_manual::data_description::user_id%]",
          "user_password": "[%key:component::knx::config::step::secure_tunnel_manual::data_description::user_password%]",
          "device_authentication": "[%key:component::knx::config::step::secure_tunnel_manual::data_description::device_authentication%]"
        }
      },
      "secure_routing_manual": {
        "title": "[%key:component::knx::config::step::secure_routing_manual::title%]",
        "description": "[%key:component::knx::config::step::secure_tunnel_manual::description%]",
        "data": {
          "backbone_key": "[%key:component::knx::config::step::secure_routing_manual::data::backbone_key%]",
          "sync_latency_tolerance": "[%key:component::knx::config::step::secure_routing_manual::data::sync_latency_tolerance%]"
        },
        "data_description": {
          "backbone_key": "[%key:component::knx::config::step::secure_routing_manual::data_description::backbone_key%]",
          "sync_latency_tolerance": "[%key:component::knx::config::step::secure_routing_manual::data_description::sync_latency_tolerance%]"
        }
      },
      "routing": {
        "title": "[%key:component::knx::config::step::routing::title%]",
        "description": "[%key:component::knx::config::step::routing::description%]",
        "data": {
          "individual_address": "[%key:component::knx::config::step::routing::data::individual_address%]",
          "routing_secure": "[%key:component::knx::config::step::routing::data::routing_secure%]",
          "multicast_group": "[%key:component::knx::config::step::routing::data::multicast_group%]",
          "multicast_port": "[%key:component::knx::config::step::routing::data::multicast_port%]",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data::local_ip%]"
        },
        "data_description": {
          "individual_address": "[%key:component::knx::config::step::routing::data_description::individual_address%]",
          "routing_secure": "[%key:component::knx::config::step::routing::data_description::routing_secure%]",
          "multicast_group": "[%key:component::knx::config::step::routing::data_description::multicast_group%]",
          "multicast_port": "[%key:component::knx::config::step::routing::data_description::multicast_port%]",
          "local_ip": "[%key:component::knx::config::step::manual_tunnel::data_description::local_ip%]"
        }
      }
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_backbone_key": "[%key:component::knx::config::error::invalid_backbone_key%]",
      "invalid_individual_address": "[%key:component::knx::config::error::invalid_individual_address%]",
      "invalid_ip_address": "[%key:component::knx::config::error::invalid_ip_address%]",
      "keyfile_no_backbone_key": "[%key:component::knx::config::error::keyfile_no_backbone_key%]",
      "keyfile_invalid_signature": "[%key:component::knx::config::error::keyfile_invalid_signature%]",
      "keyfile_no_tunnel_for_host": "[%key:component::knx::config::error::keyfile_no_tunnel_for_host%]",
      "keyfile_not_found": "[%key:component::knx::config::error::keyfile_not_found%]",
      "no_router_discovered": "[%key:component::knx::config::error::no_router_discovered%]",
      "no_tunnel_discovered": "[%key:component::knx::config::error::no_tunnel_discovered%]",
      "unsupported_tunnel_type": "[%key:component::knx::config::error::unsupported_tunnel_type%]"
    }
  },
  "entity": {
    "climate": {
      "knx_climate": {
        "state_attributes": {
          "preset_mode": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::name%]",
            "state": {
              "auto": "Auto",
              "comfort": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::comfort%]",
              "standby": "Standby",
              "economy": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::eco%]",
              "building_protection": "Building protection"
            }
          }
        }
      }
    },
    "sensor": {
      "individual_address": {
        "name": "[%key:component::knx::config::step::routing::data::individual_address%]"
      },
      "connected_since": {
        "name": "Connection established"
      },
      "connection_type": {
        "name": "Connection type"
      },
      "telegrams_incoming": {
        "name": "Incoming telegrams",
        "unit_of_measurement": "[%key:component::knx::entity::sensor::telegram_count::unit_of_measurement%]"
      },
      "telegrams_incoming_error": {
        "name": "Incoming telegram errors",
        "unit_of_measurement": "errors"
      },
      "telegrams_outgoing": {
        "name": "Outgoing telegrams",
        "unit_of_measurement": "[%key:component::knx::entity::sensor::telegram_count::unit_of_measurement%]"
      },
      "telegrams_outgoing_error": {
        "name": "Outgoing telegram errors",
        "unit_of_measurement": "[%key:component::knx::entity::sensor::telegrams_incoming_error::unit_of_measurement%]"
      },
      "telegram_count": {
        "name": "Telegrams",
        "unit_of_measurement": "telegrams"
      }
    }
  },
  "device_automation": {
    "trigger_type": {
      "telegram": "Telegram"
    },
    "extra_fields": {
      "destination": "Group addresses",
      "group_value_write": "GroupValueWrite",
      "group_value_read": "GroupValueRead",
      "group_value_response": "GroupValueResponse",
      "incoming": "Incoming",
      "outgoing": "Outgoing"
    },
    "extra_fields_descriptions": {
      "destination": "The trigger will listen to telegrams sent or received on these group addresses. If no address is selected, the trigger will fire for every group address.",
      "group_value_write": "Listen on GroupValueWrite telegrams.",
      "group_value_read": "Listen on GroupValueRead telegrams.",
      "group_value_response": "Listen on GroupValueResponse telegrams.",
      "incoming": "Listen on incoming telegrams.",
      "outgoing": "Listen on outgoing telegrams."
    }
  },
  "services": {
    "send": {
      "name": "Send to KNX bus",
      "description": "Sends arbitrary data directly to the KNX bus.",
      "fields": {
        "address": {
          "name": "Group address",
          "description": "Group address(es) to write to. Lists will send to multiple group addresses successively."
        },
        "payload": {
          "name": "Payload",
          "description": "Payload to send to the bus. Integers are treated as DPT 1/2/3 payloads. For DPTs > 6 bits send a list. Each value represents 1 octet (0-255). Pad with 0 to DPT byte length."
        },
        "type": {
          "name": "Value type",
          "description": "If set, the payload will not be sent as raw bytes, but encoded as given DPT. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types)."
        },
        "response": {
          "name": "Send as Response",
          "description": "Whether the telegram should be sent as a `GroupValueResponse` instead of a `GroupValueWrite`."
        }
      }
    },
    "read": {
      "name": "Read from KNX bus",
      "description": "Sends GroupValueRead requests to the KNX bus. Response can be used from `knx_event` and will be processed in KNX entities.",
      "fields": {
        "address": {
          "name": "[%key:component::knx::services::send::fields::address::name%]",
          "description": "Group address(es) to send read request to. Lists will read multiple group addresses."
        }
      }
    },
    "event_register": {
      "name": "Register knx_event",
      "description": "Adds or removes group addresses to knx_event filter for triggering `knx_event`s. Only addresses added with this action can be removed.",
      "fields": {
        "address": {
          "name": "[%key:component::knx::services::send::fields::address::name%]",
          "description": "Group address(es) that shall be added or removed. Lists are allowed."
        },
        "type": {
          "name": "Value type",
          "description": "If set, the payload will be decoded as given DPT in the event data `value` key. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types)."
        },
        "remove": {
          "name": "Remove event registration",
          "description": "Whether the group address(es) will be removed."
        }
      }
    },
    "exposure_register": {
      "name": "Expose to KNX bus",
      "description": "Adds or removes exposures to KNX bus. Only exposures added with this action can be removed.",
      "fields": {
        "address": {
          "name": "[%key:component::knx::services::send::fields::address::name%]",
          "description": "Group address state or attribute updates will be sent to. GroupValueRead requests will be answered. Per address only one exposure can be registered."
        },
        "type": {
          "name": "Value type",
          "description": "Telegrams will be encoded as given DPT. 'binary' and all KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types)."
        },
        "entity_id": {
          "name": "Entity",
          "description": "Entity ID whose state or attribute shall be exposed."
        },
        "attribute": {
          "name": "Entity attribute",
          "description": "Attribute of the entity that shall be sent to the KNX bus. If not set the state will be sent. Eg. for a light the state is eigther “on” or “off” - with attribute you can expose its “brightness”."
        },
        "default": {
          "name": "Default value",
          "description": "Default value to send to the bus if the state or attribute value is None. Eg. a light with state “off” has no brightness attribute so a default value of 0 could be used. If not set (or None) no value would be sent to the bus and a GroupReadRequest to the address would return the last known value."
        },
        "remove": {
          "name": "Remove exposure",
          "description": "Whether the exposure should be removed. Only the 'Address' field is required for removal."
        }
      }
    },
    "reload": {
      "name": "[%key:common::action::reload%]",
      "description": "Reloads the KNX integration."
    }
  },
  "config_panel": {
    "config": {
      "sensor": {
        "config": {
          "description": "Create a sensor that reads data from a KNX group address. Sensors can monitor various KNX devices and provide their states in Home Assistant.",
          "label": "KNX Sensor Configuration",
          "entity_config": {
            "description": "Configure the Home Assistant entity settings for the KNX sensor. This includes naming, categorization, and device grouping.",
            "label": "Entity Configuration",
            "device_info": {
              "description": "Associate this entity with a specific device. Devices allow grouping of multiple entities for better organization and management.",
              "label": "Device"
            },
            "entity_category": {
              "description": "Define the category of the entity (e.g., 'diagnostic', 'config'). This affects how the entity is displayed in the Home Assistant UI.",
              "label": "Entity Category"
            },
            "name": {
              "description": "Set a custom name for the entity. This name will be displayed in the Home Assistant UI.",
              "label": "Entity Name"
            }
          },
          "platform_config": {
            "description": "Configure the KNX sensor settings, including group addresses, datapoint types, and advanced options.",
            "label": "Sensor Configuration",
            "advanced": {
              "description": "Configure advanced settings for the KNX sensor, such as state synchronization and callback behavior.",
              "label": "Advanced Settings",
              "sync_state": {
                "description": "Enable this option to actively request state updates from the KNX bus for state addresses. This ensures the sensor reflects the latest state of the KNX device.",
                "label": "State Synchronization"
              },
              "always_callback": {
                "description": "Enable this option to trigger state updates in Home Assistant even if the received telegram has the same payload as the previous one. Useful for ensuring consistent state updates.",
                "label": "Always Trigger Callback"
              }
            },
            "ga_sensor": {
              "description": "Configure the KNX group address and datapoint type (DPT) for the sensor. The group address defines where the sensor reads data from the KNX bus.",
              "label": "Sensor Group Address",
              "dpt": {
                "description": "Set the Datapoint Type (DPT) for the sensor. The DPT defines the format and interpretation of the data received from the KNX bus.",
                "label": "Datapoint Type (DPT)"
              },
              "state": {
                "description": "Define the group address for reading the sensor's state. This address is used to actively request the current state from the KNX bus.",
                "label": "State Address"
              },
              "passive": {
                "description": "Define the group address for passive state updates. The sensor will update its state when it receives telegrams on this address without actively requesting data.",
                "label": "Passive State Address"
              }
            },
            "device_class": {
              "description": "Set the device class of the sensor to define its type and icon in Home Assistant (e.g., 'temperature', 'humidity').",
              "label": "Device Class"
            },
            "state_class": {
              "description": "Set the state class of the sensor to define how its values are interpreted (e.g., 'measurement', 'total_increasing').",
              "label": "State Class"
            }
          }
        }
      }
    },
    "options": {
      "sensordeviceclass": {
        "apparent_power": {
          "label": "PLACEHOLDER"
        },
        "aqi": {
          "label": "PLACEHOLDER"
        },
        "area": {
          "label": "PLACEHOLDER"
        },
        "atmospheric_pressure": {
          "label": "PLACEHOLDER"
        },
        "battery": {
          "label": "PLACEHOLDER"
        },
        "blood_glucose_concentration": {
          "label": "PLACEHOLDER"
        },
        "carbon_dioxide": {
          "label": "PLACEHOLDER"
        },
        "carbon_monoxide": {
          "label": "PLACEHOLDER"
        },
        "conductivity": {
          "label": "PLACEHOLDER"
        },
        "current": {
          "label": "PLACEHOLDER"
        },
        "data_rate": {
          "label": "PLACEHOLDER"
        },
        "data_size": {
          "label": "PLACEHOLDER"
        },
        "date": {
          "label": "PLACEHOLDER"
        },
        "distance": {
          "label": "PLACEHOLDER"
        },
        "duration": {
          "label": "PLACEHOLDER"
        },
        "energy": {
          "label": "PLACEHOLDER"
        },
        "energy_storage": {
          "label": "PLACEHOLDER"
        },
        "enum": {
          "label": "PLACEHOLDER"
        },
        "frequency": {
          "label": "PLACEHOLDER"
        },
        "gas": {
          "label": "PLACEHOLDER"
        },
        "humidity": {
          "label": "PLACEHOLDER"
        },
        "illuminance": {
          "label": "PLACEHOLDER"
        },
        "irradiance": {
          "label": "PLACEHOLDER"
        },
        "moisture": {
          "label": "PLACEHOLDER"
        },
        "monetary": {
          "label": "PLACEHOLDER"
        },
        "nitrogen_dioxide": {
          "label": "PLACEHOLDER"
        },
        "nitrogen_monoxide": {
          "label": "PLACEHOLDER"
        },
        "nitrous_oxide": {
          "label": "PLACEHOLDER"
        },
        "ozone": {
          "label": "PLACEHOLDER"
        },
        "ph": {
          "label": "PLACEHOLDER"
        },
        "pm1": {
          "label": "PLACEHOLDER"
        },
        "pm10": {
          "label": "PLACEHOLDER"
        },
        "pm25": {
          "label": "PLACEHOLDER"
        },
        "power": {
          "label": "PLACEHOLDER"
        },
        "power_factor": {
          "label": "PLACEHOLDER"
        },
        "precipitation": {
          "label": "PLACEHOLDER"
        },
        "precipitation_intensity": {
          "label": "PLACEHOLDER"
        },
        "pressure": {
          "label": "PLACEHOLDER"
        },
        "reactive_power": {
          "label": "PLACEHOLDER"
        },
        "signal_strength": {
          "label": "PLACEHOLDER"
        },
        "sound_pressure": {
          "label": "PLACEHOLDER"
        },
        "speed": {
          "label": "PLACEHOLDER"
        },
        "sulphur_dioxide": {
          "label": "PLACEHOLDER"
        },
        "temperature": {
          "label": "PLACEHOLDER"
        },
        "timestamp": {
          "label": "PLACEHOLDER"
        },
        "volatile_organic_compounds": {
          "label": "PLACEHOLDER"
        },
        "volatile_organic_compounds_parts": {
          "label": "PLACEHOLDER"
        },
        "voltage": {
          "label": "PLACEHOLDER"
        },
        "volume": {
          "label": "PLACEHOLDER"
        },
        "volume_flow_rate": {
          "label": "PLACEHOLDER"
        },
        "volume_storage": {
          "label": "PLACEHOLDER"
        },
        "water": {
          "label": "PLACEHOLDER"
        },
        "weight": {
          "label": "PLACEHOLDER"
        },
        "wind_speed": {
          "label": "PLACEHOLDER"
        }
      },
      "sensorstateclass": {
        "measurement": {
          "label": "PLACEHOLDER"
        },
        "total": {
          "label": "PLACEHOLDER"
        },
        "total_increasing": {
          "label": "PLACEHOLDER"
        }
      },
      "entity_category": {
        "diagnostic": {
          "label": "PLACEHOLDER"
        }
      },
      "dpt": {
        "12": {
          "label": "12 4byte_unsigned"
        },
        "12001": {
          "label": "12.001 pulse_4_ucount"
        },
        "12100": {
          "label": "12.100 long_time_period_sec (s)"
        },
        "12101": {
          "label": "12.101 long_time_period_min (min)"
        },
        "12102": {
          "label": "12.102 long_time_period_hrs (h)"
        },
        "121200": {
          "label": "12.1200 volume_liquid_litre (l)"
        },
        "121201": {
          "label": "12.1201 volume_m3 (m³)"
        },
        "13": {
          "label": "13 4byte_signed"
        },
        "13001": {
          "label": "13.001 pulse_4byte"
        },
        "13002": {
          "label": "13.002 flow_rate_m3h (m³/h)"
        },
        "13010": {
          "label": "13.010 active_energy (Wh)"
        },
        "13011": {
          "label": "13.011 apparant_energy (VAh)"
        },
        "13012": {
          "label": "13.012 reactive_energy (VARh)"
        },
        "13013": {
          "label": "13.013 active_energy_kwh (kWh)"
        },
        "13014": {
          "label": "13.014 apparant_energy_kvah (kVAh)"
        },
        "13015": {
          "label": "13.015 reactive_energy_kvarh (kVARh)"
        },
        "13016": {
          "label": "13.016 active_energy_mwh (MWh)"
        },
        "13100": {
          "label": "13.100 long_delta_timesec (s)"
        },
        "14": {
          "label": "14 4byte_float"
        },
        "14000": {
          "label": "14.000 acceleration (m/s²)"
        },
        "14001": {
          "label": "14.001 acceleration_angular (rad/s²)"
        },
        "14002": {
          "label": "14.002 activation_energy (J/mol)"
        },
        "14003": {
          "label": "14.003 activity (s⁻¹)"
        },
        "14004": {
          "label": "14.004 mol (mol)"
        },
        "14005": {
          "label": "14.005 amplitude"
        },
        "14006": {
          "label": "14.006 angle_rad (rad)"
        },
        "14007": {
          "label": "14.007 angle_deg (°)"
        },
        "14008": {
          "label": "14.008 angular_momentum (J·s)"
        },
        "14009": {
          "label": "14.009 angular_velocity (rad/s)"
        },
        "14010": {
          "label": "14.010 area (m²)"
        },
        "14011": {
          "label": "14.011 capacitance (F)"
        },
        "14012": {
          "label": "14.012 charge_density_surface (C/m²)"
        },
        "14013": {
          "label": "14.013 charge_density_volume (C/m³)"
        },
        "14014": {
          "label": "14.014 compressibility (m²/N)"
        },
        "14015": {
          "label": "14.015 conductance (S)"
        },
        "14016": {
          "label": "14.016 electrical_conductivity (S/m)"
        },
        "14017": {
          "label": "14.017 density (kg/m³)"
        },
        "14018": {
          "label": "14.018 electric_charge (C)"
        },
        "14019": {
          "label": "14.019 electric_current (A)"
        },
        "14020": {
          "label": "14.020 electric_current_density (A/m²)"
        },
        "14021": {
          "label": "14.021 electric_dipole_moment (C·m)"
        },
        "14022": {
          "label": "14.022 electric_displacement (C/m²)"
        },
        "14023": {
          "label": "14.023 electric_field_strength (V/m)"
        },
        "14024": {
          "label": "14.024 electric_flux (C)"
        },
        "14025": {
          "label": "14.025 electric_flux_density (C/m²)"
        },
        "14026": {
          "label": "14.026 electric_polarization (C/m²)"
        },
        "14027": {
          "label": "14.027 electric_potential (V)"
        },
        "14028": {
          "label": "14.028 electric_potential_difference (V)"
        },
        "14029": {
          "label": "14.029 electromagnetic_moment (A·m²)"
        },
        "14030": {
          "label": "14.030 electromotive_force (V)"
        },
        "14031": {
          "label": "14.031 energy (J)"
        },
        "14032": {
          "label": "14.032 force (N)"
        },
        "14033": {
          "label": "14.033 frequency (Hz)"
        },
        "14034": {
          "label": "14.034 angular_frequency (rad/s)"
        },
        "14035": {
          "label": "14.035 heatcapacity (J/K)"
        },
        "14036": {
          "label": "14.036 heatflowrate (W)"
        },
        "14037": {
          "label": "14.037 heat_quantity (J)"
        },
        "14038": {
          "label": "14.038 impedance (Ω)"
        },
        "14039": {
          "label": "14.039 length (m)"
        },
        "14040": {
          "label": "14.040 light_quantity (lm·s)"
        },
        "14041": {
          "label": "14.041 luminance (cd/m²)"
        },
        "14042": {
          "label": "14.042 luminous_flux (lm)"
        },
        "14043": {
          "label": "14.043 luminous_intensity (cd)"
        },
        "14044": {
          "label": "14.044 magnetic_field_strength (A/m)"
        },
        "14045": {
          "label": "14.045 magnetic_flux (Wb)"
        },
        "14046": {
          "label": "14.046 magnetic_flux_density (T)"
        },
        "14047": {
          "label": "14.047 magnetic_moment (A·m²)"
        },
        "14048": {
          "label": "14.048 magnetic_polarization (T)"
        },
        "14049": {
          "label": "14.049 magnetization (A/m)"
        },
        "14050": {
          "label": "14.050 magnetomotive_force (A)"
        },
        "14051": {
          "label": "14.051 mass (kg)"
        },
        "14052": {
          "label": "14.052 mass_flux (kg/s)"
        },
        "14053": {
          "label": "14.053 momentum (N·s)"
        },
        "14054": {
          "label": "14.054 phaseanglerad (rad)"
        },
        "14055": {
          "label": "14.055 phaseangledeg (°)"
        },
        "14056": {
          "label": "14.056 power (W)"
        },
        "14057": {
          "label": "14.057 powerfactor"
        },
        "14058": {
          "label": "14.058 pressure (Pa)"
        },
        "14059": {
          "label": "14.059 reactance (Ω)"
        },
        "14060": {
          "label": "14.060 resistance (Ω)"
        },
        "14061": {
          "label": "14.061 resistivity (Ω·m)"
        },
        "14062": {
          "label": "14.062 self_inductance (H)"
        },
        "14063": {
          "label": "14.063 solid_angle (sr)"
        },
        "14064": {
          "label": "14.064 sound_intensity (W/m²)"
        },
        "14065": {
          "label": "14.065 speed (m/s)"
        },
        "14066": {
          "label": "14.066 stress (Pa)"
        },
        "14067": {
          "label": "14.067 surface_tension (N/m)"
        },
        "14068": {
          "label": "14.068 common_temperature (°C)"
        },
        "14069": {
          "label": "14.069 absolute_temperature (K)"
        },
        "14070": {
          "label": "14.070 temperature_difference (K)"
        },
        "14071": {
          "label": "14.071 thermal_capacity (J/K)"
        },
        "14072": {
          "label": "14.072 thermal_conductivity (W/mK)"
        },
        "14073": {
          "label": "14.073 thermoelectric_power (V/K)"
        },
        "14074": {
          "label": "14.074 time_seconds (s)"
        },
        "14075": {
          "label": "14.075 torque (N·m)"
        },
        "14076": {
          "label": "14.076 volume (m³)"
        },
        "14077": {
          "label": "14.077 volume_flux (m³/s)"
        },
        "14078": {
          "label": "14.078 weight (N)"
        },
        "14079": {
          "label": "14.079 work (J)"
        },
        "14080": {
          "label": "14.080 apparent_power (VA)"
        },
        "16000": {
          "label": "16.000 string"
        },
        "16001": {
          "label": "16.001 latin_1"
        },
        "17001": {
          "label": "17.001 scene_number"
        },
        "29": {
          "label": "29 8byte_signed"
        },
        "29010": {
          "label": "29.010 active_energy_8byte (Wh)"
        },
        "29011": {
          "label": "29.011 apparant_energy_8byte (VAh)"
        },
        "29012": {
          "label": "29.012 reactive_energy_8byte (VARh)"
        },
        "5": {
          "label": "5 1byte_unsigned"
        },
        "5001": {
          "label": "5.001 percent (%)"
        },
        "5003": {
          "label": "5.003 angle (°)"
        },
        "5004": {
          "label": "5.004 percentU8 (%)"
        },
        "5005": {
          "label": "5.005 decimal_factor"
        },
        "5006": {
          "label": "5.006 tariff"
        },
        "5010": {
          "label": "5.010 pulse (counter pulses)"
        },
        "6": {
          "label": "6 1byte_signed"
        },
        "6001": {
          "label": "6.001 percentV8 (%)"
        },
        "6010": {
          "label": "6.010 counter_pulses (counter pulses)"
        },
        "7": {
          "label": "7 2byte_unsigned"
        },
        "7001": {
          "label": "7.001 pulse_2byte (pulses)"
        },
        "7002": {
          "label": "7.002 time_period_msec (ms)"
        },
        "7003": {
          "label": "7.003 time_period_10msec (ms)"
        },
        "7004": {
          "label": "7.004 time_period_100msec (ms)"
        },
        "7005": {
          "label": "7.005 time_period_sec (s)"
        },
        "7006": {
          "label": "7.006 time_period_min (min)"
        },
        "7007": {
          "label": "7.007 time_period_hrs (h)"
        },
        "7010": {
          "label": "7.010 unknown"
        },
        "7011": {
          "label": "7.011 length_mm (mm)"
        },
        "7012": {
          "label": "7.012 current (mA)"
        },
        "7013": {
          "label": "7.013 brightness (lx)"
        },
        "7600": {
          "label": "7.600 color_temperature (K)"
        },
        "8": {
          "label": "8 2byte_signed"
        },
        "8001": {
          "label": "8.001 pulse_2byte_signed (pulses)"
        },
        "8002": {
          "label": "8.002 delta_time_ms (ms)"
        },
        "8003": {
          "label": "8.003 delta_time_10ms (ms)"
        },
        "8004": {
          "label": "8.004 delta_time_100ms (ms)"
        },
        "8005": {
          "label": "8.005 delta_time_sec (s)"
        },
        "8006": {
          "label": "8.006 delta_time_min (min)"
        },
        "8007": {
          "label": "8.007 delta_time_hrs (h)"
        },
        "8010": {
          "label": "8.010 percentV16 (%)"
        },
        "8011": {
          "label": "8.011 rotation_angle (°)"
        },
        "8012": {
          "label": "8.012 length_m (m)"
        },
        "9": {
          "label": "9 2byte_float"
        },
        "9001": {
          "label": "9.001 temperature (°C)"
        },
        "9002": {
          "label": "9.002 temperature_difference_2byte (K)"
        },
        "9003": {
          "label": "9.003 temperature_a (K/h)"
        },
        "9004": {
          "label": "9.004 illuminance (lx)"
        },
        "9005": {
          "label": "9.005 wind_speed_ms (m/s)"
        },
        "9006": {
          "label": "9.006 pressure_2byte (Pa)"
        },
        "9007": {
          "label": "9.007 humidity (%)"
        },
        "9008": {
          "label": "9.008 ppm (ppm)"
        },
        "9009": {
          "label": "9.009 air_flow (m³/h)"
        },
        "9010": {
          "label": "9.010 time_1 (s)"
        },
        "9011": {
          "label": "9.011 time_2 (ms)"
        },
        "9020": {
          "label": "9.020 voltage (mV)"
        },
        "9021": {
          "label": "9.021 curr (mA)"
        },
        "9022": {
          "label": "9.022 power_density (W/m²)"
        },
        "9023": {
          "label": "9.023 kelvin_per_percent (K/%)"
        },
        "9024": {
          "label": "9.024 power_2byte (kW)"
        },
        "9025": {
          "label": "9.025 volume_flow (l/h)"
        },
        "9026": {
          "label": "9.026 rain_amount (l/m²)"
        },
        "9027": {
          "label": "9.027 temperature_f (°F)"
        },
        "9028": {
          "label": "9.028 wind_speed_kmh (km/h)"
        },
        "9029": {
          "label": "9.029 absolute_humidity (g/m³)"
        },
        "9030": {
          "label": "9.030 concentration_ugm3 (μg/m³)"
        },
        "960000": {
          "label": "96.0000 unknown"
        }
      }
    }
  }
}
