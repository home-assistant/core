{
  "common": {
    "advanced_options": "Advanced options",
    "availability": "Availability template",
    "code_format": "Code format",
    "device_class": "Device class",
    "device_id_description": "Select a device to link to this entity.",
    "state": "State",
    "turn_off": "Actions on turn off",
    "turn_on": "Actions on turn on",
    "unit_of_measurement": "Unit of measurement"
  },
  "config": {
    "step": {
      "alarm_control_panel": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "value_template": "[%key:component::template::common::state%]",
          "name": "[%key:common::config_flow::data::name%]",
          "disarm": "Actions on disarm",
          "arm_away": "Actions on arm away",
          "arm_custom_bypass": "Actions on arm custom bypass",
          "arm_home": "Actions on arm home",
          "arm_night": "Actions on arm night",
          "arm_vacation": "Actions on arm vacation",
          "trigger": "Actions on trigger",
          "code_arm_required": "Code arm required",
          "code_format": "[%key:component::template::common::code_format%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template alarm control panel"
      },
      "binary_sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::common::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template binary sensor"
      },
      "button": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::common::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "press": "Actions on press"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template button"
      },
      "cover": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::common::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "open_cover": "Actions on open",
          "close_cover": "Actions on close",
          "stop_cover": "Actions on stop",
          "position": "Position",
          "set_cover_position": "Actions on set position"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "state": "Defines a template to get the state of the cover. Valid output values from the template are `open`, `opening`, `closing` and `closed` which are directly mapped to the corresponding states.  If both a state and a position are specified, only `opening` and `closing` are set from the state template.",
          "open_cover": "Defines actions to run when the cover is opened.",
          "close_cover": "Defines actions to run when the cover is closed.",
          "stop_cover": "Defines actions to run when the cover is stopped.",
          "position": "Defines a template to get the position of the cover. Value values are numbers between `0` (`closed`) and `100` (`open`).",
          "set_cover_position": "Defines actions to run when the cover is given a `set_cover_position` command."
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template cover"
      },
      "fan": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]",
          "percentage": "Percentage",
          "set_percentage": "Actions on set percentage",
          "speed_count": "Speed count"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "state": "Defines a template to get the state of the fan. Valid values: `on`, `off`.",
          "turn_off": "Defines actions to run when the fan is turned off.",
          "turn_on": "Defines actions to run when the fan is turned on.",
          "percentage": "Defines a template to get the speed percentage of the fan.",
          "set_percentage": "Defines actions to run when the fan is given a speed percentage command.",
          "speed_count": "The number of speeds the fan supports. Used to calculate the percentage step for the `fan.increase_speed` and `fan.decrease_speed` actions."
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template fan"
      },
      "image": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "url": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template image"
      },
      "light": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]",
          "level": "Brightness level",
          "set_level": "Actions on set level",
          "hs": "HS color",
          "set_hs": "Actions on set HS color",
          "temperature": "Color temperature",
          "set_temperature": "Actions on set color temperature"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template light"
      },
      "lock": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "lock": "Actions on lock",
          "unlock": "Actions on unlock",
          "code_format": "[%key:component::template::common::code_format%]",
          "open": "Actions on open"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template lock"
      },
      "number": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "step": "Step value",
          "set_value": "Actions on set value",
          "max": "Maximum value",
          "min": "Minimum value",
          "unit_of_measurement": "[%key:component::template::common::unit_of_measurement%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template number"
      },
      "select": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "select_option": "Actions on select",
          "options": "Available options"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template select"
      },
      "sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::common::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state_class": "[%key:component::sensor::entity_component::_::state_attributes::state_class::name%]",
          "state": "[%key:component::template::common::state%]",
          "unit_of_measurement": "[%key:component::template::common::unit_of_measurement%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template sensor"
      },
      "user": {
        "description": "This helper allows you to create helper entities that define their state using a template.",
        "menu_options": {
          "alarm_control_panel": "Template an alarm control panel",
          "binary_sensor": "Template a binary sensor",
          "button": "Template a button",
          "cover": "Template a cover",
          "fan": "Template a fan",
          "image": "Template an image",
          "light": "Template a light",
          "lock": "Template a lock",
          "number": "Template a number",
          "select": "Template a select",
          "sensor": "Template a sensor",
          "switch": "Template a switch",
          "vacuum": "Template a vacuum"
        },
        "title": "Template helper"
      },
      "switch": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]",
          "value_template": "[%key:component::template::common::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "value_template": "Defines a template to set the state of the switch. If not defined, the switch will optimistically assume all commands are successful."
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template switch"
      },
      "vacuum": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "start": "Actions on turn off",
          "fan_speed": "Fan speed",
          "fan_speeds": "Fan speeds",
          "set_fan_speed": "Actions on set fan speed",
          "stop": "Actions on stop",
          "pause": "Actions on pause",
          "return_to_base": "Actions on return to base",
          "clean_spot": "Actions on clean spot",
          "locate": "Actions on locate"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template vacuum"
      }
    }
  },
  "options": {
    "step": {
      "alarm_control_panel": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "value_template": "[%key:component::template::common::state%]",
          "disarm": "[%key:component::template::config::step::alarm_control_panel::data::disarm%]",
          "arm_away": "[%key:component::template::config::step::alarm_control_panel::data::arm_away%]",
          "arm_custom_bypass": "[%key:component::template::config::step::alarm_control_panel::data::arm_custom_bypass%]",
          "arm_home": "[%key:component::template::config::step::alarm_control_panel::data::arm_home%]",
          "arm_night": "[%key:component::template::config::step::alarm_control_panel::data::arm_night%]",
          "arm_vacation": "[%key:component::template::config::step::alarm_control_panel::data::arm_vacation%]",
          "trigger": "[%key:component::template::config::step::alarm_control_panel::data::trigger%]",
          "code_arm_required": "[%key:component::template::config::step::alarm_control_panel::data::code_arm_required%]",
          "code_format": "[%key:component::template::common::code_format%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::alarm_control_panel::title%]"
      },
      "binary_sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "state": "[%key:component::template::common::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::binary_sensor::title%]"
      },
      "button": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "press": "[%key:component::template::config::step::button::data::press%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::button::title%]"
      },

      "cover": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "state": "[%key:component::template::common::state%]",
          "open_cover": "[%key:component::template::config::step::cover::data::open_cover%]",
          "close_cover": "[%key:component::template::config::step::cover::data::close_cover%]",
          "stop_cover": "[%key:component::template::config::step::cover::data::stop_cover%]",
          "position": "[%key:component::template::config::step::cover::data::position%]",
          "set_cover_position": "[%key:component::template::config::step::cover::data::set_cover_position%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "state": "[%key:component::template::config::step::cover::data_description::state%]",
          "open_cover": "[%key:component::template::config::step::cover::data_description::open_cover%]",
          "close_cover": "[%key:component::template::config::step::cover::data_description::close_cover%]",
          "stop_cover": "[%key:component::template::config::step::cover::data_description::stop_cover%]",
          "position": "[%key:component::template::config::step::cover::data_description::position%]",
          "set_cover_position": "[%key:component::template::config::step::cover::data_description::set_cover_position%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::cover::title%]"
      },
      "fan": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "state": "[%key:component::template::common::state%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]",
          "percentage": "[%key:component::template::config::step::fan::data::percentage%]",
          "set_percentage": "[%key:component::template::config::step::fan::data::set_percentage%]",
          "speed_count": "[%key:component::template::config::step::fan::data::speed_count%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "state": "[%key:component::template::config::step::fan::data_description::state%]",
          "turn_off": "[%key:component::template::config::step::fan::data_description::turn_off%]",
          "turn_on": "[%key:component::template::config::step::fan::data_description::turn_on%]",
          "percentage": "[%key:component::template::config::step::fan::data_description::percentage%]",
          "set_percentage": "[%key:component::template::config::step::fan::data_description::set_percentage%]",
          "speed_count": "[%key:component::template::config::step::fan::data_description::speed_count%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::fan::title%]"
      },
      "image": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "url": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::image::title%]"
      },
      "light": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]",
          "level": "[%key:component::template::config::step::light::data::level%]",
          "set_level": "[%key:component::template::config::step::light::data::set_level%]",
          "hs": "[%key:component::template::config::step::light::data::hs%]",
          "set_hs": "[%key:component::template::config::step::light::data::set_hs%]",
          "temperature": "[%key:component::template::config::step::light::data::temperature%]",
          "set_temperature": "[%key:component::template::config::step::light::data::set_temperature%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::light::title%]"
      },
      "lock": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "state": "[%key:component::template::common::state%]",
          "lock": "[%key:component::template::config::step::lock::data::lock%]",
          "unlock": "[%key:component::template::config::step::lock::data::unlock%]",
          "code_format": "[%key:component::template::common::code_format%]",
          "open": "[%key:component::template::config::step::lock::data::open%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::lock::title%]"
      },
      "number": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "step": "[%key:component::template::config::step::number::data::step%]",
          "set_value": "[%key:component::template::config::step::number::data::set_value%]",
          "max": "[%key:component::template::config::step::number::data::max%]",
          "min": "[%key:component::template::config::step::number::data::min%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::number::title%]"
      },
      "select": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "select_option": "[%key:component::template::config::step::select::data::select_option%]",
          "options": "[%key:component::template::config::step::select::data::options%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::select::title%]"
      },
      "sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::common::device_class%]",
          "state_class": "[%key:component::sensor::entity_component::_::state_attributes::state_class::name%]",
          "state": "[%key:component::template::common::state%]",
          "unit_of_measurement": "[%key:component::template::common::unit_of_measurement%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::sensor::title%]"
      },
      "switch": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "value_template": "[%key:component::template::common::state%]",
          "turn_off": "[%key:component::template::common::turn_off%]",
          "turn_on": "[%key:component::template::common::turn_on%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]",
          "value_template": "[%key:component::template::config::step::switch::data_description::value_template%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "[%key:component::template::config::step::switch::title%]"
      },
      "vacuum": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::common::state%]",
          "start": "[%key:component::template::config::step::vacuum::data::start%]",
          "fan_speed": "[%key:component::template::config::step::vacuum::data::fan_speed%]",
          "fan_speeds": "[%key:component::template::config::step::vacuum::data::fan_speeds%]",
          "set_fan_speed": "[%key:component::template::config::step::vacuum::data::set_fan_speed%]",
          "stop": "[%key:component::template::config::step::vacuum::data::stop%]",
          "pause": "[%key:component::template::config::step::vacuum::data::pause%]",
          "return_to_base": "[%key:component::template::config::step::vacuum::data::return_to_base%]",
          "clean_spot": "[%key:component::template::config::step::vacuum::data::clean_spot%]",
          "locate": "[%key:component::template::config::step::vacuum::data::locate%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::common::device_id_description%]"
        },
        "sections": {
          "advanced_options": {
            "name": "[%key:component::template::common::advanced_options%]",
            "data": {
              "availability": "[%key:component::template::common::availability%]"
            }
          }
        },
        "title": "Template vacuum"
      }
    }
  },
  "selector": {
    "alarm_control_panel_code_format": {
      "options": {
        "no_code": "No code format",
        "number": "Number",
        "text": "Text"
      }
    },
    "binary_sensor_device_class": {
      "options": {
        "battery": "[%key:component::binary_sensor::entity_component::battery::name%]",
        "battery_charging": "[%key:component::binary_sensor::entity_component::battery_charging::name%]",
        "carbon_monoxide": "[%key:component::binary_sensor::entity_component::carbon_monoxide::name%]",
        "cold": "[%key:component::binary_sensor::entity_component::cold::name%]",
        "connectivity": "[%key:component::binary_sensor::entity_component::connectivity::name%]",
        "door": "[%key:component::binary_sensor::entity_component::door::name%]",
        "garage_door": "[%key:component::binary_sensor::entity_component::garage_door::name%]",
        "gas": "[%key:component::binary_sensor::entity_component::gas::name%]",
        "heat": "[%key:component::binary_sensor::entity_component::heat::name%]",
        "light": "[%key:component::binary_sensor::entity_component::light::name%]",
        "lock": "[%key:component::binary_sensor::entity_component::lock::name%]",
        "moisture": "[%key:component::binary_sensor::entity_component::moisture::name%]",
        "motion": "[%key:component::binary_sensor::entity_component::motion::name%]",
        "moving": "[%key:component::binary_sensor::entity_component::moving::name%]",
        "occupancy": "[%key:component::binary_sensor::entity_component::occupancy::name%]",
        "opening": "[%key:component::binary_sensor::entity_component::opening::name%]",
        "plug": "[%key:component::binary_sensor::entity_component::plug::name%]",
        "power": "[%key:component::binary_sensor::entity_component::power::name%]",
        "presence": "[%key:component::binary_sensor::entity_component::presence::name%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::name%]",
        "running": "[%key:component::binary_sensor::entity_component::running::name%]",
        "safety": "[%key:component::binary_sensor::entity_component::safety::name%]",
        "smoke": "[%key:component::binary_sensor::entity_component::smoke::name%]",
        "sound": "[%key:component::binary_sensor::entity_component::sound::name%]",
        "tamper": "[%key:component::binary_sensor::entity_component::tamper::name%]",
        "update": "[%key:component::binary_sensor::entity_component::update::name%]",
        "vibration": "[%key:component::binary_sensor::entity_component::vibration::name%]",
        "window": "[%key:component::binary_sensor::entity_component::window::name%]"
      }
    },
    "button_device_class": {
      "options": {
        "identify": "[%key:component::button::entity_component::identify::name%]",
        "restart": "[%key:common::action::restart%]",
        "update": "[%key:component::button::entity_component::update::name%]"
      }
    },
    "cover_device_class": {
      "options": {
        "awning": "[%key:component::cover::entity_component::awning::name%]",
        "blind": "[%key:component::cover::entity_component::blind::name%]",
        "curtain": "[%key:component::cover::entity_component::curtain::name%]",
        "damper": "[%key:component::cover::entity_component::damper::name%]",
        "door": "[%key:component::cover::entity_component::door::name%]",
        "garage": "[%key:component::cover::entity_component::garage::name%]",
        "gate": "[%key:component::cover::entity_component::gate::name%]",
        "shade": "[%key:component::cover::entity_component::shade::name%]",
        "shutter": "[%key:component::cover::entity_component::shutter::name%]",
        "window": "[%key:component::cover::entity_component::window::name%]"
      }
    },
    "sensor_device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "area": "[%key:component::sensor::entity_component::area::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "blood_glucose_concentration": "[%key:component::sensor::entity_component::blood_glucose_concentration::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "conductivity": "[%key:component::sensor::entity_component::conductivity::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "data_size": "[%key:component::sensor::entity_component::data_size::name%]",
        "date": "[%key:component::sensor::entity_component::date::name%]",
        "distance": "[%key:component::sensor::entity_component::distance::name%]",
        "duration": "[%key:component::sensor::entity_component::duration::name%]",
        "energy": "[%key:component::sensor::entity_component::energy::name%]",
        "energy_distance": "[%key:component::sensor::entity_component::energy_distance::name%]",
        "energy_storage": "[%key:component::sensor::entity_component::energy_storage::name%]",
        "frequency": "[%key:component::sensor::entity_component::frequency::name%]",
        "gas": "[%key:component::sensor::entity_component::gas::name%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "illuminance": "[%key:component::sensor::entity_component::illuminance::name%]",
        "irradiance": "[%key:component::sensor::entity_component::irradiance::name%]",
        "moisture": "[%key:component::sensor::entity_component::moisture::name%]",
        "monetary": "[%key:component::sensor::entity_component::monetary::name%]",
        "nitrogen_dioxide": "[%key:component::sensor::entity_component::nitrogen_dioxide::name%]",
        "nitrogen_monoxide": "[%key:component::sensor::entity_component::nitrogen_monoxide::name%]",
        "nitrous_oxide": "[%key:component::sensor::entity_component::nitrous_oxide::name%]",
        "ozone": "[%key:component::sensor::entity_component::ozone::name%]",
        "ph": "[%key:component::sensor::entity_component::ph::name%]",
        "pm1": "[%key:component::sensor::entity_component::pm1::name%]",
        "pm10": "[%key:component::sensor::entity_component::pm10::name%]",
        "pm25": "[%key:component::sensor::entity_component::pm25::name%]",
        "power": "[%key:component::sensor::entity_component::power::name%]",
        "power_factor": "[%key:component::sensor::entity_component::power_factor::name%]",
        "precipitation": "[%key:component::sensor::entity_component::precipitation::name%]",
        "precipitation_intensity": "[%key:component::sensor::entity_component::precipitation_intensity::name%]",
        "pressure": "[%key:component::sensor::entity_component::pressure::name%]",
        "reactive_energy": "[%key:component::sensor::entity_component::reactive_energy::name%]",
        "reactive_power": "[%key:component::sensor::entity_component::reactive_power::name%]",
        "signal_strength": "[%key:component::sensor::entity_component::signal_strength::name%]",
        "sound_pressure": "[%key:component::sensor::entity_component::sound_pressure::name%]",
        "speed": "[%key:component::sensor::entity_component::speed::name%]",
        "sulphur_dioxide": "[%key:component::sensor::entity_component::sulphur_dioxide::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
        "timestamp": "[%key:component::sensor::entity_component::timestamp::name%]",
        "volatile_organic_compounds": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "volatile_organic_compounds_parts": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "voltage": "[%key:component::sensor::entity_component::voltage::name%]",
        "volume": "[%key:component::sensor::entity_component::volume::name%]",
        "volume_flow_rate": "[%key:component::sensor::entity_component::volume_flow_rate::name%]",
        "volume_storage": "[%key:component::sensor::entity_component::volume_storage::name%]",
        "water": "[%key:component::sensor::entity_component::water::name%]",
        "weight": "[%key:component::sensor::entity_component::weight::name%]",
        "wind_direction": "[%key:component::sensor::entity_component::wind_direction::name%]",
        "wind_speed": "[%key:component::sensor::entity_component::wind_speed::name%]"
      }
    },
    "sensor_state_class": {
      "options": {
        "measurement": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::measurement%]",
        "measurement_angle": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::measurement_angle%]",
        "total": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total%]",
        "total_increasing": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total_increasing%]"
      }
    },
    "sensor_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    }
  },
  "services": {
    "reload": {
      "name": "[%key:common::action::reload%]",
      "description": "Reloads template entities from the YAML-configuration."
    }
  },
  "exceptions": {
    "code_format_template_error": {
      "message": "Error evaluating code format template \"{code_format_template}\" for {entity_id}: {cause}"
    }
  }
}
