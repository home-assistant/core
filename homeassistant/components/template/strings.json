{
  "config": {
    "step": {
      "binary_sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::config::step::sensor::data::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::config::step::sensor::data::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "Template binary sensor"
      },
      "button": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::config::step::sensor::data::device_class%]",
          "name": "[%key:common::config_flow::data::name%]",
          "press": "Actions on press"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "Template button"
      },
      "image": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "url": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "Template image"
      },
      "sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "Device class",
          "name": "[%key:common::config_flow::data::name%]",
          "state_class": "[%key:component::sensor::entity_component::_::state_attributes::state_class::name%]",
          "state": "State template",
          "unit_of_measurement": "Unit of measurement"
        },
        "data_description": {
          "device_id": "Select a device to link to this entity."
        },
        "title": "Template sensor"
      },
      "user": {
        "description": "This helper allows you to create helper entities that define their state using a template.",
        "menu_options": {
          "binary_sensor": "Template a binary sensor",
          "button": "Template a button",
          "image": "Template a image",
          "sensor": "Template a sensor",
          "switch": "Template a switch"
        },
        "title": "Template helper"
      },
      "switch": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "turn_off": "Actions on turn off",
          "turn_on": "Actions on turn on",
          "state": "[%key:component::template::config::step::sensor::data::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "Template switch"
      }
    }
  },
  "options": {
    "step": {
      "binary_sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "state": "[%key:component::template::config::step::sensor::data::state%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "[%key:component::template::config::step::binary_sensor::title%]"
      },
      "button": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "press": "[%key:component::template::config::step::button::data::press%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "[%key:component::template::config::step::button::title%]"
      },
      "image": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "url": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "[%key:component::template::config::step::image::title%]"
      },
      "sensor": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "device_class": "[%key:component::template::config::step::sensor::data::device_class%]",
          "state_class": "[%key:component::sensor::entity_component::_::state_attributes::state_class::name%]",
          "state": "[%key:component::template::config::step::sensor::data::state%]",
          "unit_of_measurement": "[%key:component::template::config::step::sensor::data::unit_of_measurement%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "[%key:component::template::config::step::sensor::title%]"
      },
      "switch": {
        "data": {
          "device_id": "[%key:common::config_flow::data::device%]",
          "name": "[%key:common::config_flow::data::name%]",
          "state": "[%key:component::template::config::step::sensor::data::state%]",
          "turn_off": "[%key:component::template::config::step::switch::data::turn_off%]",
          "turn_on": "[%key:component::template::config::step::switch::data::turn_on%]"
        },
        "data_description": {
          "device_id": "[%key:component::template::config::step::sensor::data_description::device_id%]"
        },
        "title": "[%key:component::template::config::step::switch::title%]"
      }
    }
  },
  "selector": {
    "binary_sensor_device_class": {
      "options": {
        "battery": "[%key:component::binary_sensor::entity_component::battery::name%]",
        "battery_charging": "[%key:component::binary_sensor::entity_component::battery_charging::name%]",
        "carbon_monoxide": "[%key:component::binary_sensor::entity_component::carbon_monoxide::name%]",
        "cold": "[%key:component::binary_sensor::entity_component::cold::name%]",
        "connectivity": "[%key:component::binary_sensor::entity_component::connectivity::name%]",
        "door": "[%key:component::binary_sensor::entity_component::door::name%]",
        "garage_door": "[%key:component::binary_sensor::entity_component::garage_door::name%]",
        "gas": "[%key:component::binary_sensor::entity_component::gas::name%]",
        "heat": "[%key:component::binary_sensor::entity_component::heat::name%]",
        "light": "[%key:component::binary_sensor::entity_component::light::name%]",
        "lock": "[%key:component::binary_sensor::entity_component::lock::name%]",
        "moisture": "[%key:component::binary_sensor::entity_component::moisture::name%]",
        "motion": "[%key:component::binary_sensor::entity_component::motion::name%]",
        "moving": "[%key:component::binary_sensor::entity_component::moving::name%]",
        "occupancy": "[%key:component::binary_sensor::entity_component::occupancy::name%]",
        "opening": "[%key:component::binary_sensor::entity_component::opening::name%]",
        "plug": "[%key:component::binary_sensor::entity_component::plug::name%]",
        "power": "[%key:component::binary_sensor::entity_component::power::name%]",
        "presence": "[%key:component::binary_sensor::entity_component::presence::name%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::name%]",
        "running": "[%key:component::binary_sensor::entity_component::running::name%]",
        "safety": "[%key:component::binary_sensor::entity_component::safety::name%]",
        "smoke": "[%key:component::binary_sensor::entity_component::smoke::name%]",
        "sound": "[%key:component::binary_sensor::entity_component::sound::name%]",
        "tamper": "[%key:component::binary_sensor::entity_component::tamper::name%]",
        "update": "[%key:component::binary_sensor::entity_component::update::name%]",
        "vibration": "[%key:component::binary_sensor::entity_component::vibration::name%]",
        "window": "[%key:component::binary_sensor::entity_component::window::name%]"
      }
    },
    "button_device_class": {
      "options": {
        "identify": "[%key:component::button::entity_component::identify::name%]",
        "restart": "[%key:common::action::restart%]",
        "update": "[%key:component::button::entity_component::update::name%]"
      }
    },
    "sensor_device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "conductivity": "[%key:component::sensor::entity_component::conductivity::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "data_size": "[%key:component::sensor::entity_component::data_size::name%]",
        "date": "[%key:component::sensor::entity_component::date::name%]",
        "distance": "[%key:component::sensor::entity_component::distance::name%]",
        "duration": "[%key:component::sensor::entity_component::duration::name%]",
        "energy": "[%key:component::sensor::entity_component::energy::name%]",
        "energy_storage": "[%key:component::sensor::entity_component::energy_storage::name%]",
        "frequency": "[%key:component::sensor::entity_component::frequency::name%]",
        "gas": "[%key:component::sensor::entity_component::gas::name%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "illuminance": "[%key:component::sensor::entity_component::illuminance::name%]",
        "irradiance": "[%key:component::sensor::entity_component::irradiance::name%]",
        "moisture": "[%key:component::sensor::entity_component::moisture::name%]",
        "monetary": "[%key:component::sensor::entity_component::monetary::name%]",
        "nitrogen_dioxide": "[%key:component::sensor::entity_component::nitrogen_dioxide::name%]",
        "nitrogen_monoxide": "[%key:component::sensor::entity_component::nitrogen_monoxide::name%]",
        "nitrous_oxide": "[%key:component::sensor::entity_component::nitrous_oxide::name%]",
        "ozone": "[%key:component::sensor::entity_component::ozone::name%]",
        "ph": "[%key:component::sensor::entity_component::ph::name%]",
        "pm1": "[%key:component::sensor::entity_component::pm1::name%]",
        "pm10": "[%key:component::sensor::entity_component::pm10::name%]",
        "pm25": "[%key:component::sensor::entity_component::pm25::name%]",
        "power": "[%key:component::sensor::entity_component::power::name%]",
        "power_factor": "[%key:component::sensor::entity_component::power_factor::name%]",
        "precipitation": "[%key:component::sensor::entity_component::precipitation::name%]",
        "precipitation_intensity": "[%key:component::sensor::entity_component::precipitation_intensity::name%]",
        "pressure": "[%key:component::sensor::entity_component::pressure::name%]",
        "reactive_power": "[%key:component::sensor::entity_component::reactive_power::name%]",
        "signal_strength": "[%key:component::sensor::entity_component::signal_strength::name%]",
        "sound_pressure": "[%key:component::sensor::entity_component::sound_pressure::name%]",
        "speed": "[%key:component::sensor::entity_component::speed::name%]",
        "sulphur_dioxide": "[%key:component::sensor::entity_component::sulphur_dioxide::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]",
        "timestamp": "[%key:component::sensor::entity_component::timestamp::name%]",
        "volatile_organic_compounds": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "volatile_organic_compounds_parts": "[%key:component::sensor::entity_component::volatile_organic_compounds::name%]",
        "voltage": "[%key:component::sensor::entity_component::voltage::name%]",
        "volume": "[%key:component::sensor::entity_component::volume::name%]",
        "volume_flow_rate": "[%key:component::sensor::entity_component::volume_flow_rate::name%]",
        "volume_storage": "[%key:component::sensor::entity_component::volume_storage::name%]",
        "water": "[%key:component::sensor::entity_component::water::name%]",
        "weight": "[%key:component::sensor::entity_component::weight::name%]",
        "wind_speed": "[%key:component::sensor::entity_component::wind_speed::name%]"
      }
    },
    "sensor_state_class": {
      "options": {
        "measurement": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::measurement%]",
        "total": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total%]",
        "total_increasing": "[%key:component::sensor::entity_component::_::state_attributes::state_class::state::total_increasing%]"
      }
    },
    "sensor_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    }
  },
  "services": {
    "reload": {
      "name": "[%key:common::action::reload%]",
      "description": "Reloads template entities from the YAML-configuration."
    }
  },
  "exceptions": {
    "code_format_template_error": {
      "message": "Error evaluating code format template \"{code_format_template}\" for {entity_id}: {cause}"
    }
  }
}
