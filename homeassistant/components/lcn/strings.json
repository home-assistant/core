{
  "device_automation": {
    "trigger_type": {
      "transmitter": "Transmitter code received",
      "transponder": "Transponder code received",
      "fingerprint": "Fingerprint code received",
      "codelock": "Code lock code received",
      "send_keys": "Send keys received"
    },
    "extra_fields": {
      "action": "Action",
      "code": "Code",
      "key": "Key",
      "level": "Level"
    }
  },
  "config": {
    "step": {
      "user": {
        "title": "Setup LCN host",
        "description": "Set up new connection to LCN host.",
        "data": {
          "host": "[%key:common::config_flow::data::name%]",
          "ip_address": "[%key:common::config_flow::data::ip%]",
          "port": "[%key:common::config_flow::data::port%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "sk_num_tries": "Segment coupler scan attempts",
          "dim_mode": "Dimming mode",
          "acknowledge": "Request acknowledgement from modules"
        },
        "data_description": {
          "dim_mode": "The number of steps used for dimming outputs.",
          "acknowledge": "Retry sendig commands if no response is received (increases bus traffic)."
        }
      },
      "reconfigure_confirm": {
        "title": "Reconfigure LCN host",
        "description": "Reconfigure connection to LCN host.",
        "data": {
          "ip_address": "[%key:common::config_flow::data::ip%]",
          "port": "[%key:common::config_flow::data::port%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "sk_num_tries": "[%key:component::lcn::config::step::user::data::sk_num_tries%]",
          "dim_mode": "[%key:component::lcn::config::step::user::data::dim_mode%]",
          "acknowledge": "[%key:component::lcn::config::step::user::data::acknowledge%]"
        },
        "data_description": {
          "dim_mode": "[%key:component::lcn::config::step::user::data_description::dim_mode%]",
          "acknowledge": "[%key:component::lcn::config::step::user::data_description::acknowledge%]"
        }
      }
    },
    "error": {
      "authentication_error": "Authentication failed. Wrong username or password.",
      "license_error": "Maximum number of connections was reached. An additional licence key is required.",
      "connection_refused": "Unable to connect to PCHK. Check IP and port.",
      "already_configured": "PCHK connection using the same ip address/port is already configured."
    },
    "abort": {
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]"
    }
  },
  "issues": {
    "authentication_error": {
      "title": "Authentication failed.",
      "description": "Configuring LCN using YAML is being removed but there was an error importing your YAML configuration.\n\nEnsure username and password are correct.\n\nConsider removing the LCN YAML configuration from your configuration.yaml file and continue to [set up the integration]({url}) manually."
    },
    "license_error": {
      "title": "Maximum number of connections was reached.",
      "description": "Configuring LCN using YAML is being removed but there was an error importing your YAML configuration.\n\nEnsure sufficient PCHK licenses are registered and restart Home Assistant.\n\nConsider removing the LCN YAML configuration from your configuration.yaml file and continue to [set up the integration]({url}) manually."
    },
    "connection_refused": {
      "title": "Unable to connect to PCHK.",
      "description": "Configuring LCN using YAML is being removed but there was an error importing your YAML configuration.\n\nEnsure the connection (IP and port) to the LCN bus coupler is correct.\n\nConsider removing the LCN YAML configuration from your configuration.yaml file and continue to [set up the integration]({url}) manually."
    }
  },
  "services": {
    "output_abs": {
      "name": "Output absolute brightness",
      "description": "Sets absolute brightness of output port in percent.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "Module address."
        },
        "output": {
          "name": "Output",
          "description": "Output port."
        },
        "brightness": {
          "name": "Brightness",
          "description": "Absolute brightness."
        },
        "transition": {
          "name": "Transition",
          "description": "Transition time."
        }
      }
    },
    "output_rel": {
      "name": "Output relative brightness",
      "description": "Sets relative brightness of output port in percent.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "output": {
          "name": "[%key:component::lcn::services::output_abs::fields::output::name%]",
          "description": "[%key:component::lcn::services::output_abs::fields::output::description%]"
        },
        "brightness": {
          "name": "Brightness",
          "description": "Relative brightness."
        }
      }
    },
    "output_toggle": {
      "name": "Toggle output",
      "description": "Toggles output port.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "output": {
          "name": "[%key:component::lcn::services::output_abs::fields::output::name%]",
          "description": "[%key:component::lcn::services::output_abs::fields::output::description%]"
        },
        "transition": {
          "name": "Transition",
          "description": "[%key:component::lcn::services::output_abs::fields::transition::description%]"
        }
      }
    },
    "relays": {
      "name": "Relays",
      "description": "Sets the relays status.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "state": {
          "name": "State",
          "description": "Relays states as string (1=on, 2=off, t=toggle, -=no change)."
        }
      }
    },
    "led": {
      "name": "LED",
      "description": "Sets the led state.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "led": {
          "name": "[%key:component::lcn::services::led::name%]",
          "description": "Led."
        },
        "state": {
          "name": "State",
          "description": "Led state."
        }
      }
    },
    "var_abs": {
      "name": "Set absolute variable",
      "description": "Sets absolute value of a variable or setpoint.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "variable": {
          "name": "Variable",
          "description": "Variable or setpoint name."
        },
        "value": {
          "name": "Value",
          "description": "Value to set."
        },
        "unit_of_measurement": {
          "name": "Unit of measurement",
          "description": "Unit of value."
        }
      }
    },
    "var_reset": {
      "name": "Reset variable",
      "description": "Resets value of variable or setpoint.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "variable": {
          "name": "[%key:component::lcn::services::var_abs::fields::variable::name%]",
          "description": "[%key:component::lcn::services::var_abs::fields::variable::description%]"
        }
      }
    },
    "var_rel": {
      "name": "Shift variable",
      "description": "Shift value of a variable, setpoint or threshold.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "variable": {
          "name": "[%key:component::lcn::services::var_abs::fields::variable::name%]",
          "description": "[%key:component::lcn::services::var_abs::fields::variable::description%]"
        },
        "value": {
          "name": "Value",
          "description": "Shift value."
        },
        "unit_of_measurement": {
          "name": "Unit of measurement",
          "description": "[%key:component::lcn::services::var_abs::fields::unit_of_measurement::description%]"
        },
        "value_reference": {
          "name": "Reference value",
          "description": "Reference value for setpoint and threshold."
        }
      }
    },
    "lock_regulator": {
      "name": "Lock regulator",
      "description": "Locks a regulator setpoint.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "setpoint": {
          "name": "Setpoint",
          "description": "Setpoint name."
        },
        "state": {
          "name": "State",
          "description": "New setpoint state."
        }
      }
    },
    "send_keys": {
      "name": "Send keys",
      "description": "Sends keys (which executes bound commands).",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "keys": {
          "name": "Keys",
          "description": "Keys to send."
        },
        "state": {
          "name": "State",
          "description": "Key state upon sending (must be hit for deferred)."
        },
        "time": {
          "name": "Time",
          "description": "Send delay."
        },
        "time_unit": {
          "name": "Time unit",
          "description": "Time unit of send delay."
        }
      }
    },
    "lock_keys": {
      "name": "Lock keys",
      "description": "Locks keys.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "table": {
          "name": "Table",
          "description": "Table with keys to lock (must be A for interval)."
        },
        "state": {
          "name": "State",
          "description": "Key lock states as string (1=on, 2=off, T=toggle, -=nochange)."
        },
        "time": {
          "name": "Time",
          "description": "Lock interval."
        },
        "time_unit": {
          "name": "[%key:component::lcn::services::send_keys::fields::time_unit::name%]",
          "description": "Time unit of lock interval."
        }
      }
    },
    "dyn_text": {
      "name": "Dynamic text",
      "description": "Sends dynamic text to LCN-GTxD displays.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "row": {
          "name": "Row",
          "description": "Text row."
        },
        "text": {
          "name": "Text",
          "description": "Text to send (up to 60 characters encoded as UTF-8)."
        }
      }
    },
    "pck": {
      "name": "PCK",
      "description": "Sends arbitrary PCK command.",
      "fields": {
        "address": {
          "name": "Address",
          "description": "[%key:component::lcn::services::output_abs::fields::address::description%]"
        },
        "pck": {
          "name": "[%key:component::lcn::services::pck::name%]",
          "description": "PCK command (without address header)."
        }
      }
    }
  }
}
