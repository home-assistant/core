{
  "config": {
    "step": {
      "user": {
        "data": {
          "webhook_url": "EnergyID webhook URL",
          "entity_id": "Home Assistant entity ID",
          "metric": "EnergyID metric",
          "metric_kind": "EnergyID metric kind",
          "unit": "Unit of measurement"
        },
        "data_description": {
          "webhook_url": "The unique URL provided by EnergyID to receive webhook data. You'll find this in your EnergyID account settings under 'Webhooks' or 'Integrations'. **Important:** Ensure this URL is correctly copied.",
          "entity_id": "The ID of the Home Assistant entity (e.g., sensor.power_meter) that you want to send data from to EnergyID. Select an entity that provides numerical state values.",
          "metric": "The EnergyID metric name that best describes the data you are sending (e.g., 'electricity_consumption', 'gas_consumption'). Choose from the dropdown list provided.",
          "metric_kind": "The kind of metric. Select the option that matches your data: 'cumulative' (total increasing value), 'delta' (change in value), 'gauge' (instantaneous value), or 'total' (total value).",
          "unit": "The unit of measurement for the chosen metric (e.g., 'kWh', 'mÂ³'). Select a unit that is compatible with the selected EnergyID metric and matches the unit of your Home Assistant entity."
        }
      }
    },
    "error": {
      "cannot_connect": "Failed to connect to EnergyID",
      "invalid_url": "Invalid webhook URL",
      "unknown": "Unexpected error occurred"
    },
    "abort": {
      "already_configured_entity": "This entity is already configured",
      "already_configured_webhook": "This webhook URL is already configured",
      "already_configured": "This webhook URL or entity is already configured",
      "already_configured_service": "This exact combination of webhook URL, entity, and metric is already configured"
    }
  },
  "options": {
    "step": {
      "init": {
        "data": {
          "data_interval": "EnergyID data interval",
          "upload_interval": "Upload interval (seconds)"
        }
      }
    },
    "error": {
      "invalid_interval": "Invalid interval for this webhook policy."
    }
  }
}
